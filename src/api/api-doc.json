[
    {
        "bodyKey": "get_/admin/app/version/detail",
        "url": "/admin/app/version/detail",
        "pureUrl": "/admin/app/version/detail",
        "pathReqUrl": "/admin/app/version/detail",
        "method": "get",
        "apiName": "获取版本详情",
        "key": "AdminAppVersionDetailGet",
        "fnName": "adminAppVersionDetailGet",
        "requestBaseName": "IAdminAppVersionDetailGet",
        "requestName": [
            "IAdminAppVersionDetailGet"
        ],
        "responseBaseName": "OAdminAppVersionDetailGet",
        "responseName": [
            "OAdminAppVersionDetailGet"
        ],
        "responseValueName": [
            "OAdminAppVersionDetailGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "1mZ3KYr4BC",
                    "enable": true,
                    "name": "id",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取版本详情 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: \n * @return Promise<OAdminAppVersionDetailGet>\n */\nexport const adminAppVersionDetailGet = async (params?: IAdminAppVersionDetailGet) => {\n\treturn get<OAdminAppVersionDetailGet>(`/admin/app/version/detail`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取版本详情 buildReqGetOrPostTyped\n * @url /admin/app/version/detail\n */\nexport interface IAdminAppVersionDetailGet{\n\tid: number;\n}",
        "resCode": "/**\n * @description 获取版本详情 buildResAnyTyped\n * @url /admin/app/version/detail\n */\nexport type OAdminAppVersionDetailGet = {\n}",
        "resValueCode": "/**\n * @description 获取版本详情 buildResAnyTyped\n * @url /admin/app/version/detail\n */\nexport const OAdminAppVersionDetailGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/app/version/{x}",
        "url": "/admin/app/version/{id}",
        "pureUrl": "/admin/app/version/{x}",
        "pathReqUrl": "/admin/app/version/${id}",
        "method": "delete",
        "apiName": "删除版本",
        "key": "AdminAppVersionIdDelete",
        "fnName": "adminAppVersionIdDelete",
        "requestBaseName": "IAdminAppVersionIdDelete",
        "requestName": [
            "IAdminAppVersionIdDelete"
        ],
        "responseBaseName": "OAdminAppVersionIdDelete",
        "responseName": [
            "OAdminAppVersionIdDelete"
        ],
        "responseValueName": [
            "OAdminAppVersionIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除版本 buildFnPathCode\n * @path {string id 必填: }\n * @return Promise<OAdminAppVersionIdDelete>\n */\nexport const adminAppVersionIdDelete = async (id: string) => {\n\treturn del<OAdminAppVersionIdDelete>(`/admin/app/version/${id}`)\n}",
        "reqCode": "/**\n * @description 删除版本 buildReqGetOrPostTyped\n * @url /admin/app/version/{id}\n */\nexport interface IAdminAppVersionIdDelete{\n}",
        "resCode": "/**\n * @description 删除版本 buildResAnyTyped\n * @url /admin/app/version/{x}\n */\nexport type OAdminAppVersionIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除版本 buildResAnyTyped\n * @url /admin/app/version/{x}\n */\nexport const OAdminAppVersionIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/app/version/list",
        "url": "/admin/app/version/list",
        "pureUrl": "/admin/app/version/list",
        "pathReqUrl": "/admin/app/version/list",
        "method": "get",
        "apiName": "获取版本列表",
        "key": "AdminAppVersionListGet",
        "fnName": "adminAppVersionListGet",
        "requestBaseName": "IAdminAppVersionListGet",
        "requestName": [
            "IAdminAppVersionListGet"
        ],
        "responseBaseName": "OAdminAppVersionListGet",
        "responseName": [
            "OAdminAppVersionListGet"
        ],
        "responseValueName": [
            "OAdminAppVersionListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "7EZpFrOJvc",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "2kL44jApyq",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取版本列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminAppVersionListGet>\n */\nexport const adminAppVersionListGet = async (params?: IAdminAppVersionListGet) => {\n\treturn get<OAdminAppVersionListGet>(`/admin/app/version/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取版本列表 buildReqGetOrPostTyped\n * @url /admin/app/version/list\n */\nexport interface IAdminAppVersionListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取版本列表 buildResAnyTyped\n * @url /admin/app/version/list\n */\nexport type OAdminAppVersionListGet = {\n}",
        "resValueCode": "/**\n * @description 获取版本列表 buildResAnyTyped\n * @url /admin/app/version/list\n */\nexport const OAdminAppVersionListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/app/version/name",
        "url": "/admin/app/version/name",
        "pureUrl": "/admin/app/version/name",
        "pathReqUrl": "/admin/app/version/name",
        "method": "get",
        "apiName": "获取版本号",
        "key": "AdminAppVersionNameGet",
        "fnName": "adminAppVersionNameGet",
        "requestBaseName": "IAdminAppVersionNameGet",
        "requestName": [
            "IAdminAppVersionNameGet"
        ],
        "responseBaseName": "OAdminAppVersionNameGet",
        "responseName": [
            "OAdminAppVersionNameGet"
        ],
        "responseValueName": [
            "OAdminAppVersionNameGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "地址",
                    "type": "string",
                    "id": "D7iErmLhxC",
                    "enable": true,
                    "name": "url",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取版本号 buildFnGetOrPostCode\n * \n * @param {string} params.url 必填: 地址\n * @return Promise<OAdminAppVersionNameGet>\n */\nexport const adminAppVersionNameGet = async (params?: IAdminAppVersionNameGet) => {\n\treturn get<OAdminAppVersionNameGet>(`/admin/app/version/name`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取版本号 buildReqGetOrPostTyped\n * @url /admin/app/version/name\n */\nexport interface IAdminAppVersionNameGet{\n\turl: string; // 地址\n}",
        "resCode": "/**\n * @description 获取版本号 buildResAnyTyped\n * @url /admin/app/version/name\n */\nexport type OAdminAppVersionNameGet = {\n}",
        "resValueCode": "/**\n * @description 获取版本号 buildResAnyTyped\n * @url /admin/app/version/name\n */\nexport const OAdminAppVersionNameGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/app/version",
        "url": "/admin/app/version",
        "pureUrl": "/admin/app/version",
        "pathReqUrl": "/admin/app/version",
        "method": "post",
        "apiName": "添加版本",
        "key": "AdminAppVersionPost",
        "fnName": "adminAppVersionPost",
        "requestBaseName": "IAdminAppVersionPost",
        "requestName": [
            "IAdminAppVersionPost"
        ],
        "responseBaseName": "OAdminAppVersionPost",
        "responseName": [
            "OAdminAppVersionPost"
        ],
        "responseValueName": [
            "OAdminAppVersionPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "description": "更新描述",
                    "oldType": "string"
                },
                {
                    "name": "isForce",
                    "type": "number",
                    "description": "是否强制更新 1-强制 0-不强制",
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "标题描述",
                    "oldType": "string"
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "app地址",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加版本 buildFnGetOrPostCode\n * \n * @param {string} params.content 可选: 更新描述\n * @param {number} params.isForce 可选: 是否强制更新 1-强制 0-不强制\n * @param {string} params.name 可选: 标题描述\n * @param {string} params.url 必填: app地址\n * @return Promise<OAdminAppVersionPost>\n */\nexport const adminAppVersionPost = async (params?: IAdminAppVersionPost) => {\n\treturn post<OAdminAppVersionPost>(`/admin/app/version`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加版本 buildReqGetOrPostTyped\n * @url /admin/app/version\n */\nexport interface IAdminAppVersionPost{\n\tcontent?: string; // 更新描述\n\tisForce?: number; // 是否强制更新 1-强制 0-不强制\n\tname?: string; // 标题描述\n\turl: string; // app地址\n}",
        "resCode": "/**\n * @description 添加版本 buildResAnyTyped\n * @url /admin/app/version\n */\nexport type OAdminAppVersionPost = {\n}",
        "resValueCode": "/**\n * @description 添加版本 buildResAnyTyped\n * @url /admin/app/version\n */\nexport const OAdminAppVersionPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/app/version",
        "url": "/admin/app/version",
        "pureUrl": "/admin/app/version",
        "pathReqUrl": "/admin/app/version",
        "method": "put",
        "apiName": "修改版本",
        "key": "AdminAppVersionPut",
        "fnName": "adminAppVersionPut",
        "requestBaseName": "IAdminAppVersionPut",
        "requestName": [
            "IAdminAppVersionPut"
        ],
        "responseBaseName": "OAdminAppVersionPut",
        "responseName": [
            "OAdminAppVersionPut"
        ],
        "responseValueName": [
            "OAdminAppVersionPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "description": "更新描述",
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "isForce",
                    "type": "number",
                    "description": "是否强制更新 1-强制 0-不强制",
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "标题描述",
                    "oldType": "string"
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "app地址",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改版本 buildFnGetOrPostCode\n * \n * @param {string} params.content 可选: 更新描述\n * @param {number} params.id 必填: ID\n * @param {number} params.isForce 可选: 是否强制更新 1-强制 0-不强制\n * @param {string} params.name 可选: 标题描述\n * @param {string} params.url 必填: app地址\n * @return Promise<OAdminAppVersionPut>\n */\nexport const adminAppVersionPut = async (params?: IAdminAppVersionPut) => {\n\treturn put<OAdminAppVersionPut>(`/admin/app/version`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改版本 buildReqGetOrPostTyped\n * @url /admin/app/version\n */\nexport interface IAdminAppVersionPut{\n\tcontent?: string; // 更新描述\n\tid: number; // ID\n\tisForce?: number; // 是否强制更新 1-强制 0-不强制\n\tname?: string; // 标题描述\n\turl: string; // app地址\n}",
        "resCode": "/**\n * @description 修改版本 buildResAnyTyped\n * @url /admin/app/version\n */\nexport type OAdminAppVersionPut = {\n}",
        "resValueCode": "/**\n * @description 修改版本 buildResAnyTyped\n * @url /admin/app/version\n */\nexport const OAdminAppVersionPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/channel/{x}",
        "url": "/admin/channel/{id}",
        "pureUrl": "/admin/channel/{x}",
        "pathReqUrl": "/admin/channel/${id}",
        "method": "get",
        "apiName": "获取渠道详情",
        "key": "AdminChannelIdGet",
        "fnName": "adminChannelIdGet",
        "requestBaseName": "IAdminChannelIdGet",
        "requestName": [
            "IAdminChannelIdGet"
        ],
        "responseBaseName": "OAdminChannelIdGet",
        "responseName": [
            "OAdminChannelIdGet"
        ],
        "responseValueName": [
            "OAdminChannelIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取渠道详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminChannelIdGet>\n */\nexport const adminChannelIdGet = async (id: number) => {\n\treturn get<OAdminChannelIdGet>(`/admin/channel/${id}`)\n}",
        "reqCode": "/**\n * @description 获取渠道详情 buildReqGetOrPostTyped\n * @url /admin/channel/{id}\n */\nexport interface IAdminChannelIdGet{\n}",
        "resCode": "/**\n * @description 获取渠道详情 buildResAnyTyped\n * @url /admin/channel/{x}\n */\nexport type OAdminChannelIdGet = {\n}",
        "resValueCode": "/**\n * @description 获取渠道详情 buildResAnyTyped\n * @url /admin/channel/{x}\n */\nexport const OAdminChannelIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/channel/list",
        "url": "/admin/channel/list",
        "pureUrl": "/admin/channel/list",
        "pathReqUrl": "/admin/channel/list",
        "method": "get",
        "apiName": "获取渠道列表",
        "key": "AdminChannelListGet",
        "fnName": "adminChannelListGet",
        "requestBaseName": "IAdminChannelListGet",
        "requestName": [
            "IAdminChannelListGet"
        ],
        "responseBaseName": "OAdminChannelListGet",
        "responseName": [
            "OAdminChannelListGet"
        ],
        "responseValueName": [
            "OAdminChannelListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "t3Y3gffnOY",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取渠道列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @return Promise<OAdminChannelListGet>\n */\nexport const adminChannelListGet = async (params?: IAdminChannelListGet) => {\n\treturn get<OAdminChannelListGet>(`/admin/channel/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取渠道列表 buildReqGetOrPostTyped\n * @url /admin/channel/list\n */\nexport interface IAdminChannelListGet{\n\tkeyword?: string;\n}",
        "resCode": "/**\n * @description 获取渠道列表 buildResAnyTyped\n * @url /admin/channel/list\n */\nexport type OAdminChannelListGet = {\n}",
        "resValueCode": "/**\n * @description 获取渠道列表 buildResAnyTyped\n * @url /admin/channel/list\n */\nexport const OAdminChannelListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/channel",
        "url": "/admin/channel",
        "pureUrl": "/admin/channel",
        "pathReqUrl": "/admin/channel",
        "method": "post",
        "apiName": "添加渠道",
        "key": "AdminChannelPost",
        "fnName": "adminChannelPost",
        "requestBaseName": "IAdminChannelPost",
        "requestName": [
            "IAdminChannelPost"
        ],
        "responseBaseName": "OAdminChannelPost",
        "responseName": [
            "OAdminChannelPost"
        ],
        "responseValueName": [
            "OAdminChannelPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "avatar",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "brokerageList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "manyStart": {
                                "type": "string",
                                "description": "单数范围-开始"
                            },
                            "manyEnd": {
                                "type": "string",
                                "description": "单数范围-结束"
                            },
                            "amount": {
                                "type": "number",
                                "description": "金额"
                            }
                        },
                        "x-apifox-orders": [
                            "manyStart",
                            "manyEnd",
                            "amount"
                        ],
                        "required": [
                            "manyStart",
                            "manyEnd",
                            "amount"
                        ]
                    },
                    "description": "佣金阶梯",
                    "oldType": "any[]"
                },
                {
                    "name": "channelName",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态  0-正常 1-停用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加渠道 buildFnGetOrPostCode\n * \n * @param {string} params.avatar 可选: \n * @param {any[]} params.brokerageList 可选: 佣金阶梯\n * @param {string} params.channelName 必填: \n * @param {string} params.password 必填: \n * @param {string} params.phone 必填: \n * @param {string} params.remark 可选: \n * @param {number} params.status 必填: 状态  0-正常 1-停用\n * @return Promise<OAdminChannelPost>\n */\nexport const adminChannelPost = async (params?: IAdminChannelPost) => {\n\treturn post<OAdminChannelPost>(`/admin/channel`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加渠道 buildReqGetOrPostTyped\n * @url /admin/channel\n */\nexport interface IAdminChannelPost{\n\tavatar?: string;\n\tbrokerageList?: any[]; // 佣金阶梯\n\tchannelName: string;\n\tpassword: string;\n\tphone: string;\n\tremark?: string;\n\tstatus: number; // 状态  0-正常 1-停用\n}",
        "resCode": "/**\n * @description 添加渠道 buildResAnyTyped\n * @url /admin/channel\n */\nexport type OAdminChannelPost = {\n}",
        "resValueCode": "/**\n * @description 添加渠道 buildResAnyTyped\n * @url /admin/channel\n */\nexport const OAdminChannelPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/channel",
        "url": "/admin/channel",
        "pureUrl": "/admin/channel",
        "pathReqUrl": "/admin/channel",
        "method": "put",
        "apiName": "编辑渠道",
        "key": "AdminChannelPut",
        "fnName": "adminChannelPut",
        "requestBaseName": "IAdminChannelPut",
        "requestName": [
            "IAdminChannelPut"
        ],
        "responseBaseName": "OAdminChannelPut",
        "responseName": [
            "OAdminChannelPut"
        ],
        "responseValueName": [
            "OAdminChannelPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "avatar",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "brokerageList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "manyStart": {
                                "type": "string",
                                "description": "单数范围-开始"
                            },
                            "manyEnd": {
                                "type": "string",
                                "description": "单数范围-结束"
                            },
                            "amount": {
                                "type": "number",
                                "description": "金额"
                            }
                        },
                        "x-apifox-orders": [
                            "manyStart",
                            "manyEnd",
                            "amount"
                        ],
                        "required": [
                            "manyStart",
                            "manyEnd",
                            "amount"
                        ]
                    },
                    "description": "佣金阶梯",
                    "oldType": "any[]"
                },
                {
                    "name": "channelName",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态  0-正常 1-停用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑渠道 buildFnGetOrPostCode\n * \n * @param {string} params.avatar 可选: \n * @param {any[]} params.brokerageList 可选: 佣金阶梯\n * @param {string} params.channelName 必填: \n * @param {number} params.id 必填: \n * @param {string} params.phone 必填: \n * @param {string} params.remark 可选: \n * @param {number} params.status 必填: 状态  0-正常 1-停用\n * @return Promise<OAdminChannelPut>\n */\nexport const adminChannelPut = async (params?: IAdminChannelPut) => {\n\treturn put<OAdminChannelPut>(`/admin/channel`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑渠道 buildReqGetOrPostTyped\n * @url /admin/channel\n */\nexport interface IAdminChannelPut{\n\tavatar?: string;\n\tbrokerageList?: any[]; // 佣金阶梯\n\tchannelName: string;\n\tid: number;\n\tphone: string;\n\tremark?: string;\n\tstatus: number; // 状态  0-正常 1-停用\n}",
        "resCode": "/**\n * @description 编辑渠道 buildResAnyTyped\n * @url /admin/channel\n */\nexport type OAdminChannelPut = {\n}",
        "resValueCode": "/**\n * @description 编辑渠道 buildResAnyTyped\n * @url /admin/channel\n */\nexport const OAdminChannelPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/channel/resetPassword",
        "url": "/admin/channel/resetPassword",
        "pureUrl": "/admin/channel/resetPassword",
        "pathReqUrl": "/admin/channel/resetPassword",
        "method": "put",
        "apiName": "重置密码",
        "key": "AdminChannelResetPasswordPut",
        "fnName": "adminChannelResetPasswordPut",
        "requestBaseName": "IAdminChannelResetPasswordPut",
        "requestName": [
            "IAdminChannelResetPasswordPut"
        ],
        "responseBaseName": "OAdminChannelResetPasswordPut",
        "responseName": [
            "OAdminChannelResetPasswordPut"
        ],
        "responseValueName": [
            "OAdminChannelResetPasswordPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "渠道ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 重置密码 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 渠道ID\n * @param {string} params.password 必填: 密码\n * @return Promise<OAdminChannelResetPasswordPut>\n */\nexport const adminChannelResetPasswordPut = async (params?: IAdminChannelResetPasswordPut) => {\n\treturn put<OAdminChannelResetPasswordPut>(`/admin/channel/resetPassword`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 重置密码 buildReqGetOrPostTyped\n * @url /admin/channel/resetPassword\n */\nexport interface IAdminChannelResetPasswordPut{\n\tid: number; // 渠道ID\n\tpassword: string; // 密码\n}",
        "resCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /admin/channel/resetPassword\n */\nexport type OAdminChannelResetPasswordPut = {\n}",
        "resValueCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /admin/channel/resetPassword\n */\nexport const OAdminChannelResetPasswordPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/common/captchaImage",
        "url": "/admin/common/captchaImage",
        "pureUrl": "/admin/common/captchaImage",
        "pathReqUrl": "/admin/common/captchaImage",
        "method": "get",
        "apiName": "生成图形验证码",
        "key": "AdminCommonCaptchaImageGet",
        "fnName": "adminCommonCaptchaImageGet",
        "requestBaseName": "IAdminCommonCaptchaImageGet",
        "requestName": [
            "IAdminCommonCaptchaImageGet"
        ],
        "responseBaseName": "OAdminCommonCaptchaImageGet",
        "responseName": [
            "OAdminCommonCaptchaImageGet"
        ],
        "responseValueName": [
            "OAdminCommonCaptchaImageGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 生成图形验证码 buildFnGetOrPostCode\n * \n * @return Promise<OAdminCommonCaptchaImageGet>\n */\nexport const adminCommonCaptchaImageGet = async (params?: IAdminCommonCaptchaImageGet) => {\n\treturn get<OAdminCommonCaptchaImageGet>(`/admin/common/captchaImage`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 生成图形验证码 buildReqGetOrPostTyped\n * @url /admin/common/captchaImage\n */\nexport interface IAdminCommonCaptchaImageGet{\n}",
        "resCode": "/**\n * @description 生成图形验证码 buildResAnyTyped\n * @url /admin/common/captchaImage\n */\nexport type OAdminCommonCaptchaImageGet = {\n}",
        "resValueCode": "/**\n * @description 生成图形验证码 buildResAnyTyped\n * @url /admin/common/captchaImage\n */\nexport const OAdminCommonCaptchaImageGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/common/country/children/{x}",
        "url": "/admin/common/country/children/{parentId}",
        "pureUrl": "/admin/common/country/children/{x}",
        "pathReqUrl": "/admin/common/country/children/${parentId}",
        "method": "get",
        "apiName": "通过父id获取下级列表",
        "key": "AdminCommonCountryChildrenParentIdGet",
        "fnName": "adminCommonCountryChildrenParentIdGet",
        "requestBaseName": "IAdminCommonCountryChildrenParentIdGet",
        "requestName": [
            "IAdminCommonCountryChildrenParentIdGet"
        ],
        "responseBaseName": "OAdminCommonCountryChildrenParentIdGet",
        "responseName": [
            "OAdminCommonCountryChildrenParentIdGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "parentId#0",
                    "name": "parentId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminCommonCountryChildrenParentIdGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "aliasName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "ancestors": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "chName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "childrenList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "x-apifox-orders": []
                        },
                        "oldType": "array"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "enName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "parentId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "phoneCode": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "sort": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 通过父id获取下级列表 buildFnPathCode\n * @path {number parentId 必填: }\n * @return Promise<OAdminCommonCountryChildrenParentIdGetItem[]>\n */\nexport const adminCommonCountryChildrenParentIdGet = async (parentId: number) => {\n\treturn get<OAdminCommonCountryChildrenParentIdGetItem[]>(`/admin/common/country/children/${parentId}`)\n}",
        "reqCode": "/**\n * @description 通过父id获取下级列表 buildReqGetOrPostTyped\n * @url /admin/common/country/children/{parentId}\n */\nexport interface IAdminCommonCountryChildrenParentIdGet{\n}",
        "deleteResponseName": "OAdminCommonCountryChildrenParentIdGet",
        "resCode": "/**\n * @description 通过父id获取下级列表 buildResArrayTyped\n * @url /admin/common/country/children/{x}\n */\nexport type OAdminCommonCountryChildrenParentIdGetItem = {\n\taliasName: string;\n\tancestors: string;\n\tchildrenList: array;\n\tchName: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tenName: string;\n\tid: number;\n\tparentId: number;\n\tphoneCode: string;\n\tremark: string;\n\tsort: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;  \n}",
        "resValueCode": "/**\n * @description 通过父id获取下级列表 buildResArrayTyped\n * @url /admin/common/country/children/{x}\n */\nexport const OAdminCommonCountryChildrenParentIdGetItemValue = {\n\taliasName: '',\n\tancestors: '',\n\tchildrenList: undefined,\n\tchName: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tenName: '',\n\tid: -1,\n\tparentId: -1,\n\tphoneCode: '',\n\tremark: '',\n\tsort: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n}"
    },
    {
        "bodyKey": "get_/admin/common/country/list",
        "url": "/admin/common/country/list",
        "pureUrl": "/admin/common/country/list",
        "pathReqUrl": "/admin/common/country/list",
        "method": "get",
        "apiName": "获取所有国家",
        "key": "AdminCommonCountryListGet",
        "fnName": "adminCommonCountryListGet",
        "requestBaseName": "IAdminCommonCountryListGet",
        "requestName": [
            "IAdminCommonCountryListGet"
        ],
        "responseBaseName": "OAdminCommonCountryListGet",
        "responseName": [
            "OAdminCommonCountryListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "2wZeTpMIgL",
                    "enable": true,
                    "name": "chName",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminCommonCountryListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "aliasName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "ancestors": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "chName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "childrenList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "x-apifox-orders": []
                        },
                        "oldType": "array"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "enName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "parentId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "phoneCode": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "sort": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取所有国家 buildFnArrayCode\n * \n * @param {string} params.chName 可选: }\n * @return Promise<OAdminCommonCountryListGetItem>\n */\nexport const adminCommonCountryListGet = async (params?: IAdminCommonCountryListGet) => {\n\treturn get<OAdminCommonCountryListGetItem[]>(`/admin/common/country/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取所有国家 buildReqGetOrPostTyped\n * @url /admin/common/country/list\n */\nexport interface IAdminCommonCountryListGet{\n\tchName?: string;\n}",
        "deleteResponseName": "OAdminCommonCountryListGet",
        "resCode": "/**\n * @description 获取所有国家 buildResArrayTyped\n * @url /admin/common/country/list\n */\nexport type OAdminCommonCountryListGetItem = {\n\taliasName: string;\n\tancestors: string;\n\tchildrenList: array;\n\tchName: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tenName: string;\n\tid: number;\n\tparentId: number;\n\tphoneCode: string;\n\tremark: string;\n\tsort: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;  \n}",
        "resValueCode": "/**\n * @description 获取所有国家 buildResArrayTyped\n * @url /admin/common/country/list\n */\nexport const OAdminCommonCountryListGetItemValue = {\n\taliasName: '',\n\tancestors: '',\n\tchildrenList: undefined,\n\tchName: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tenName: '',\n\tid: -1,\n\tparentId: -1,\n\tphoneCode: '',\n\tremark: '',\n\tsort: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n}"
    },
    {
        "bodyKey": "get_/admin/console/chart/origin",
        "url": "/admin/console/chart/origin",
        "pureUrl": "/admin/console/chart/origin",
        "pathReqUrl": "/admin/console/chart/origin",
        "method": "get",
        "apiName": "获取来源统计数据",
        "key": "AdminConsoleChartOriginGet",
        "fnName": "adminConsoleChartOriginGet",
        "requestBaseName": "IAdminConsoleChartOriginGet",
        "requestName": [
            "IAdminConsoleChartOriginGet"
        ],
        "responseBaseName": "OAdminConsoleChartOriginGet",
        "responseName": [
            "OAdminConsoleChartOriginGet"
        ],
        "responseValueName": [
            "OAdminConsoleChartOriginGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取来源统计数据 buildFnGetOrPostCode\n * \n * @return Promise<OAdminConsoleChartOriginGet>\n */\nexport const adminConsoleChartOriginGet = async (params?: IAdminConsoleChartOriginGet) => {\n\treturn get<OAdminConsoleChartOriginGet>(`/admin/console/chart/origin`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取来源统计数据 buildReqGetOrPostTyped\n * @url /admin/console/chart/origin\n */\nexport interface IAdminConsoleChartOriginGet{\n}",
        "resCode": "/**\n * @description 获取来源统计数据 buildResAnyTyped\n * @url /admin/console/chart/origin\n */\nexport type OAdminConsoleChartOriginGet = {\n}",
        "resValueCode": "/**\n * @description 获取来源统计数据 buildResAnyTyped\n * @url /admin/console/chart/origin\n */\nexport const OAdminConsoleChartOriginGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/console/chart/seaDay",
        "url": "/admin/console/chart/seaDay",
        "pureUrl": "/admin/console/chart/seaDay",
        "pathReqUrl": "/admin/console/chart/seaDay",
        "method": "get",
        "apiName": "获取公海日期统计数据",
        "key": "AdminConsoleChartSeaDayGet",
        "fnName": "adminConsoleChartSeaDayGet",
        "requestBaseName": "IAdminConsoleChartSeaDayGet",
        "requestName": [
            "IAdminConsoleChartSeaDayGet"
        ],
        "responseBaseName": "OAdminConsoleChartSeaDayGet",
        "responseName": [
            "OAdminConsoleChartSeaDayGet"
        ],
        "responseValueName": [
            "OAdminConsoleChartSeaDayGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取公海日期统计数据 buildFnGetOrPostCode\n * \n * @return Promise<OAdminConsoleChartSeaDayGet>\n */\nexport const adminConsoleChartSeaDayGet = async (params?: IAdminConsoleChartSeaDayGet) => {\n\treturn get<OAdminConsoleChartSeaDayGet>(`/admin/console/chart/seaDay`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取公海日期统计数据 buildReqGetOrPostTyped\n * @url /admin/console/chart/seaDay\n */\nexport interface IAdminConsoleChartSeaDayGet{\n}",
        "resCode": "/**\n * @description 获取公海日期统计数据 buildResAnyTyped\n * @url /admin/console/chart/seaDay\n */\nexport type OAdminConsoleChartSeaDayGet = {\n}",
        "resValueCode": "/**\n * @description 获取公海日期统计数据 buildResAnyTyped\n * @url /admin/console/chart/seaDay\n */\nexport const OAdminConsoleChartSeaDayGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/console/chart/sea",
        "url": "/admin/console/chart/sea",
        "pureUrl": "/admin/console/chart/sea",
        "pathReqUrl": "/admin/console/chart/sea",
        "method": "get",
        "apiName": "获取公海统计数据",
        "key": "AdminConsoleChartSeaGet",
        "fnName": "adminConsoleChartSeaGet",
        "requestBaseName": "IAdminConsoleChartSeaGet",
        "requestName": [
            "IAdminConsoleChartSeaGet"
        ],
        "responseBaseName": "OAdminConsoleChartSeaGet",
        "responseName": [
            "OAdminConsoleChartSeaGet"
        ],
        "responseValueName": [
            "OAdminConsoleChartSeaGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "SH3lG4DcQ7",
                    "enable": true,
                    "name": "followStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "Yt4McadgLB",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "b3inNVyOA4",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取公海统计数据 buildFnGetOrPostCode\n * \n * @param {number} params.followStatus 可选: \n * @param {string} params.city 可选: \n * @param {string} params.province 可选: \n * @return Promise<OAdminConsoleChartSeaGet>\n */\nexport const adminConsoleChartSeaGet = async (params?: IAdminConsoleChartSeaGet) => {\n\treturn get<OAdminConsoleChartSeaGet>(`/admin/console/chart/sea`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取公海统计数据 buildReqGetOrPostTyped\n * @url /admin/console/chart/sea\n */\nexport interface IAdminConsoleChartSeaGet{\n\tfollowStatus?: number;\n\tcity?: string;\n\tprovince?: string;\n}",
        "resCode": "/**\n * @description 获取公海统计数据 buildResAnyTyped\n * @url /admin/console/chart/sea\n */\nexport type OAdminConsoleChartSeaGet = {\n}",
        "resValueCode": "/**\n * @description 获取公海统计数据 buildResAnyTyped\n * @url /admin/console/chart/sea\n */\nexport const OAdminConsoleChartSeaGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/console/conclude/rank/{x}",
        "url": "/admin/console/conclude/rank/{type}",
        "pureUrl": "/admin/console/conclude/rank/{x}",
        "pathReqUrl": "/admin/console/conclude/rank/${type}",
        "method": "get",
        "apiName": "获取签单排行榜",
        "key": "AdminConsoleConcludeRankTypeGet",
        "fnName": "adminConsoleConcludeRankTypeGet",
        "requestBaseName": "IAdminConsoleConcludeRankTypeGet",
        "requestName": [
            "IAdminConsoleConcludeRankTypeGet"
        ],
        "responseBaseName": "OAdminConsoleConcludeRankTypeGet",
        "responseName": [
            "OAdminConsoleConcludeRankTypeGet"
        ],
        "responseValueName": [
            "OAdminConsoleConcludeRankTypeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "type#0",
                    "name": "type",
                    "required": true,
                    "description": "all-总排行  curMonth-当月 preMonth-上月 threeMonth-近3月",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取签单排行榜 buildFnPathCode\n * @path {string type 必填: all-总排行  curMonth-当月 preMonth-上月 threeMonth-近3月}\n * @return Promise<OAdminConsoleConcludeRankTypeGet>\n */\nexport const adminConsoleConcludeRankTypeGet = async (type: string) => {\n\treturn get<OAdminConsoleConcludeRankTypeGet>(`/admin/console/conclude/rank/${type}`)\n}",
        "reqCode": "/**\n * @description 获取签单排行榜 buildReqGetOrPostTyped\n * @url /admin/console/conclude/rank/{type}\n */\nexport interface IAdminConsoleConcludeRankTypeGet{\n}",
        "resCode": "/**\n * @description 获取签单排行榜 buildResAnyTyped\n * @url /admin/console/conclude/rank/{x}\n */\nexport type OAdminConsoleConcludeRankTypeGet = {\n}",
        "resValueCode": "/**\n * @description 获取签单排行榜 buildResAnyTyped\n * @url /admin/console/conclude/rank/{x}\n */\nexport const OAdminConsoleConcludeRankTypeGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/console/statistics/info",
        "url": "/admin/console/statistics/info",
        "pureUrl": "/admin/console/statistics/info",
        "pathReqUrl": "/admin/console/statistics/info",
        "method": "get",
        "apiName": "获取控制台统计信息",
        "key": "AdminConsoleStatisticsInfoGet",
        "fnName": "adminConsoleStatisticsInfoGet",
        "requestBaseName": "IAdminConsoleStatisticsInfoGet",
        "requestName": [
            "IAdminConsoleStatisticsInfoGet"
        ],
        "responseBaseName": "OAdminConsoleStatisticsInfoGet",
        "responseName": [
            "OAdminConsoleStatisticsInfoGet"
        ],
        "responseValueName": [
            "OAdminConsoleStatisticsInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取控制台统计信息 buildFnGetOrPostCode\n * \n * @return Promise<OAdminConsoleStatisticsInfoGet>\n */\nexport const adminConsoleStatisticsInfoGet = async (params?: IAdminConsoleStatisticsInfoGet) => {\n\treturn get<OAdminConsoleStatisticsInfoGet>(`/admin/console/statistics/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取控制台统计信息 buildReqGetOrPostTyped\n * @url /admin/console/statistics/info\n */\nexport interface IAdminConsoleStatisticsInfoGet{\n}",
        "resCode": "/**\n * @description 获取控制台统计信息 buildResAnyTyped\n * @url /admin/console/statistics/info\n */\nexport type OAdminConsoleStatisticsInfoGet = {\n}",
        "resValueCode": "/**\n * @description 获取控制台统计信息 buildResAnyTyped\n * @url /admin/console/statistics/info\n */\nexport const OAdminConsoleStatisticsInfoGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/contract/attrRef",
        "url": "/admin/contract/attrRef",
        "pureUrl": "/admin/contract/attrRef",
        "pathReqUrl": "/admin/contract/attrRef",
        "method": "post",
        "apiName": "设置合同",
        "key": "AdminContractAttrRefPost",
        "fnName": "adminContractAttrRefPost",
        "requestBaseName": "IAdminContractAttrRefPost",
        "requestName": [
            "IAdminContractAttrRefPost"
        ],
        "responseBaseName": "OAdminContractAttrRefPost",
        "responseName": [
            "OAdminContractAttrRefPost"
        ],
        "responseValueName": [
            "OAdminContractAttrRefPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "attrRef",
                    "type": "any",
                    "properties": {},
                    "description": "合同坐标组件配置信息",
                    "x-apifox-orders": [],
                    "required": true,
                    "oldType": "any"
                },
                {
                    "name": "id",
                    "type": "string",
                    "description": "合同ID",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 设置合同 buildFnGetOrPostCode\n * \n * @param {any} params.attrRef 必填: 合同坐标组件配置信息\n * @param {string} params.id 必填: 合同ID\n * @return Promise<OAdminContractAttrRefPost>\n */\nexport const adminContractAttrRefPost = async (params?: IAdminContractAttrRefPost) => {\n\treturn post<OAdminContractAttrRefPost>(`/admin/contract/attrRef`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 设置合同 buildReqGetOrPostTyped\n * @url /admin/contract/attrRef\n */\nexport interface IAdminContractAttrRefPost{\n\tattrRef: any; // 合同坐标组件配置信息\n\tid: string; // 合同ID\n}",
        "resCode": "/**\n * @description 设置合同 buildResAnyTyped\n * @url /admin/contract/attrRef\n */\nexport type OAdminContractAttrRefPost = {\n}",
        "resValueCode": "/**\n * @description 设置合同 buildResAnyTyped\n * @url /admin/contract/attrRef\n */\nexport const OAdminContractAttrRefPostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/contract/{x}",
        "url": "/admin/contract/{id}",
        "pureUrl": "/admin/contract/{x}",
        "pathReqUrl": "/admin/contract/${id}",
        "method": "delete",
        "apiName": "删除合同",
        "key": "AdminContractIdDelete",
        "fnName": "adminContractIdDelete",
        "requestBaseName": "IAdminContractIdDelete",
        "requestName": [
            "IAdminContractIdDelete"
        ],
        "responseBaseName": "OAdminContractIdDelete",
        "responseName": [
            "OAdminContractIdDelete"
        ],
        "responseValueName": [
            "OAdminContractIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除合同 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminContractIdDelete>\n */\nexport const adminContractIdDelete = async (id: number) => {\n\treturn del<OAdminContractIdDelete>(`/admin/contract/${id}`)\n}",
        "reqCode": "/**\n * @description 删除合同 buildReqGetOrPostTyped\n * @url /admin/contract/{id}\n */\nexport interface IAdminContractIdDelete{\n}",
        "resCode": "/**\n * @description 删除合同 buildResAnyTyped\n * @url /admin/contract/{x}\n */\nexport type OAdminContractIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除合同 buildResAnyTyped\n * @url /admin/contract/{x}\n */\nexport const OAdminContractIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/contract/{x}",
        "url": "/admin/contract/{id}",
        "pureUrl": "/admin/contract/{x}",
        "pathReqUrl": "/admin/contract/${id}",
        "method": "get",
        "apiName": "合同详情",
        "key": "AdminContractIdGet",
        "fnName": "adminContractIdGet",
        "requestBaseName": "IAdminContractIdGet",
        "requestName": [
            "IAdminContractIdGet"
        ],
        "responseBaseName": "OAdminContractIdGet",
        "responseName": [
            "OAdminContractIdGet"
        ],
        "responseValueName": [
            "OAdminContractIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 合同详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminContractIdGet>\n */\nexport const adminContractIdGet = async (id: number) => {\n\treturn get<OAdminContractIdGet>(`/admin/contract/${id}`)\n}",
        "reqCode": "/**\n * @description 合同详情 buildReqGetOrPostTyped\n * @url /admin/contract/{id}\n */\nexport interface IAdminContractIdGet{\n}",
        "resCode": "/**\n * @description 合同详情 buildResAnyTyped\n * @url /admin/contract/{x}\n */\nexport type OAdminContractIdGet = {\n}",
        "resValueCode": "/**\n * @description 合同详情 buildResAnyTyped\n * @url /admin/contract/{x}\n */\nexport const OAdminContractIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/contract/list",
        "url": "/admin/contract/list",
        "pureUrl": "/admin/contract/list",
        "pathReqUrl": "/admin/contract/list",
        "method": "get",
        "apiName": "合同列表",
        "key": "AdminContractListGet",
        "fnName": "adminContractListGet",
        "requestBaseName": "IAdminContractListGet",
        "requestName": [
            "IAdminContractListGet"
        ],
        "responseBaseName": "OAdminContractListGet",
        "responseName": [
            "OAdminContractListGet"
        ],
        "responseValueName": [
            "OAdminContractListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "合同编号",
                    "type": "string",
                    "id": "fHS7QQYQzI",
                    "enable": true,
                    "name": "contractNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "合同标题",
                    "type": "string",
                    "id": "IET5T4AF59",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "创建人",
                    "type": "number",
                    "id": "9L8gvJIlIb",
                    "enable": true,
                    "name": "createById",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "开始时间",
                    "type": "string",
                    "id": "rcwVJVB3wh",
                    "enable": true,
                    "name": "createTimeStart",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "结束时间",
                    "type": "string",
                    "id": "euGKRcNvzW",
                    "enable": true,
                    "name": "createTimeEnd",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流程ID",
                    "type": "number",
                    "id": "6GNZnkji1Z",
                    "enable": true,
                    "name": "flowId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 合同列表 buildFnGetOrPostCode\n * \n * @param {string} params.contractNo 可选: 合同编号\n * @param {string} params.title 可选: 合同标题\n * @param {number} params.createById 可选: 创建人\n * @param {string} params.createTimeStart 可选: 开始时间\n * @param {string} params.createTimeEnd 可选: 结束时间\n * @param {number} params.flowId 可选: 流程ID\n * @return Promise<OAdminContractListGet>\n */\nexport const adminContractListGet = async (params?: IAdminContractListGet) => {\n\treturn get<OAdminContractListGet>(`/admin/contract/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 合同列表 buildReqGetOrPostTyped\n * @url /admin/contract/list\n */\nexport interface IAdminContractListGet{\n\tcontractNo?: string; // 合同编号\n\ttitle?: string; // 合同标题\n\tcreateById?: number; // 创建人\n\tcreateTimeStart?: string; // 开始时间\n\tcreateTimeEnd?: string; // 结束时间\n\tflowId?: number; // 流程ID\n}",
        "resCode": "/**\n * @description 合同列表 buildResAnyTyped\n * @url /admin/contract/list\n */\nexport type OAdminContractListGet = {\n}",
        "resValueCode": "/**\n * @description 合同列表 buildResAnyTyped\n * @url /admin/contract/list\n */\nexport const OAdminContractListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/contract",
        "url": "/admin/contract",
        "pureUrl": "/admin/contract",
        "pathReqUrl": "/admin/contract",
        "method": "post",
        "apiName": "新增合同",
        "key": "AdminContractPost",
        "fnName": "adminContractPost",
        "requestBaseName": "IAdminContractPost",
        "requestName": [
            "IAdminContractPost"
        ],
        "responseBaseName": "OAdminContractPost",
        "responseName": [
            "OAdminContractPost"
        ],
        "responseValueName": [
            "OAdminContractPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注信息",
                    "oldType": "string"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "合同标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "合同文件地址",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增合同 buildFnGetOrPostCode\n * \n * @param {string} params.remark 可选: 备注信息\n * @param {string} params.title 必填: 合同标题\n * @param {string} params.url 必填: 合同文件地址\n * @return Promise<OAdminContractPost>\n */\nexport const adminContractPost = async (params?: IAdminContractPost) => {\n\treturn post<OAdminContractPost>(`/admin/contract`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增合同 buildReqGetOrPostTyped\n * @url /admin/contract\n */\nexport interface IAdminContractPost{\n\tremark?: string; // 备注信息\n\ttitle: string; // 合同标题\n\turl: string; // 合同文件地址\n}",
        "resCode": "/**\n * @description 新增合同 buildResAnyTyped\n * @url /admin/contract\n */\nexport type OAdminContractPost = {\n}",
        "resValueCode": "/**\n * @description 新增合同 buildResAnyTyped\n * @url /admin/contract\n */\nexport const OAdminContractPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/contract",
        "url": "/admin/contract",
        "pureUrl": "/admin/contract",
        "pathReqUrl": "/admin/contract",
        "method": "put",
        "apiName": "编辑合同",
        "key": "AdminContractPut",
        "fnName": "adminContractPut",
        "requestBaseName": "IAdminContractPut",
        "requestName": [
            "IAdminContractPut"
        ],
        "responseBaseName": "OAdminContractPut",
        "responseName": [
            "OAdminContractPut"
        ],
        "responseValueName": [
            "OAdminContractPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "合同ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注信息",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "合同标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "url",
                    "type": "string",
                    "description": "合同文件地址",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑合同 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 合同ID\n * @param {string} params.remark 必填: 备注信息\n * @param {string} params.title 必填: 合同标题\n * @param {string} params.url 必填: 合同文件地址\n * @return Promise<OAdminContractPut>\n */\nexport const adminContractPut = async (params?: IAdminContractPut) => {\n\treturn put<OAdminContractPut>(`/admin/contract`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑合同 buildReqGetOrPostTyped\n * @url /admin/contract\n */\nexport interface IAdminContractPut{\n\tid: number; // 合同ID\n\tremark: string; // 备注信息\n\ttitle: string; // 合同标题\n\turl: string; // 合同文件地址\n}",
        "resCode": "/**\n * @description 编辑合同 buildResAnyTyped\n * @url /admin/contract\n */\nexport type OAdminContractPut = {\n}",
        "resValueCode": "/**\n * @description 编辑合同 buildResAnyTyped\n * @url /admin/contract\n */\nexport const OAdminContractPutValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/corporate/account/{x}",
        "url": "/admin/corporate/account/{id}",
        "pureUrl": "/admin/corporate/account/{x}",
        "pathReqUrl": "/admin/corporate/account/${id}",
        "method": "delete",
        "apiName": "删除账户",
        "key": "AdminCorporateAccountIdDelete",
        "fnName": "adminCorporateAccountIdDelete",
        "requestBaseName": "IAdminCorporateAccountIdDelete",
        "requestName": [
            "IAdminCorporateAccountIdDelete"
        ],
        "responseBaseName": "OAdminCorporateAccountIdDelete",
        "responseName": [
            "OAdminCorporateAccountIdDelete"
        ],
        "responseValueName": [
            "OAdminCorporateAccountIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除账户 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminCorporateAccountIdDelete>\n */\nexport const adminCorporateAccountIdDelete = async (id: number) => {\n\treturn del<OAdminCorporateAccountIdDelete>(`/admin/corporate/account/${id}`)\n}",
        "reqCode": "/**\n * @description 删除账户 buildReqGetOrPostTyped\n * @url /admin/corporate/account/{id}\n */\nexport interface IAdminCorporateAccountIdDelete{\n}",
        "resCode": "/**\n * @description 删除账户 buildResAnyTyped\n * @url /admin/corporate/account/{x}\n */\nexport type OAdminCorporateAccountIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除账户 buildResAnyTyped\n * @url /admin/corporate/account/{x}\n */\nexport const OAdminCorporateAccountIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/corporate/account/{x}",
        "url": "/admin/corporate/account/{id}",
        "pureUrl": "/admin/corporate/account/{x}",
        "pathReqUrl": "/admin/corporate/account/${id}",
        "method": "get",
        "apiName": "账户详情",
        "key": "AdminCorporateAccountIdGet",
        "fnName": "adminCorporateAccountIdGet",
        "requestBaseName": "IAdminCorporateAccountIdGet",
        "requestName": [
            "IAdminCorporateAccountIdGet"
        ],
        "responseBaseName": "OAdminCorporateAccountIdGet",
        "responseName": [
            "OAdminCorporateAccountIdGet"
        ],
        "responseValueName": [
            "OAdminCorporateAccountIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 账户详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminCorporateAccountIdGet>\n */\nexport const adminCorporateAccountIdGet = async (id: number) => {\n\treturn get<OAdminCorporateAccountIdGet>(`/admin/corporate/account/${id}`)\n}",
        "reqCode": "/**\n * @description 账户详情 buildReqGetOrPostTyped\n * @url /admin/corporate/account/{id}\n */\nexport interface IAdminCorporateAccountIdGet{\n}",
        "resCode": "/**\n * @description 账户详情 buildResAnyTyped\n * @url /admin/corporate/account/{x}\n */\nexport type OAdminCorporateAccountIdGet = {\n}",
        "resValueCode": "/**\n * @description 账户详情 buildResAnyTyped\n * @url /admin/corporate/account/{x}\n */\nexport const OAdminCorporateAccountIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/corporate/account/list",
        "url": "/admin/corporate/account/list",
        "pureUrl": "/admin/corporate/account/list",
        "pathReqUrl": "/admin/corporate/account/list",
        "method": "get",
        "apiName": "账户列表",
        "key": "AdminCorporateAccountListGet",
        "fnName": "adminCorporateAccountListGet",
        "requestBaseName": "IAdminCorporateAccountListGet",
        "requestName": [
            "IAdminCorporateAccountListGet"
        ],
        "responseBaseName": "OAdminCorporateAccountListGet",
        "responseName": [
            "OAdminCorporateAccountListGet"
        ],
        "responseValueName": [
            "OAdminCorporateAccountListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-正常 1-禁用",
                    "type": "number",
                    "id": "QiuU7YzwAo",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "类型 bank-银行 wechat-微信 alipay-支付宝",
                    "type": "string",
                    "id": "pMeZgtTtZS",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "KYOCHokeEu",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Ju6nwPStUR",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 账户列表 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-正常 1-禁用\n * @param {string} params.type 可选: 类型 bank-银行 wechat-微信 alipay-支付宝\n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @return Promise<OAdminCorporateAccountListGet>\n */\nexport const adminCorporateAccountListGet = async (params?: IAdminCorporateAccountListGet) => {\n\treturn get<OAdminCorporateAccountListGet>(`/admin/corporate/account/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 账户列表 buildReqGetOrPostTyped\n * @url /admin/corporate/account/list\n */\nexport interface IAdminCorporateAccountListGet{\n\tstatus?: number; // 状态 0-正常 1-禁用\n\ttype?: string; // 类型 bank-银行 wechat-微信 alipay-支付宝\n\tpageSize?: number;\n\tpageNum?: number;\n}",
        "resCode": "/**\n * @description 账户列表 buildResAnyTyped\n * @url /admin/corporate/account/list\n */\nexport type OAdminCorporateAccountListGet = {\n}",
        "resValueCode": "/**\n * @description 账户列表 buildResAnyTyped\n * @url /admin/corporate/account/list\n */\nexport const OAdminCorporateAccountListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/corporate/account",
        "url": "/admin/corporate/account",
        "pureUrl": "/admin/corporate/account",
        "pathReqUrl": "/admin/corporate/account",
        "method": "post",
        "apiName": "添加账户",
        "key": "AdminCorporateAccountPost",
        "fnName": "adminCorporateAccountPost",
        "requestBaseName": "IAdminCorporateAccountPost",
        "requestName": [
            "IAdminCorporateAccountPost"
        ],
        "responseBaseName": "OAdminCorporateAccountPost",
        "responseName": [
            "OAdminCorporateAccountPost"
        ],
        "responseValueName": [
            "OAdminCorporateAccountPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "bankName",
                    "type": "string",
                    "description": "开户行",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankNumber",
                    "type": "string",
                    "description": "开户账号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankUserName",
                    "type": "string",
                    "description": "开户户名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "类型 bank-银行 wechat-微信 alipay-支付宝",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加账户 buildFnGetOrPostCode\n * \n * @param {string} params.bankName 必填: 开户行\n * @param {string} params.bankNumber 必填: 开户账号\n * @param {string} params.bankUserName 必填: 开户户名\n * @param {string} params.remark 可选: \n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @param {string} params.type 必填: 类型 bank-银行 wechat-微信 alipay-支付宝\n * @return Promise<OAdminCorporateAccountPost>\n */\nexport const adminCorporateAccountPost = async (params?: IAdminCorporateAccountPost) => {\n\treturn post<OAdminCorporateAccountPost>(`/admin/corporate/account`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加账户 buildReqGetOrPostTyped\n * @url /admin/corporate/account\n */\nexport interface IAdminCorporateAccountPost{\n\tbankName: string; // 开户行\n\tbankNumber: string; // 开户账号\n\tbankUserName: string; // 开户户名\n\tremark?: string;\n\tstatus: number; // 状态 0-正常 1-禁用\n\ttype: string; // 类型 bank-银行 wechat-微信 alipay-支付宝\n}",
        "resCode": "/**\n * @description 添加账户 buildResAnyTyped\n * @url /admin/corporate/account\n */\nexport type OAdminCorporateAccountPost = {\n}",
        "resValueCode": "/**\n * @description 添加账户 buildResAnyTyped\n * @url /admin/corporate/account\n */\nexport const OAdminCorporateAccountPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/corporate/account",
        "url": "/admin/corporate/account",
        "pureUrl": "/admin/corporate/account",
        "pathReqUrl": "/admin/corporate/account",
        "method": "put",
        "apiName": "编辑账户",
        "key": "AdminCorporateAccountPut",
        "fnName": "adminCorporateAccountPut",
        "requestBaseName": "IAdminCorporateAccountPut",
        "requestName": [
            "IAdminCorporateAccountPut"
        ],
        "responseBaseName": "OAdminCorporateAccountPut",
        "responseName": [
            "OAdminCorporateAccountPut"
        ],
        "responseValueName": [
            "OAdminCorporateAccountPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "bankName",
                    "type": "string",
                    "description": "开户行",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankNumber",
                    "type": "string",
                    "description": "开户账号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankUserName",
                    "type": "string",
                    "description": "开户户名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑账户 buildFnGetOrPostCode\n * \n * @param {string} params.bankName 必填: 开户行\n * @param {string} params.bankNumber 必填: 开户账号\n * @param {string} params.bankUserName 必填: 开户户名\n * @param {number} params.id 必填: \n * @param {string} params.remark 可选: \n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @return Promise<OAdminCorporateAccountPut>\n */\nexport const adminCorporateAccountPut = async (params?: IAdminCorporateAccountPut) => {\n\treturn put<OAdminCorporateAccountPut>(`/admin/corporate/account`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑账户 buildReqGetOrPostTyped\n * @url /admin/corporate/account\n */\nexport interface IAdminCorporateAccountPut{\n\tbankName: string; // 开户行\n\tbankNumber: string; // 开户账号\n\tbankUserName: string; // 开户户名\n\tid: number;\n\tremark?: string;\n\tstatus: number; // 状态 0-正常 1-禁用\n}",
        "resCode": "/**\n * @description 编辑账户 buildResAnyTyped\n * @url /admin/corporate/account\n */\nexport type OAdminCorporateAccountPut = {\n}",
        "resValueCode": "/**\n * @description 编辑账户 buildResAnyTyped\n * @url /admin/corporate/account\n */\nexport const OAdminCorporateAccountPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/coupon/{x}",
        "url": "/admin/coupon/{id}",
        "pureUrl": "/admin/coupon/{x}",
        "pathReqUrl": "/admin/coupon/${id}",
        "method": "get",
        "apiName": "优惠券详情",
        "key": "AdminCouponIdGet",
        "fnName": "adminCouponIdGet",
        "requestBaseName": "IAdminCouponIdGet",
        "requestName": [
            "IAdminCouponIdGet"
        ],
        "responseBaseName": "OAdminCouponIdGet",
        "responseName": [
            "OAdminCouponIdGet"
        ],
        "responseValueName": [
            "OAdminCouponIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券详情 buildFnPathCode\n * @path {string id 必填: }\n * @return Promise<OAdminCouponIdGet>\n */\nexport const adminCouponIdGet = async (id: string) => {\n\treturn get<OAdminCouponIdGet>(`/admin/coupon/${id}`)\n}",
        "reqCode": "/**\n * @description 优惠券详情 buildReqGetOrPostTyped\n * @url /admin/coupon/{id}\n */\nexport interface IAdminCouponIdGet{\n}",
        "resCode": "/**\n * @description 优惠券详情 buildResAnyTyped\n * @url /admin/coupon/{x}\n */\nexport type OAdminCouponIdGet = {\n}",
        "resValueCode": "/**\n * @description 优惠券详情 buildResAnyTyped\n * @url /admin/coupon/{x}\n */\nexport const OAdminCouponIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/coupon/investor/list",
        "url": "/admin/coupon/investor/list",
        "pureUrl": "/admin/coupon/investor/list",
        "pathReqUrl": "/admin/coupon/investor/list",
        "method": "get",
        "apiName": "优惠券投资者列表",
        "key": "AdminCouponInvestorListGet",
        "fnName": "adminCouponInvestorListGet",
        "requestBaseName": "IAdminCouponInvestorListGet",
        "requestName": [
            "IAdminCouponInvestorListGet"
        ],
        "responseBaseName": "OAdminCouponInvestorListGet",
        "responseName": [
            "OAdminCouponInvestorListGet"
        ],
        "responseValueName": [
            "OAdminCouponInvestorListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "xug2kuW7iT",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "EL6kqR7HPv",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "tvi639tEvK",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "GncrcGp5a4",
                    "enable": true,
                    "name": "investorName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "0PMRrNDdDm",
                    "enable": true,
                    "name": "couponId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券投资者列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.investorNo 可选: \n * @param {string} params.investorName 可选: \n * @param {number} params.couponId 可选: \n * @return Promise<OAdminCouponInvestorListGet>\n */\nexport const adminCouponInvestorListGet = async (params?: IAdminCouponInvestorListGet) => {\n\treturn get<OAdminCouponInvestorListGet>(`/admin/coupon/investor/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 优惠券投资者列表 buildReqGetOrPostTyped\n * @url /admin/coupon/investor/list\n */\nexport interface IAdminCouponInvestorListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\tinvestorNo?: string;\n\tinvestorName?: string;\n\tcouponId?: number;\n}",
        "resCode": "/**\n * @description 优惠券投资者列表 buildResAnyTyped\n * @url /admin/coupon/investor/list\n */\nexport type OAdminCouponInvestorListGet = {\n}",
        "resValueCode": "/**\n * @description 优惠券投资者列表 buildResAnyTyped\n * @url /admin/coupon/investor/list\n */\nexport const OAdminCouponInvestorListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/coupon/list",
        "url": "/admin/coupon/list",
        "pureUrl": "/admin/coupon/list",
        "pathReqUrl": "/admin/coupon/list",
        "method": "get",
        "apiName": "优惠券列表",
        "key": "AdminCouponListGet",
        "fnName": "adminCouponListGet",
        "requestBaseName": "IAdminCouponListGet",
        "requestName": [
            "IAdminCouponListGet"
        ],
        "responseBaseName": "OAdminCouponListGet",
        "responseName": [
            "OAdminCouponListGet"
        ],
        "responseValueName": [
            "OAdminCouponListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "7iarpCL2LS",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "IvSwqn8YuR",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "LTeAdTczgc",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {string} params.pageNum 可选: \n * @param {string} params.pageSize 可选: \n * @return Promise<OAdminCouponListGet>\n */\nexport const adminCouponListGet = async (params?: IAdminCouponListGet) => {\n\treturn get<OAdminCouponListGet>(`/admin/coupon/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 优惠券列表 buildReqGetOrPostTyped\n * @url /admin/coupon/list\n */\nexport interface IAdminCouponListGet{\n\ttitle?: string;\n\tpageNum?: string;\n\tpageSize?: string;\n}",
        "resCode": "/**\n * @description 优惠券列表 buildResAnyTyped\n * @url /admin/coupon/list\n */\nexport type OAdminCouponListGet = {\n}",
        "resValueCode": "/**\n * @description 优惠券列表 buildResAnyTyped\n * @url /admin/coupon/list\n */\nexport const OAdminCouponListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/coupon",
        "url": "/admin/coupon",
        "pureUrl": "/admin/coupon",
        "pathReqUrl": "/admin/coupon",
        "method": "post",
        "apiName": "新增优惠券",
        "key": "AdminCouponPost",
        "fnName": "adminCouponPost",
        "requestBaseName": "IAdminCouponPost",
        "requestName": [
            "IAdminCouponPost"
        ],
        "responseBaseName": "OAdminCouponPost",
        "responseName": [
            "OAdminCouponPost"
        ],
        "responseValueName": [
            "OAdminCouponPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "类别 PLATFORM:平台 OTHER:其他",
                    "type": "string",
                    "id": "Csxe7EOb5s",
                    "enable": true,
                    "name": "category",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "标题",
                    "type": "string",
                    "id": "WuVvlclRsv",
                    "enable": true,
                    "name": "title",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "总数量",
                    "type": "number",
                    "id": "jYOX5Odxlj",
                    "enable": true,
                    "name": "quantity",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "描述",
                    "type": "string",
                    "id": "xWFZR6XNtm",
                    "enable": true,
                    "name": "desc",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "封面",
                    "type": "string",
                    "id": "lkv1gLegOy",
                    "enable": true,
                    "name": "imgCover",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "类型 -1-未知 0-预定费 1-咨询费 2-律师费",
                    "type": "number",
                    "id": "f5L70YyZB9",
                    "enable": true,
                    "name": "couponType",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "金额",
                    "type": "number",
                    "id": "mhw8Vg6AK3",
                    "enable": true,
                    "name": "amount",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "币种类型",
                    "type": "string",
                    "id": "poW3gFBqZG",
                    "enable": true,
                    "name": "currency",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增优惠券 buildFnGetOrPostCode\n * \n * @param {string} params.category 可选: 类别 PLATFORM:平台 OTHER:其他\n * @param {string} params.title 可选: 标题\n * @param {number} params.quantity 可选: 总数量\n * @param {string} params.desc 可选: 描述\n * @param {string} params.imgCover 可选: 封面\n * @param {number} params.couponType 可选: 类型 -1-未知 0-预定费 1-咨询费 2-律师费\n * @param {number} params.amount 可选: 金额\n * @param {string} params.currency 可选: 币种类型\n * @return Promise<OAdminCouponPost>\n */\nexport const adminCouponPost = async (params?: IAdminCouponPost) => {\n\treturn post<OAdminCouponPost>(`/admin/coupon`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 新增优惠券 buildReqGetOrPostTyped\n * @url /admin/coupon\n */\nexport interface IAdminCouponPost{\n\tcategory?: string; // 类别 PLATFORM:平台 OTHER:其他\n\ttitle?: string; // 标题\n\tquantity?: number; // 总数量\n\tdesc?: string; // 描述\n\timgCover?: string; // 封面\n\tcouponType?: number; // 类型 -1-未知 0-预定费 1-咨询费 2-律师费\n\tamount?: number; // 金额\n\tcurrency?: string; // 币种类型\n}",
        "resCode": "/**\n * @description 新增优惠券 buildResAnyTyped\n * @url /admin/coupon\n */\nexport type OAdminCouponPost = {\n}",
        "resValueCode": "/**\n * @description 新增优惠券 buildResAnyTyped\n * @url /admin/coupon\n */\nexport const OAdminCouponPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/coupon",
        "url": "/admin/coupon",
        "pureUrl": "/admin/coupon",
        "pathReqUrl": "/admin/coupon",
        "method": "put",
        "apiName": "编辑优惠券",
        "key": "AdminCouponPut",
        "fnName": "adminCouponPut",
        "requestBaseName": "IAdminCouponPut",
        "requestName": [
            "IAdminCouponPut"
        ],
        "responseBaseName": "OAdminCouponPut",
        "responseName": [
            "OAdminCouponPut"
        ],
        "responseValueName": [
            "OAdminCouponPutValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "标题",
                    "type": "string",
                    "id": "WuVvlclRsv",
                    "enable": true,
                    "name": "title",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "总数量",
                    "type": "number",
                    "id": "jYOX5Odxlj",
                    "enable": true,
                    "name": "quantity",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "描述",
                    "type": "string",
                    "id": "xWFZR6XNtm",
                    "enable": true,
                    "name": "desc",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "封面",
                    "type": "string",
                    "id": "lkv1gLegOy",
                    "enable": true,
                    "name": "imgCover",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "ID",
                    "type": "number",
                    "id": "9Y1h03AFl7",
                    "enable": true,
                    "name": "id",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "金额",
                    "type": "number",
                    "id": "PWCSOT0NoZ",
                    "enable": true,
                    "name": "amount",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "币种类型",
                    "type": "string",
                    "id": "f6F3yblfqF",
                    "enable": true,
                    "name": "currency",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑优惠券 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 标题\n * @param {number} params.quantity 可选: 总数量\n * @param {string} params.desc 可选: 描述\n * @param {string} params.imgCover 可选: 封面\n * @param {number} params.id 可选: ID\n * @param {number} params.amount 可选: 金额\n * @param {string} params.currency 可选: 币种类型\n * @return Promise<OAdminCouponPut>\n */\nexport const adminCouponPut = async (params?: IAdminCouponPut) => {\n\treturn put<OAdminCouponPut>(`/admin/coupon`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 编辑优惠券 buildReqGetOrPostTyped\n * @url /admin/coupon\n */\nexport interface IAdminCouponPut{\n\ttitle?: string; // 标题\n\tquantity?: number; // 总数量\n\tdesc?: string; // 描述\n\timgCover?: string; // 封面\n\tid?: number; // ID\n\tamount?: number; // 金额\n\tcurrency?: string; // 币种类型\n}",
        "resCode": "/**\n * @description 编辑优惠券 buildResAnyTyped\n * @url /admin/coupon\n */\nexport type OAdminCouponPut = {\n}",
        "resValueCode": "/**\n * @description 编辑优惠券 buildResAnyTyped\n * @url /admin/coupon\n */\nexport const OAdminCouponPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/coupon/send/investor",
        "url": "/admin/coupon/send/investor",
        "pureUrl": "/admin/coupon/send/investor",
        "pathReqUrl": "/admin/coupon/send/investor",
        "method": "post",
        "apiName": "优惠券发送投资者",
        "key": "AdminCouponSendInvestorPost",
        "fnName": "adminCouponSendInvestorPost",
        "requestBaseName": "IAdminCouponSendInvestorPost",
        "requestName": [
            "IAdminCouponSendInvestorPost"
        ],
        "responseBaseName": "OAdminCouponSendInvestorPost",
        "responseName": [
            "OAdminCouponSendInvestorPost"
        ],
        "responseValueName": [
            "OAdminCouponSendInvestorPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "couponId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorNos",
                    "type": "any[]",
                    "items": {
                        "type": "string"
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券发送投资者 buildFnGetOrPostCode\n * \n * @param {number} params.couponId 必填: \n * @param {any[]} params.investorNos 必填: \n * @return Promise<OAdminCouponSendInvestorPost>\n */\nexport const adminCouponSendInvestorPost = async (params?: IAdminCouponSendInvestorPost) => {\n\treturn post<OAdminCouponSendInvestorPost>(`/admin/coupon/send/investor`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 优惠券发送投资者 buildReqGetOrPostTyped\n * @url /admin/coupon/send/investor\n */\nexport interface IAdminCouponSendInvestorPost{\n\tcouponId: number;\n\tinvestorNos: any[];\n}",
        "resCode": "/**\n * @description 优惠券发送投资者 buildResAnyTyped\n * @url /admin/coupon/send/investor\n */\nexport type OAdminCouponSendInvestorPost = {\n}",
        "resValueCode": "/**\n * @description 优惠券发送投资者 buildResAnyTyped\n * @url /admin/coupon/send/investor\n */\nexport const OAdminCouponSendInvestorPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/coupon/writeoff",
        "url": "/admin/coupon/writeoff",
        "pureUrl": "/admin/coupon/writeoff",
        "pathReqUrl": "/admin/coupon/writeoff",
        "method": "post",
        "apiName": "优惠券核销",
        "key": "AdminCouponWriteoffPost",
        "fnName": "adminCouponWriteoffPost",
        "requestBaseName": "IAdminCouponWriteoffPost",
        "requestName": [
            "IAdminCouponWriteoffPost"
        ],
        "responseBaseName": "OAdminCouponWriteoffPost",
        "responseName": [
            "OAdminCouponWriteoffPost"
        ],
        "responseValueName": [
            "OAdminCouponWriteoffPostValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "ID",
                    "type": "string",
                    "id": "8rKmHAzRxM",
                    "enable": true,
                    "name": "id",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券核销 buildFnGetOrPostCode\n * \n * @param {string} params.id 可选: ID\n * @return Promise<OAdminCouponWriteoffPost>\n */\nexport const adminCouponWriteoffPost = async (params?: IAdminCouponWriteoffPost) => {\n\treturn post<OAdminCouponWriteoffPost>(`/admin/coupon/writeoff`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 优惠券核销 buildReqGetOrPostTyped\n * @url /admin/coupon/writeoff\n */\nexport interface IAdminCouponWriteoffPost{\n\tid?: string; // ID\n}",
        "resCode": "/**\n * @description 优惠券核销 buildResAnyTyped\n * @url /admin/coupon/writeoff\n */\nexport type OAdminCouponWriteoffPost = {\n}",
        "resValueCode": "/**\n * @description 优惠券核销 buildResAnyTyped\n * @url /admin/coupon/writeoff\n */\nexport const OAdminCouponWriteoffPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/deposit/investor/order/list",
        "url": "/admin/deposit/investor/order/list",
        "pureUrl": "/admin/deposit/investor/order/list",
        "pathReqUrl": "/admin/deposit/investor/order/list",
        "method": "get",
        "apiName": "关联订单",
        "key": "AdminDepositInvestorOrderListGet",
        "fnName": "adminDepositInvestorOrderListGet",
        "requestBaseName": "IAdminDepositInvestorOrderListGet",
        "requestName": [
            "IAdminDepositInvestorOrderListGet"
        ],
        "responseBaseName": "OAdminDepositInvestorOrderListGet",
        "responseName": [
            "OAdminDepositInvestorOrderListGet"
        ],
        "responseValueName": [
            "OAdminDepositInvestorOrderListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "投资者编号",
                    "type": "string",
                    "id": "lrhPdW0njt",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 关联订单 buildFnGetOrPostCode\n * \n * @param {string} params.investorNo 可选: 投资者编号\n * @return Promise<OAdminDepositInvestorOrderListGet>\n */\nexport const adminDepositInvestorOrderListGet = async (params?: IAdminDepositInvestorOrderListGet) => {\n\treturn get<OAdminDepositInvestorOrderListGet>(`/admin/deposit/investor/order/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 关联订单 buildReqGetOrPostTyped\n * @url /admin/deposit/investor/order/list\n */\nexport interface IAdminDepositInvestorOrderListGet{\n\tinvestorNo?: string; // 投资者编号\n}",
        "resCode": "/**\n * @description 关联订单 buildResAnyTyped\n * @url /admin/deposit/investor/order/list\n */\nexport type OAdminDepositInvestorOrderListGet = {\n}",
        "resValueCode": "/**\n * @description 关联订单 buildResAnyTyped\n * @url /admin/deposit/investor/order/list\n */\nexport const OAdminDepositInvestorOrderListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/deposit/list",
        "url": "/admin/deposit/list",
        "pureUrl": "/admin/deposit/list",
        "pathReqUrl": "/admin/deposit/list",
        "method": "get",
        "apiName": "查询充值列表",
        "key": "AdminDepositListGet",
        "fnName": "adminDepositListGet",
        "requestBaseName": "IAdminDepositListGet",
        "requestName": [
            "IAdminDepositListGet"
        ],
        "responseBaseName": "OAdminDepositListGet",
        "responseName": [
            "OAdminDepositListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "ylwksqLJrw",
                    "name": "beginTime",
                    "required": false,
                    "description": "发起开始时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "iXw3RVUtnu",
                    "name": "depositNo",
                    "required": false,
                    "description": "充值编号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "weBAt9sVfF",
                    "name": "endTime",
                    "required": false,
                    "description": "发起结束时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "LmBSjdWPV6",
                    "name": "maxAmount",
                    "required": false,
                    "description": "充值金额最大值",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "A56kPYirGy",
                    "name": "minAmount",
                    "required": false,
                    "description": "充值金额最小值",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "rfnuge0UmD",
                    "name": "investorEmail",
                    "required": false,
                    "description": "用户邮箱",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "DM4W9Snl3E",
                    "name": "investorName",
                    "required": false,
                    "description": "用户名称",
                    "type": "any[]",
                    "enable": true,
                    "sampleValue": [
                        ""
                    ]
                },
                {
                    "id": "0sHATlJDLf",
                    "name": "investorPhone",
                    "required": false,
                    "description": "用户手机",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "HQAJsvzbyH",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "3TXgym82c8",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "wduqfliTtE",
                    "name": "createById",
                    "required": false,
                    "description": "操作人id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "用户编号",
                    "type": "string",
                    "id": "TKUSXbVIm4",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单编号",
                    "type": "string",
                    "id": "RPFPxV2QWm",
                    "enable": true,
                    "name": "orderNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminDepositListGetItem",
            "description": "分页列表数据",
            "items": {
                "type": "object",
                "x-apifox-refs": {
                    "01GVJ81PARBC8XFTWMS56H4TK2": {
                        "$ref": "#/definitions/34077625",
                        "x-apifox-overrides": {
                            "createBy": {
                                "type": "string",
                                "description": "创建者"
                            }
                        },
                        "required": []
                    }
                },
                "properties": {}
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询充值列表 buildFnArrayCode\n * \n * @param {string} params.beginTime 可选: 发起开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.depositNo 可选: 充值编号\n * @param {string} params.endTime 可选: 发起结束时间 yyyy-MM-dd HH:mm:ss\n * @param {number} params.maxAmount 可选: 充值金额最大值\n * @param {number} params.minAmount 可选: 充值金额最小值\n * @param {string} params.investorEmail 可选: 用户邮箱\n * @param {any[]} params.investorName 可选: 用户名称\n * @param {string} params.investorPhone 可选: 用户手机\n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {number} params.createById 可选: 操作人id\n * @param {string} params.investorNo 可选: 用户编号\n * @param {string} params.orderNo 可选: 订单编号}\n * @return Promise<OAdminDepositListGetItem>\n */\nexport const adminDepositListGet = async (params?: IAdminDepositListGet) => {\n\treturn get<OAdminDepositListGetItem[]>(`/admin/deposit/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询充值列表 buildReqGetOrPostTyped\n * @url /admin/deposit/list\n */\nexport interface IAdminDepositListGet{\n\tbeginTime?: string; // 发起开始时间 yyyy-MM-dd HH:mm:ss\n\tdepositNo?: string; // 充值编号\n\tendTime?: string; // 发起结束时间 yyyy-MM-dd HH:mm:ss\n\tmaxAmount?: number; // 充值金额最大值\n\tminAmount?: number; // 充值金额最小值\n\tinvestorEmail?: string; // 用户邮箱\n\tinvestorName?: any[]; // 用户名称\n\tinvestorPhone?: string; // 用户手机\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\tcreateById?: number; // 操作人id\n\tinvestorNo?: string; // 用户编号\n\torderNo?: string; // 订单编号\n}",
        "deleteResponseName": "OAdminDepositListGet",
        "resCode": "/**\n * @description 查询充值列表 buildResArrayTyped\n * @url /admin/deposit/list\n */\nexport type OAdminDepositListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询充值列表 buildResArrayTyped\n * @url /admin/deposit/list\n */\nexport const OAdminDepositListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/deposit",
        "url": "/admin/deposit",
        "pureUrl": "/admin/deposit",
        "pathReqUrl": "/admin/deposit",
        "method": "post",
        "apiName": "充值 手动入金",
        "key": "AdminDepositPost",
        "fnName": "adminDepositPost",
        "requestBaseName": "IAdminDepositPost",
        "requestName": [
            "IAdminDepositPost"
        ],
        "responseBaseName": "OAdminDepositPost",
        "responseName": [
            "OAdminDepositPost"
        ],
        "responseValueName": [
            "OAdminDepositPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "amount",
                    "minimum": 0,
                    "type": "number",
                    "description": "金额",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "用户id",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderNo",
                    "type": "string",
                    "description": "订单编号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 充值 手动入金 buildFnGetOrPostCode\n * \n * @param {number} params.amount 必填: 金额\n * @param {number} params.investorId 必填: 用户id\n * @param {string} params.orderNo 必填: 订单编号\n * @param {string} params.remark 必填: 备注\n * @return Promise<OAdminDepositPost>\n */\nexport const adminDepositPost = async (params?: IAdminDepositPost) => {\n\treturn post<OAdminDepositPost>(`/admin/deposit`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 充值 手动入金 buildReqGetOrPostTyped\n * @url /admin/deposit\n */\nexport interface IAdminDepositPost{\n\tamount: number; // 金额\n\tinvestorId: number; // 用户id\n\torderNo: string; // 订单编号\n\tremark: string; // 备注\n}",
        "resCode": "/**\n * @description 充值 手动入金 buildResAnyTyped\n * @url /admin/deposit\n */\nexport type OAdminDepositPost = {\n}",
        "resValueCode": "/**\n * @description 充值 手动入金 buildResAnyTyped\n * @url /admin/deposit\n */\nexport const OAdminDepositPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/dept/allocation/rule",
        "url": "/admin/dept/allocation/rule",
        "pureUrl": "/admin/dept/allocation/rule",
        "pathReqUrl": "/admin/dept/allocation/rule",
        "method": "get",
        "apiName": "获取部门分配规则",
        "key": "AdminDeptAllocationRuleGet",
        "fnName": "adminDeptAllocationRuleGet",
        "requestBaseName": "IAdminDeptAllocationRuleGet",
        "requestName": [
            "IAdminDeptAllocationRuleGet"
        ],
        "responseBaseName": "OAdminDeptAllocationRuleGet",
        "responseName": [
            "OAdminDeptAllocationRuleGet"
        ],
        "responseValueName": [
            "OAdminDeptAllocationRuleGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "部门ID",
                    "type": "number",
                    "id": "xvILWK11KA",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取部门分配规则 buildFnGetOrPostCode\n * \n * @param {number} params.deptId 必填: 部门ID\n * @return Promise<OAdminDeptAllocationRuleGet>\n */\nexport const adminDeptAllocationRuleGet = async (params?: IAdminDeptAllocationRuleGet) => {\n\treturn get<OAdminDeptAllocationRuleGet>(`/admin/dept/allocation/rule`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取部门分配规则 buildReqGetOrPostTyped\n * @url /admin/dept/allocation/rule\n */\nexport interface IAdminDeptAllocationRuleGet{\n\tdeptId: number; // 部门ID\n}",
        "resCode": "/**\n * @description 获取部门分配规则 buildResAnyTyped\n * @url /admin/dept/allocation/rule\n */\nexport type OAdminDeptAllocationRuleGet = {\n}",
        "resValueCode": "/**\n * @description 获取部门分配规则 buildResAnyTyped\n * @url /admin/dept/allocation/rule\n */\nexport const OAdminDeptAllocationRuleGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/dept/allocation/rule",
        "url": "/admin/dept/allocation/rule",
        "pureUrl": "/admin/dept/allocation/rule",
        "pathReqUrl": "/admin/dept/allocation/rule",
        "method": "post",
        "apiName": "添加/编辑部门分配规则",
        "key": "AdminDeptAllocationRulePost",
        "fnName": "adminDeptAllocationRulePost",
        "requestBaseName": "IAdminDeptAllocationRulePost",
        "requestName": [
            "IAdminDeptAllocationRulePost"
        ],
        "responseBaseName": "OAdminDeptAllocationRulePost",
        "responseName": [
            "OAdminDeptAllocationRulePost"
        ],
        "responseValueName": [
            "OAdminDeptAllocationRulePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "allocationStatus",
                    "type": "number",
                    "description": "分配状态 0-手动 1-自动",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "autoAllocation",
                    "type": "number",
                    "description": "自动分配 0-按员工ID 1-安权重",
                    "oldType": "number"
                },
                {
                    "name": "autoSwitch",
                    "type": "number",
                    "description": "自动规则开关 0-关闭 1-打开",
                    "oldType": "number"
                },
                {
                    "name": "autoTimeRule",
                    "type": "any[]",
                    "items": {
                        "type": "string",
                        "description": "如：09:00:00,23:00:00 数组第一位是开始时间 第二位是结束时间"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "autoWeekRule",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "0,1,2,3,4,5,6"
                    },
                    "description": "自动规则时间-周",
                    "oldType": "any[]"
                },
                {
                    "name": "choiceUserType",
                    "type": "number",
                    "description": "选择员工类型 0-全部 1-自定义",
                    "oldType": "number"
                },
                {
                    "name": "deptId",
                    "type": "string",
                    "description": " 部门ID",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "deptUsers",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "integer",
                                "description": "用户ID"
                            },
                            "weightVal": {
                                "type": "number",
                                "description": "权重值"
                            }
                        },
                        "x-apifox-orders": [
                            "userId",
                            "weightVal"
                        ],
                        "required": [
                            "userId",
                            "weightVal"
                        ]
                    },
                    "description": "员工列表",
                    "oldType": "any[]"
                },
                {
                    "name": "msgNotify",
                    "type": "number",
                    "description": "消息提醒 0-不提醒 1-提醒",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加/编辑部门分配规则 buildFnGetOrPostCode\n * \n * @param {number} params.allocationStatus 必填: 分配状态 0-手动 1-自动\n * @param {number} params.autoAllocation 可选: 自动分配 0-按员工ID 1-安权重\n * @param {number} params.autoSwitch 可选: 自动规则开关 0-关闭 1-打开\n * @param {any[]} params.autoTimeRule 可选: \n * @param {any[]} params.autoWeekRule 可选: 自动规则时间-周\n * @param {number} params.choiceUserType 可选: 选择员工类型 0-全部 1-自定义\n * @param {string} params.deptId 必填:  部门ID\n * @param {any[]} params.deptUsers 可选: 员工列表\n * @param {number} params.msgNotify 可选: 消息提醒 0-不提醒 1-提醒\n * @return Promise<OAdminDeptAllocationRulePost>\n */\nexport const adminDeptAllocationRulePost = async (params?: IAdminDeptAllocationRulePost) => {\n\treturn post<OAdminDeptAllocationRulePost>(`/admin/dept/allocation/rule`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加/编辑部门分配规则 buildReqGetOrPostTyped\n * @url /admin/dept/allocation/rule\n */\nexport interface IAdminDeptAllocationRulePost{\n\tallocationStatus: number; // 分配状态 0-手动 1-自动\n\tautoAllocation?: number; // 自动分配 0-按员工ID 1-安权重\n\tautoSwitch?: number; // 自动规则开关 0-关闭 1-打开\n\tautoTimeRule?: any[];\n\tautoWeekRule?: any[]; // 自动规则时间-周\n\tchoiceUserType?: number; // 选择员工类型 0-全部 1-自定义\n\tdeptId: string; //  部门ID\n\tdeptUsers?: any[]; // 员工列表\n\tmsgNotify?: number; // 消息提醒 0-不提醒 1-提醒\n}",
        "resCode": "/**\n * @description 添加/编辑部门分配规则 buildResAnyTyped\n * @url /admin/dept/allocation/rule\n */\nexport type OAdminDeptAllocationRulePost = {\n}",
        "resValueCode": "/**\n * @description 添加/编辑部门分配规则 buildResAnyTyped\n * @url /admin/dept/allocation/rule\n */\nexport const OAdminDeptAllocationRulePostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/dept/{x}",
        "url": "/admin/dept/{id}",
        "pureUrl": "/admin/dept/{x}",
        "pathReqUrl": "/admin/dept/${id}",
        "method": "delete",
        "apiName": "删除部门",
        "key": "AdminDeptIdDelete",
        "fnName": "adminDeptIdDelete",
        "requestBaseName": "IAdminDeptIdDelete",
        "requestName": [
            "IAdminDeptIdDelete"
        ],
        "responseBaseName": "OAdminDeptIdDelete",
        "responseName": [
            "OAdminDeptIdDelete"
        ],
        "responseValueName": [
            "OAdminDeptIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "部门ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除部门 buildFnPathCode\n * @path {number id 必填: 部门ID}\n * @return Promise<OAdminDeptIdDelete>\n */\nexport const adminDeptIdDelete = async (id: number) => {\n\treturn del<OAdminDeptIdDelete>(`/admin/dept/${id}`)\n}",
        "reqCode": "/**\n * @description 删除部门 buildReqGetOrPostTyped\n * @url /admin/dept/{id}\n */\nexport interface IAdminDeptIdDelete{\n}",
        "resCode": "/**\n * @description 删除部门 buildResAnyTyped\n * @url /admin/dept/{x}\n */\nexport type OAdminDeptIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除部门 buildResAnyTyped\n * @url /admin/dept/{x}\n */\nexport const OAdminDeptIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/dept/{x}",
        "url": "/admin/dept/{id}",
        "pureUrl": "/admin/dept/{x}",
        "pathReqUrl": "/admin/dept/${id}",
        "method": "get",
        "apiName": "查询部门详情",
        "key": "AdminDeptIdGet",
        "fnName": "adminDeptIdGet",
        "requestBaseName": "IAdminDeptIdGet",
        "requestName": [
            "IAdminDeptIdGet"
        ],
        "responseBaseName": "OAdminDeptIdGet",
        "responseName": [
            "OAdminDeptIdGet"
        ],
        "responseValueName": [
            "OAdminDeptIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询部门详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminDeptIdGet>\n */\nexport const adminDeptIdGet = async (id: number) => {\n\treturn get<OAdminDeptIdGet>(`/admin/dept/${id}`)\n}",
        "reqCode": "/**\n * @description 查询部门详情 buildReqGetOrPostTyped\n * @url /admin/dept/{id}\n */\nexport interface IAdminDeptIdGet{\n}",
        "resCode": "/**\n * @description 查询部门详情 buildResAnyTyped\n * @url /admin/dept/{x}\n */\nexport type OAdminDeptIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询部门详情 buildResAnyTyped\n * @url /admin/dept/{x}\n */\nexport const OAdminDeptIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/dept/list",
        "url": "/admin/dept/list",
        "pureUrl": "/admin/dept/list",
        "pathReqUrl": "/admin/dept/list",
        "method": "get",
        "apiName": "查询部门列表",
        "key": "AdminDeptListGet",
        "fnName": "adminDeptListGet",
        "requestBaseName": "IAdminDeptListGet",
        "requestName": [
            "IAdminDeptListGet"
        ],
        "responseBaseName": "OAdminDeptListGet",
        "responseName": [
            "OAdminDeptListGet"
        ],
        "responseValueName": [
            "OAdminDeptListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "mDCc4brRRu",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "TXK0DyVH8l",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "e3XmiCQeRn",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询部门列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @return Promise<OAdminDeptListGet>\n */\nexport const adminDeptListGet = async (params?: IAdminDeptListGet) => {\n\treturn get<OAdminDeptListGet>(`/admin/dept/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询部门列表 buildReqGetOrPostTyped\n * @url /admin/dept/list\n */\nexport interface IAdminDeptListGet{\n\tkeyword?: string;\n\tpageSize?: number;\n\tpageNum?: number;\n}",
        "resCode": "/**\n * @description 查询部门列表 buildResAnyTyped\n * @url /admin/dept/list\n */\nexport type OAdminDeptListGet = {\n}",
        "resValueCode": "/**\n * @description 查询部门列表 buildResAnyTyped\n * @url /admin/dept/list\n */\nexport const OAdminDeptListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/dept",
        "url": "/admin/dept",
        "pureUrl": "/admin/dept",
        "pathReqUrl": "/admin/dept",
        "method": "post",
        "apiName": "新增部门",
        "key": "AdminDeptPost",
        "fnName": "adminDeptPost",
        "requestBaseName": "IAdminDeptPost",
        "requestName": [
            "IAdminDeptPost"
        ],
        "responseBaseName": "OAdminDeptPost",
        "responseName": [
            "OAdminDeptPost"
        ],
        "responseValueName": [
            "OAdminDeptPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "leaders",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "integer"
                            },
                            "isSyncUser": {
                                "type": "integer",
                                "description": "是否同步至员工 1-同步 0-不同步"
                            }
                        },
                        "x-apifox-orders": [
                            "userId",
                            "isSyncUser"
                        ],
                        "required": [
                            "userId",
                            "isSyncUser"
                        ]
                    },
                    "description": "负责人ids",
                    "oldType": "any[]"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "部门名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "users",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "integer"
                            }
                        },
                        "x-apifox-orders": [
                            "userId"
                        ],
                        "required": [
                            "userId"
                        ]
                    },
                    "description": "员工ids",
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增部门 buildFnGetOrPostCode\n * \n * @param {any[]} params.leaders 可选: 负责人ids\n * @param {string} params.name 必填: 部门名称\n * @param {any[]} params.users 可选: 员工ids\n * @return Promise<OAdminDeptPost>\n */\nexport const adminDeptPost = async (params?: IAdminDeptPost) => {\n\treturn post<OAdminDeptPost>(`/admin/dept`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增部门 buildReqGetOrPostTyped\n * @url /admin/dept\n */\nexport interface IAdminDeptPost{\n\tleaders?: any[]; // 负责人ids\n\tname: string; // 部门名称\n\tusers?: any[]; // 员工ids\n}",
        "resCode": "/**\n * @description 新增部门 buildResAnyTyped\n * @url /admin/dept\n */\nexport type OAdminDeptPost = {\n}",
        "resValueCode": "/**\n * @description 新增部门 buildResAnyTyped\n * @url /admin/dept\n */\nexport const OAdminDeptPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/dept",
        "url": "/admin/dept",
        "pureUrl": "/admin/dept",
        "pathReqUrl": "/admin/dept",
        "method": "put",
        "apiName": "编辑部门",
        "key": "AdminDeptPut",
        "fnName": "adminDeptPut",
        "requestBaseName": "IAdminDeptPut",
        "requestName": [
            "IAdminDeptPut"
        ],
        "responseBaseName": "OAdminDeptPut",
        "responseName": [
            "OAdminDeptPut"
        ],
        "responseValueName": [
            "OAdminDeptPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "部门ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "leaders",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "userId": {
                                "type": "integer"
                            },
                            "isSyncUser": {
                                "type": "string",
                                "description": "是否同步至员工 1-同步 0-不同步"
                            }
                        },
                        "x-apifox-orders": [
                            "userId",
                            "isSyncUser"
                        ],
                        "required": [
                            "userId",
                            "isSyncUser"
                        ]
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "部门名称",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑部门 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 部门ID\n * @param {any[]} params.leaders 可选: \n * @param {string} params.name 必填: 部门名称\n * @return Promise<OAdminDeptPut>\n */\nexport const adminDeptPut = async (params?: IAdminDeptPut) => {\n\treturn put<OAdminDeptPut>(`/admin/dept`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑部门 buildReqGetOrPostTyped\n * @url /admin/dept\n */\nexport interface IAdminDeptPut{\n\tid: number; // 部门ID\n\tleaders?: any[];\n\tname: string; // 部门名称\n}",
        "resCode": "/**\n * @description 编辑部门 buildResAnyTyped\n * @url /admin/dept\n */\nexport type OAdminDeptPut = {\n}",
        "resValueCode": "/**\n * @description 编辑部门 buildResAnyTyped\n * @url /admin/dept\n */\nexport const OAdminDeptPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/flow/clone",
        "url": "/admin/flow/clone",
        "pureUrl": "/admin/flow/clone",
        "pathReqUrl": "/admin/flow/clone",
        "method": "post",
        "apiName": "克隆流程",
        "key": "AdminFlowClonePost",
        "fnName": "adminFlowClonePost",
        "requestBaseName": "IAdminFlowClonePost",
        "requestName": [
            "IAdminFlowClonePost"
        ],
        "responseBaseName": "OAdminFlowClonePost",
        "responseName": [
            "OAdminFlowClonePost"
        ],
        "responseValueName": [
            "OAdminFlowClonePostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "流程ID",
                    "type": "number",
                    "id": "RUbDWmgTmn",
                    "enable": true,
                    "name": "flowId",
                    "sampleValue": "",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 克隆流程 buildFnGetOrPostCode\n * \n * @param {number} params.flowId 必填: 流程ID\n * @return Promise<OAdminFlowClonePost>\n */\nexport const adminFlowClonePost = async (params?: IAdminFlowClonePost) => {\n\treturn post<OAdminFlowClonePost>(`/admin/flow/clone`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 克隆流程 buildReqGetOrPostTyped\n * @url /admin/flow/clone\n */\nexport interface IAdminFlowClonePost{\n\tflowId: number; // 流程ID\n}",
        "resCode": "/**\n * @description 克隆流程 buildResAnyTyped\n * @url /admin/flow/clone\n */\nexport type OAdminFlowClonePost = {\n}",
        "resValueCode": "/**\n * @description 克隆流程 buildResAnyTyped\n * @url /admin/flow/clone\n */\nexport const OAdminFlowClonePostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/flow/{x}",
        "url": "/admin/flow/{id}",
        "pureUrl": "/admin/flow/{x}",
        "pathReqUrl": "/admin/flow/${id}",
        "method": "delete",
        "apiName": "删除流程",
        "key": "AdminFlowIdDelete",
        "fnName": "adminFlowIdDelete",
        "requestBaseName": "IAdminFlowIdDelete",
        "requestName": [
            "IAdminFlowIdDelete"
        ],
        "responseBaseName": "OAdminFlowIdDelete",
        "responseName": [
            "OAdminFlowIdDelete"
        ],
        "responseValueName": [
            "OAdminFlowIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除流程 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminFlowIdDelete>\n */\nexport const adminFlowIdDelete = async (id: number) => {\n\treturn del<OAdminFlowIdDelete>(`/admin/flow/${id}`)\n}",
        "reqCode": "/**\n * @description 删除流程 buildReqGetOrPostTyped\n * @url /admin/flow/{id}\n */\nexport interface IAdminFlowIdDelete{\n}",
        "resCode": "/**\n * @description 删除流程 buildResAnyTyped\n * @url /admin/flow/{x}\n */\nexport type OAdminFlowIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除流程 buildResAnyTyped\n * @url /admin/flow/{x}\n */\nexport const OAdminFlowIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/flow/{x}",
        "url": "/admin/flow/{id}",
        "pureUrl": "/admin/flow/{x}",
        "pathReqUrl": "/admin/flow/${id}",
        "method": "get",
        "apiName": "流程详情",
        "key": "AdminFlowIdGet",
        "fnName": "adminFlowIdGet",
        "requestBaseName": "IAdminFlowIdGet",
        "requestName": [
            "IAdminFlowIdGet"
        ],
        "responseBaseName": "OAdminFlowIdGet",
        "responseName": [
            "OAdminFlowIdGet"
        ],
        "responseValueName": [
            "OAdminFlowIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 流程详情 buildFnPathCode\n * @path {string id 必填: }\n * @return Promise<OAdminFlowIdGet>\n */\nexport const adminFlowIdGet = async (id: string) => {\n\treturn get<OAdminFlowIdGet>(`/admin/flow/${id}`)\n}",
        "reqCode": "/**\n * @description 流程详情 buildReqGetOrPostTyped\n * @url /admin/flow/{id}\n */\nexport interface IAdminFlowIdGet{\n}",
        "resCode": "/**\n * @description 流程详情 buildResAnyTyped\n * @url /admin/flow/{x}\n */\nexport type OAdminFlowIdGet = {\n}",
        "resValueCode": "/**\n * @description 流程详情 buildResAnyTyped\n * @url /admin/flow/{x}\n */\nexport const OAdminFlowIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/flow/list",
        "url": "/admin/flow/list",
        "pureUrl": "/admin/flow/list",
        "pathReqUrl": "/admin/flow/list",
        "method": "get",
        "apiName": "流程列表",
        "key": "AdminFlowListGet",
        "fnName": "adminFlowListGet",
        "requestBaseName": "IAdminFlowListGet",
        "requestName": [
            "IAdminFlowListGet"
        ],
        "responseBaseName": "OAdminFlowListGet",
        "responseName": [
            "OAdminFlowListGet"
        ],
        "responseValueName": [
            "OAdminFlowListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "搜索条件",
                    "type": "string",
                    "id": "HbI2HmriWq",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "WTd5A6FehZ",
                    "enable": true,
                    "name": "createStartTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "uiMYnHkk0X",
                    "enable": true,
                    "name": "createEndTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "UE5Ypgov7x",
                    "enable": true,
                    "name": "updateStartTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "0SRlvJ2H8l",
                    "enable": true,
                    "name": "updateEndTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "WEivry5c3U",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "iamnTsuFSK",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "合同ID",
                    "type": "number",
                    "id": "GZqPraJhCR",
                    "enable": true,
                    "name": "contractId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 流程列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 搜索条件\n * @param {string} params.createStartTime 可选: \n * @param {string} params.createEndTime 可选: \n * @param {string} params.updateStartTime 可选: \n * @param {string} params.updateEndTime 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.contractId 可选: 合同ID\n * @return Promise<OAdminFlowListGet>\n */\nexport const adminFlowListGet = async (params?: IAdminFlowListGet) => {\n\treturn get<OAdminFlowListGet>(`/admin/flow/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 流程列表 buildReqGetOrPostTyped\n * @url /admin/flow/list\n */\nexport interface IAdminFlowListGet{\n\ttitle?: string; // 搜索条件\n\tcreateStartTime?: string;\n\tcreateEndTime?: string;\n\tupdateStartTime?: string;\n\tupdateEndTime?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n\tcontractId?: number; // 合同ID\n}",
        "resCode": "/**\n * @description 流程列表 buildResAnyTyped\n * @url /admin/flow/list\n */\nexport type OAdminFlowListGet = {\n}",
        "resValueCode": "/**\n * @description 流程列表 buildResAnyTyped\n * @url /admin/flow/list\n */\nexport const OAdminFlowListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/flow",
        "url": "/admin/flow",
        "pureUrl": "/admin/flow",
        "pathReqUrl": "/admin/flow",
        "method": "post",
        "apiName": "新增模版",
        "key": "AdminFlowPost",
        "fnName": "adminFlowPost",
        "requestBaseName": "IAdminFlowPost",
        "requestName": [
            "IAdminFlowPost"
        ],
        "responseBaseName": "OAdminFlowPost",
        "responseName": [
            "OAdminFlowPost"
        ],
        "responseValueName": [
            "OAdminFlowPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "any[]",
                    "items": {
                        "type": "string"
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "type",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增模版 buildFnGetOrPostCode\n * \n * @param {any[]} params.content 必填: \n * @param {string} params.title 必填: \n * @param {string} params.type 必填: \n * @return Promise<OAdminFlowPost>\n */\nexport const adminFlowPost = async (params?: IAdminFlowPost) => {\n\treturn post<OAdminFlowPost>(`/admin/flow`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增模版 buildReqGetOrPostTyped\n * @url /admin/flow\n */\nexport interface IAdminFlowPost{\n\tcontent: any[];\n\ttitle: string;\n\ttype: string;\n}",
        "resCode": "/**\n * @description 新增模版 buildResAnyTyped\n * @url /admin/flow\n */\nexport type OAdminFlowPost = {\n}",
        "resValueCode": "/**\n * @description 新增模版 buildResAnyTyped\n * @url /admin/flow\n */\nexport const OAdminFlowPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/flow",
        "url": "/admin/flow",
        "pureUrl": "/admin/flow",
        "pathReqUrl": "/admin/flow",
        "method": "put",
        "apiName": "编辑模版",
        "key": "AdminFlowPut",
        "fnName": "adminFlowPut",
        "requestBaseName": "IAdminFlowPut",
        "requestName": [
            "IAdminFlowPut"
        ],
        "responseBaseName": "OAdminFlowPut",
        "responseName": [
            "OAdminFlowPut"
        ],
        "responseValueName": [
            "OAdminFlowPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "updateType",
                    "type": "string",
                    "description": "修改类型 status, title, content",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "updateValue",
                    "type": "string | number | boolean | any[] | any | null",
                    "required": true,
                    "oldType": "string | number | boolean | any[] | any | null"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑模版 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: \n * @param {string} params.updateType 必填: 修改类型 status, title, content\n * @param {string | number | boolean | any[] | any | null} params.updateValue 必填: \n * @return Promise<OAdminFlowPut>\n */\nexport const adminFlowPut = async (params?: IAdminFlowPut) => {\n\treturn put<OAdminFlowPut>(`/admin/flow`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑模版 buildReqGetOrPostTyped\n * @url /admin/flow\n */\nexport interface IAdminFlowPut{\n\tid: number;\n\tupdateType: string; // 修改类型 status, title, content\n\tupdateValue: string | number | boolean | any[] | any | null;\n}",
        "resCode": "/**\n * @description 编辑模版 buildResAnyTyped\n * @url /admin/flow\n */\nexport type OAdminFlowPut = {\n}",
        "resValueCode": "/**\n * @description 编辑模版 buildResAnyTyped\n * @url /admin/flow\n */\nexport const OAdminFlowPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/fund/{x}",
        "url": "/admin/fund/{id}",
        "pureUrl": "/admin/fund/{x}",
        "pathReqUrl": "/admin/fund/${id}",
        "method": "get",
        "apiName": "基金详情",
        "key": "AdminFundIdGet",
        "fnName": "adminFundIdGet",
        "requestBaseName": "IAdminFundIdGet",
        "requestName": [
            "IAdminFundIdGet"
        ],
        "responseBaseName": "OAdminFundIdGet",
        "responseName": [
            "OAdminFundIdGet"
        ],
        "responseValueName": [
            "OAdminFundIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 基金详情 buildFnPathCode\n * @path {string id 必填: }\n * @return Promise<OAdminFundIdGet>\n */\nexport const adminFundIdGet = async (id: string) => {\n\treturn get<OAdminFundIdGet>(`/admin/fund/${id}`)\n}",
        "reqCode": "/**\n * @description 基金详情 buildReqGetOrPostTyped\n * @url /admin/fund/{id}\n */\nexport interface IAdminFundIdGet{\n}",
        "resCode": "/**\n * @description 基金详情 buildResAnyTyped\n * @url /admin/fund/{x}\n */\nexport type OAdminFundIdGet = {\n}",
        "resValueCode": "/**\n * @description 基金详情 buildResAnyTyped\n * @url /admin/fund/{x}\n */\nexport const OAdminFundIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/fund/list",
        "url": "/admin/fund/list",
        "pureUrl": "/admin/fund/list",
        "pathReqUrl": "/admin/fund/list",
        "method": "get",
        "apiName": "基金列表",
        "key": "AdminFundListGet",
        "fnName": "adminFundListGet",
        "requestBaseName": "IAdminFundListGet",
        "requestName": [
            "IAdminFundListGet"
        ],
        "responseBaseName": "OAdminFundListGet",
        "responseName": [
            "OAdminFundListGet"
        ],
        "responseValueName": [
            "OAdminFundListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "基金标题",
                    "type": "string",
                    "id": "wFIhYnLTvG",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "7hx07Udcij",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "ryjvhfrTCN",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "6rTlQyKs1H",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 基金列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 基金标题\n * @param {number} params.productId 可选: 产品ID\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminFundListGet>\n */\nexport const adminFundListGet = async (params?: IAdminFundListGet) => {\n\treturn get<OAdminFundListGet>(`/admin/fund/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 基金列表 buildReqGetOrPostTyped\n * @url /admin/fund/list\n */\nexport interface IAdminFundListGet{\n\ttitle?: string; // 基金标题\n\tproductId?: number; // 产品ID\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 基金列表 buildResAnyTyped\n * @url /admin/fund/list\n */\nexport type OAdminFundListGet = {\n}",
        "resValueCode": "/**\n * @description 基金列表 buildResAnyTyped\n * @url /admin/fund/list\n */\nexport const OAdminFundListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/fund",
        "url": "/admin/fund",
        "pureUrl": "/admin/fund",
        "pathReqUrl": "/admin/fund",
        "method": "post",
        "apiName": "新增基金",
        "key": "AdminFundPost",
        "fnName": "adminFundPost",
        "requestBaseName": "IAdminFundPost",
        "requestName": [
            "IAdminFundPost"
        ],
        "responseBaseName": "OAdminFundPost",
        "responseName": [
            "OAdminFundPost"
        ],
        "responseValueName": [
            "OAdminFundPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "标题",
                    "type": "string",
                    "id": "5SkqRvAQD5",
                    "enable": true,
                    "name": "title",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金类型",
                    "type": "string",
                    "id": "nF8WD0ddrf",
                    "enable": true,
                    "name": "type",
                    "sampleValue": "EB-5",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "成立时间",
                    "type": "string",
                    "id": "RZoPObtX9w",
                    "enable": true,
                    "name": "establishTime",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金规模",
                    "type": "string",
                    "id": "BVE2AFIhp9",
                    "enable": true,
                    "name": "scale",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金管理人",
                    "type": "string",
                    "id": "svj09N2HXU",
                    "enable": true,
                    "name": "manager",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增基金 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 标题\n * @param {string} params.type 可选: 基金类型\n * @param {string} params.establishTime 可选: 成立时间\n * @param {string} params.scale 可选: 基金规模\n * @param {string} params.manager 可选: 基金管理人\n * @return Promise<OAdminFundPost>\n */\nexport const adminFundPost = async (params?: IAdminFundPost) => {\n\treturn post<OAdminFundPost>(`/admin/fund`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 新增基金 buildReqGetOrPostTyped\n * @url /admin/fund\n */\nexport interface IAdminFundPost{\n\ttitle?: string; // 标题\n\ttype?: string; // 基金类型\n\testablishTime?: string; // 成立时间\n\tscale?: string; // 基金规模\n\tmanager?: string; // 基金管理人\n}",
        "resCode": "/**\n * @description 新增基金 buildResAnyTyped\n * @url /admin/fund\n */\nexport type OAdminFundPost = {\n}",
        "resValueCode": "/**\n * @description 新增基金 buildResAnyTyped\n * @url /admin/fund\n */\nexport const OAdminFundPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/fund",
        "url": "/admin/fund",
        "pureUrl": "/admin/fund",
        "pathReqUrl": "/admin/fund",
        "method": "put",
        "apiName": "编辑基金",
        "key": "AdminFundPut",
        "fnName": "adminFundPut",
        "requestBaseName": "IAdminFundPut",
        "requestName": [
            "IAdminFundPut"
        ],
        "responseBaseName": "OAdminFundPut",
        "responseName": [
            "OAdminFundPut"
        ],
        "responseValueName": [
            "OAdminFundPutValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "标题",
                    "type": "string",
                    "id": "5SkqRvAQD5",
                    "enable": true,
                    "name": "title",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金类型",
                    "type": "string",
                    "id": "nF8WD0ddrf",
                    "enable": true,
                    "name": "type",
                    "sampleValue": "EB-5",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "成立时间",
                    "type": "string",
                    "id": "RZoPObtX9w",
                    "enable": true,
                    "name": "establishTime",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金规模",
                    "type": "string",
                    "id": "BVE2AFIhp9",
                    "enable": true,
                    "name": "scale",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "基金管理人",
                    "type": "string",
                    "id": "svj09N2HXU",
                    "enable": true,
                    "name": "manager",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "主键ID",
                    "type": "string",
                    "id": "yXd7ovyvSJ",
                    "enable": true,
                    "name": "id",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑基金 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 标题\n * @param {string} params.type 可选: 基金类型\n * @param {string} params.establishTime 可选: 成立时间\n * @param {string} params.scale 可选: 基金规模\n * @param {string} params.manager 可选: 基金管理人\n * @param {string} params.id 可选: 主键ID\n * @return Promise<OAdminFundPut>\n */\nexport const adminFundPut = async (params?: IAdminFundPut) => {\n\treturn put<OAdminFundPut>(`/admin/fund`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 编辑基金 buildReqGetOrPostTyped\n * @url /admin/fund\n */\nexport interface IAdminFundPut{\n\ttitle?: string; // 标题\n\ttype?: string; // 基金类型\n\testablishTime?: string; // 成立时间\n\tscale?: string; // 基金规模\n\tmanager?: string; // 基金管理人\n\tid?: string; // 主键ID\n}",
        "resCode": "/**\n * @description 编辑基金 buildResAnyTyped\n * @url /admin/fund\n */\nexport type OAdminFundPut = {\n}",
        "resValueCode": "/**\n * @description 编辑基金 buildResAnyTyped\n * @url /admin/fund\n */\nexport const OAdminFundPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/fund/type/list",
        "url": "/admin/fund/type/list",
        "pureUrl": "/admin/fund/type/list",
        "pathReqUrl": "/admin/fund/type/list",
        "method": "get",
        "apiName": "基金类型列表",
        "key": "AdminFundTypeListGet",
        "fnName": "adminFundTypeListGet",
        "requestBaseName": "IAdminFundTypeListGet",
        "requestName": [
            "IAdminFundTypeListGet"
        ],
        "responseBaseName": "OAdminFundTypeListGet",
        "responseName": [
            "OAdminFundTypeListGet"
        ],
        "responseValueName": [
            "OAdminFundTypeListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 基金类型列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminFundTypeListGet>\n */\nexport const adminFundTypeListGet = async (params?: IAdminFundTypeListGet) => {\n\treturn get<OAdminFundTypeListGet>(`/admin/fund/type/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 基金类型列表 buildReqGetOrPostTyped\n * @url /admin/fund/type/list\n */\nexport interface IAdminFundTypeListGet{\n}",
        "resCode": "/**\n * @description 基金类型列表 buildResAnyTyped\n * @url /admin/fund/type/list\n */\nexport type OAdminFundTypeListGet = {\n}",
        "resValueCode": "/**\n * @description 基金类型列表 buildResAnyTyped\n * @url /admin/fund/type/list\n */\nexport const OAdminFundTypeListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/info",
        "url": "/admin/info",
        "pureUrl": "/admin/info",
        "pathReqUrl": "/admin/info",
        "method": "get",
        "apiName": "获取用户信息",
        "key": "AdminInfoGet",
        "fnName": "adminInfoGet",
        "requestBaseName": "IAdminInfoGet",
        "requestName": [
            "IAdminInfoGet"
        ],
        "responseBaseName": "OAdminInfoGet",
        "responseName": [
            "OAdminInfoGet"
        ],
        "responseValueName": [
            "OAdminInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取用户信息 buildFnGetOrPostCode\n * \n * @return Promise<OAdminInfoGet>\n */\nexport const adminInfoGet = async (params?: IAdminInfoGet) => {\n\treturn get<OAdminInfoGet>(`/admin/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取用户信息 buildReqGetOrPostTyped\n * @url /admin/info\n */\nexport interface IAdminInfoGet{\n}",
        "resCode": "/**\n * @description 获取用户信息 buildResAnyTyped\n * @url /admin/info\n */\nexport type OAdminInfoGet = {\n}",
        "resValueCode": "/**\n * @description 获取用户信息 buildResAnyTyped\n * @url /admin/info\n */\nexport const OAdminInfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/invitee/list",
        "url": "/admin/investor/invitee/list",
        "pureUrl": "/admin/investor/invitee/list",
        "pathReqUrl": "/admin/investor/invitee/list",
        "method": "get",
        "apiName": "获取邀请的用户",
        "key": "AdminInvestorInviteeListGet",
        "fnName": "adminInvestorInviteeListGet",
        "requestBaseName": "IAdminInvestorInviteeListGet",
        "requestName": [
            "IAdminInvestorInviteeListGet"
        ],
        "responseBaseName": "OAdminInvestorInviteeListGet",
        "responseName": [
            "OAdminInvestorInviteeListGet"
        ],
        "responseValueName": [
            "OAdminInvestorInviteeListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "5tauPyQ3Dh",
                    "name": "id",
                    "required": true,
                    "description": "投资者ID",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "ef1f0fgQzK",
                    "name": "pageNum",
                    "required": false,
                    "description": "页码",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "FzrPXM4kCQ",
                    "name": "pageSize",
                    "required": false,
                    "description": "条数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取邀请的用户 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 投资者ID\n * @param {number} params.pageNum 可选: 页码\n * @param {number} params.pageSize 可选: 条数\n * @return Promise<OAdminInvestorInviteeListGet>\n */\nexport const adminInvestorInviteeListGet = async (params?: IAdminInvestorInviteeListGet) => {\n\treturn get<OAdminInvestorInviteeListGet>(`/admin/investor/invitee/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取邀请的用户 buildReqGetOrPostTyped\n * @url /admin/investor/invitee/list\n */\nexport interface IAdminInvestorInviteeListGet{\n\tid: number; // 投资者ID\n\tpageNum?: number; // 页码\n\tpageSize?: number; // 条数\n}",
        "resCode": "/**\n * @description 获取邀请的用户 buildResAnyTyped\n * @url /admin/investor/invitee/list\n */\nexport type OAdminInvestorInviteeListGet = {\n}",
        "resValueCode": "/**\n * @description 获取邀请的用户 buildResAnyTyped\n * @url /admin/investor/invitee/list\n */\nexport const OAdminInvestorInviteeListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/list",
        "url": "/admin/investor/list",
        "pureUrl": "/admin/investor/list",
        "pathReqUrl": "/admin/investor/list",
        "method": "get",
        "apiName": "获取投资者列表",
        "key": "AdminInvestorListGet",
        "fnName": "adminInvestorListGet",
        "requestBaseName": "IAdminInvestorListGet",
        "requestName": [
            "IAdminInvestorListGet"
        ],
        "responseBaseName": "OAdminInvestorListGet",
        "responseName": [
            "OAdminInvestorListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "id": "46hr6AHJLE",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "uQ1LHITqWi",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "join date end",
                    "type": "string",
                    "id": "V2Ij6DP3A2",
                    "enable": true,
                    "name": "createTimeEnd",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "join date start",
                    "type": "string",
                    "id": "EiG8JGY7Mh",
                    "enable": true,
                    "name": "createTimeStart",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "用户邮箱",
                    "type": "string",
                    "id": "PoZFst7LI5",
                    "enable": true,
                    "name": "email",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "DFYtDyLcvl",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "PvP7iLQ6L3",
                    "enable": true,
                    "name": "lastLoginDateStart",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "CP9RzIu12F",
                    "enable": true,
                    "name": "lastLoginDateEnd",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者类型  3-Reg S 4-Reg D",
                    "type": "number",
                    "id": "kybBEEKlmx",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "姓名",
                    "type": "string",
                    "id": "VXQv77mgqP",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "邀请人",
                    "type": "string",
                    "id": "fQnnIVcP0f",
                    "enable": true,
                    "name": "invEmail",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "RfYEjC1DQ9",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminInvestorListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取投资者列表 buildFnArrayCode\n * \n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {string} params.createTimeEnd 可选: join date end\n * @param {string} params.createTimeStart 可选: join date start\n * @param {string} params.email 可选: 用户邮箱\n * @param {string} params.investorNo 可选: \n * @param {string} params.lastLoginDateStart 可选: \n * @param {string} params.lastLoginDateEnd 可选: \n * @param {number} params.type 可选: 投资者类型  3-Reg S 4-Reg D\n * @param {string} params.name 可选: 姓名\n * @param {string} params.invEmail 可选: 邀请人\n * @param {number} params.productId 可选: 产品ID}\n * @return Promise<OAdminInvestorListGetItem>\n */\nexport const adminInvestorListGet = async (params?: IAdminInvestorListGet) => {\n\treturn get<OAdminInvestorListGetItem[]>(`/admin/investor/list`, {\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者列表 buildReqGetOrPostTyped\n * @url /admin/investor/list\n */\nexport interface IAdminInvestorListGet{\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\tcreateTimeEnd?: string; // join date end\n\tcreateTimeStart?: string; // join date start\n\temail?: string; // 用户邮箱\n\tinvestorNo?: string;\n\tlastLoginDateStart?: string;\n\tlastLoginDateEnd?: string;\n\ttype?: number; // 投资者类型  3-Reg S 4-Reg D\n\tname?: string; // 姓名\n\tinvEmail?: string; // 邀请人\n\tproductId?: number; // 产品ID\n}",
        "deleteResponseName": "OAdminInvestorListGet",
        "resCode": "/**\n * @description 获取投资者列表 buildResArrayTyped\n * @url /admin/investor/list\n */\nexport type OAdminInvestorListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 获取投资者列表 buildResArrayTyped\n * @url /admin/investor/list\n */\nexport const OAdminInvestorListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/order/list",
        "url": "/admin/investor/order/list",
        "pureUrl": "/admin/investor/order/list",
        "pathReqUrl": "/admin/investor/order/list",
        "method": "get",
        "apiName": "获取投资者订单列表",
        "key": "AdminInvestorOrderListGet",
        "fnName": "adminInvestorOrderListGet",
        "requestBaseName": "IAdminInvestorOrderListGet",
        "requestName": [
            "IAdminInvestorOrderListGet"
        ],
        "responseBaseName": "OAdminInvestorOrderListGet",
        "responseName": [
            "OAdminInvestorOrderListGet"
        ],
        "responseValueName": [
            "OAdminInvestorOrderListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "投资者ID",
                    "type": "number",
                    "id": "Sam8QZWQuO",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NHc6P7zQM8",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "XhKpDWx9Ne",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者订单列表 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 可选: 投资者ID\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminInvestorOrderListGet>\n */\nexport const adminInvestorOrderListGet = async (params?: IAdminInvestorOrderListGet) => {\n\treturn get<OAdminInvestorOrderListGet>(`/admin/investor/order/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者订单列表 buildReqGetOrPostTyped\n * @url /admin/investor/order/list\n */\nexport interface IAdminInvestorOrderListGet{\n\tinvestorId?: number; // 投资者ID\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取投资者订单列表 buildResAnyTyped\n * @url /admin/investor/order/list\n */\nexport type OAdminInvestorOrderListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者订单列表 buildResAnyTyped\n * @url /admin/investor/order/list\n */\nexport const OAdminInvestorOrderListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/product/relevant/list",
        "url": "/admin/investor/product/relevant/list",
        "pureUrl": "/admin/investor/product/relevant/list",
        "pathReqUrl": "/admin/investor/product/relevant/list",
        "method": "get",
        "apiName": "获取投资者已有的权限",
        "key": "AdminInvestorProductRelevantListGet",
        "fnName": "adminInvestorProductRelevantListGet",
        "requestBaseName": "IAdminInvestorProductRelevantListGet",
        "requestName": [
            "IAdminInvestorProductRelevantListGet"
        ],
        "responseBaseName": "OAdminInvestorProductRelevantListGet",
        "responseName": [
            "OAdminInvestorProductRelevantListGet"
        ],
        "responseValueName": [
            "OAdminInvestorProductRelevantListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "kxKlJvQXvA",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "固定值 file",
                    "type": "string",
                    "id": "Vc2D89bBP1",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "vHhWUSTv6U",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "YcqRyRdeSo",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "v0RT9jRySe",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者已有的权限 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 可选: \n * @param {string} params.type 可选: 固定值 file\n * @param {number} params.productId 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @return Promise<OAdminInvestorProductRelevantListGet>\n */\nexport const adminInvestorProductRelevantListGet = async (params?: IAdminInvestorProductRelevantListGet) => {\n\treturn get<OAdminInvestorProductRelevantListGet>(`/admin/investor/product/relevant/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者已有的权限 buildReqGetOrPostTyped\n * @url /admin/investor/product/relevant/list\n */\nexport interface IAdminInvestorProductRelevantListGet{\n\tinvestorId?: number;\n\ttype?: string; // 固定值 file\n\tproductId?: number;\n\tpageSize?: number;\n\tpageNum?: number;\n}",
        "resCode": "/**\n * @description 获取投资者已有的权限 buildResAnyTyped\n * @url /admin/investor/product/relevant/list\n */\nexport type OAdminInvestorProductRelevantListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者已有的权限 buildResAnyTyped\n * @url /admin/investor/product/relevant/list\n */\nexport const OAdminInvestorProductRelevantListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/investor/product/relevant",
        "url": "/admin/investor/product/relevant",
        "pureUrl": "/admin/investor/product/relevant",
        "pathReqUrl": "/admin/investor/product/relevant",
        "method": "post",
        "apiName": "分配投资者权限",
        "key": "AdminInvestorProductRelevantPost",
        "fnName": "adminInvestorProductRelevantPost",
        "requestBaseName": "IAdminInvestorProductRelevantPost",
        "requestName": [
            "IAdminInvestorProductRelevantPost"
        ],
        "responseBaseName": "OAdminInvestorProductRelevantPost",
        "responseName": [
            "OAdminInvestorProductRelevantPost"
        ],
        "responseValueName": [
            "OAdminInvestorProductRelevantPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资人ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "levelId",
                    "type": "number",
                    "description": "等级ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "类型 固定值 file 或者 video",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 分配投资者权限 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资人ID\n * @param {number} params.levelId 必填: 等级ID\n * @param {number} params.productId 必填: 产品ID\n * @param {string} params.type 必填: 类型 固定值 file 或者 video\n * @return Promise<OAdminInvestorProductRelevantPost>\n */\nexport const adminInvestorProductRelevantPost = async (params?: IAdminInvestorProductRelevantPost) => {\n\treturn post<OAdminInvestorProductRelevantPost>(`/admin/investor/product/relevant`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 分配投资者权限 buildReqGetOrPostTyped\n * @url /admin/investor/product/relevant\n */\nexport interface IAdminInvestorProductRelevantPost{\n\tinvestorId: number; // 投资人ID\n\tlevelId: number; // 等级ID\n\tproductId: number; // 产品ID\n\ttype: string; // 类型 固定值 file 或者 video\n}",
        "resCode": "/**\n * @description 分配投资者权限 buildResAnyTyped\n * @url /admin/investor/product/relevant\n */\nexport type OAdminInvestorProductRelevantPost = {\n}",
        "resValueCode": "/**\n * @description 分配投资者权限 buildResAnyTyped\n * @url /admin/investor/product/relevant\n */\nexport const OAdminInvestorProductRelevantPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/investor/record/add",
        "url": "/admin/investor/record/add",
        "pureUrl": "/admin/investor/record/add",
        "pathReqUrl": "/admin/investor/record/add",
        "method": "post",
        "apiName": "新增投资者",
        "key": "AdminInvestorRecordAddPost",
        "fnName": "adminInvestorRecordAddPost",
        "requestBaseName": "IAdminInvestorRecordAddPost",
        "requestName": [
            "IAdminInvestorRecordAddPost"
        ],
        "responseBaseName": "OAdminInvestorRecordAddPost",
        "responseName": [
            "OAdminInvestorRecordAddPost"
        ],
        "responseValueName": [
            "OAdminInvestorRecordAddPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "alienNumber",
                    "type": "string",
                    "description": "侨民号码 即绿卡上的号码",
                    "oldType": "string"
                },
                {
                    "name": "avatar",
                    "type": "string",
                    "description": "图像",
                    "oldType": "string"
                },
                {
                    "name": "birthday",
                    "type": "string",
                    "description": "出生日期",
                    "oldType": "string"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "country",
                    "type": "string",
                    "description": "国家",
                    "oldType": "string"
                },
                {
                    "name": "currentAddress",
                    "type": "string",
                    "description": "当前地址",
                    "oldType": "string"
                },
                {
                    "name": "demoAccount",
                    "type": "string",
                    "description": "0-非演示账号 1-演示账号",
                    "oldType": "string"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "firstName",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "gender",
                    "type": "number",
                    "description": "性别 0-male 1-female 2-unknown",
                    "oldType": "number"
                },
                {
                    "name": "lastName",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "middleName",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "overseasAddress",
                    "type": "string",
                    "description": "海外地址",
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号",
                    "oldType": "string"
                },
                {
                    "name": "phoneAreaCode",
                    "type": "string",
                    "description": "手机区号",
                    "oldType": "string"
                },
                {
                    "name": "province",
                    "type": "string",
                    "description": "洲/省",
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "ssn",
                    "type": "string",
                    "description": "社会安全号码",
                    "oldType": "string"
                },
                {
                    "name": "type",
                    "type": "number",
                    "description": "投资者类型 0-未选择合格投资者 1-非合格投资者 2-合格投资者 3-Reg S 4-Reg D",
                    "oldType": "number"
                },
                {
                    "name": "zipCode",
                    "type": "string",
                    "description": "邮政编码",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 新增投资者 buildFnGetOrPostCode\n * \n * @param {string} params.alienNumber 可选: 侨民号码 即绿卡上的号码\n * @param {string} params.avatar 可选: 图像\n * @param {string} params.birthday 可选: 出生日期\n * @param {string} params.city 可选: 城市\n * @param {string} params.country 可选: 国家\n * @param {string} params.currentAddress 可选: 当前地址\n * @param {string} params.demoAccount 可选: 0-非演示账号 1-演示账号\n * @param {string} params.email 必填: 邮箱\n * @param {string} params.firstName 必填: \n * @param {number} params.gender 可选: 性别 0-male 1-female 2-unknown\n * @param {string} params.lastName 必填: \n * @param {string} params.middleName 可选: \n * @param {string} params.overseasAddress 可选: 海外地址\n * @param {string} params.phone 可选: 手机号\n * @param {string} params.phoneAreaCode 可选: 手机区号\n * @param {string} params.province 可选: 洲/省\n * @param {string} params.remark 可选: 备注\n * @param {string} params.ssn 可选: 社会安全号码\n * @param {number} params.type 可选: 投资者类型 0-未选择合格投资者 1-非合格投资者 2-合格投资者 3-Reg S 4-Reg D\n * @param {string} params.zipCode 可选: 邮政编码\n * @return Promise<OAdminInvestorRecordAddPost>\n */\nexport const adminInvestorRecordAddPost = async (params?: IAdminInvestorRecordAddPost) => {\n\treturn post<OAdminInvestorRecordAddPost>(`/admin/investor/record/add`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增投资者 buildReqGetOrPostTyped\n * @url /admin/investor/record/add\n */\nexport interface IAdminInvestorRecordAddPost{\n\talienNumber?: string; // 侨民号码 即绿卡上的号码\n\tavatar?: string; // 图像\n\tbirthday?: string; // 出生日期\n\tcity?: string; // 城市\n\tcountry?: string; // 国家\n\tcurrentAddress?: string; // 当前地址\n\tdemoAccount?: string; // 0-非演示账号 1-演示账号\n\temail: string; // 邮箱\n\tfirstName: string;\n\tgender?: number; // 性别 0-male 1-female 2-unknown\n\tlastName: string;\n\tmiddleName?: string;\n\toverseasAddress?: string; // 海外地址\n\tphone?: string; // 手机号\n\tphoneAreaCode?: string; // 手机区号\n\tprovince?: string; // 洲/省\n\tremark?: string; // 备注\n\tssn?: string; // 社会安全号码\n\ttype?: number; // 投资者类型 0-未选择合格投资者 1-非合格投资者 2-合格投资者 3-Reg S 4-Reg D\n\tzipCode?: string; // 邮政编码\n}",
        "resCode": "/**\n * @description 新增投资者 buildResAnyTyped\n * @url /admin/investor/record/add\n */\nexport type OAdminInvestorRecordAddPost = {\n}",
        "resValueCode": "/**\n * @description 新增投资者 buildResAnyTyped\n * @url /admin/investor/record/add\n */\nexport const OAdminInvestorRecordAddPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/record/basic",
        "url": "/admin/investor/record/basic",
        "pureUrl": "/admin/investor/record/basic",
        "pathReqUrl": "/admin/investor/record/basic",
        "method": "get",
        "apiName": "获取投资者基本信息",
        "key": "AdminInvestorRecordBasicGet",
        "fnName": "adminInvestorRecordBasicGet",
        "requestBaseName": "IAdminInvestorRecordBasicGet",
        "requestName": [
            "IAdminInvestorRecordBasicGet"
        ],
        "responseBaseName": "OAdminInvestorRecordBasicGet",
        "responseName": [
            "OAdminInvestorRecordBasicGet"
        ],
        "responseValueName": [
            "OAdminInvestorRecordBasicGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "投资者ID",
                    "type": "number",
                    "id": "YbecKvAx4m",
                    "enable": true,
                    "name": "id",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者基本信息 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: 投资者ID\n * @return Promise<OAdminInvestorRecordBasicGet>\n */\nexport const adminInvestorRecordBasicGet = async (params?: IAdminInvestorRecordBasicGet) => {\n\treturn get<OAdminInvestorRecordBasicGet>(`/admin/investor/record/basic`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者基本信息 buildReqGetOrPostTyped\n * @url /admin/investor/record/basic\n */\nexport interface IAdminInvestorRecordBasicGet{\n\tid?: number; // 投资者ID\n}",
        "resCode": "/**\n * @description 获取投资者基本信息 buildResAnyTyped\n * @url /admin/investor/record/basic\n */\nexport type OAdminInvestorRecordBasicGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者基本信息 buildResAnyTyped\n * @url /admin/investor/record/basic\n */\nexport const OAdminInvestorRecordBasicGetValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/investor/record/update",
        "url": "/admin/investor/record/update",
        "pureUrl": "/admin/investor/record/update",
        "pathReqUrl": "/admin/investor/record/update",
        "method": "put",
        "apiName": "更新投资者基本信息",
        "key": "AdminInvestorRecordUpdatePut",
        "fnName": "adminInvestorRecordUpdatePut",
        "requestBaseName": "IAdminInvestorRecordUpdatePut",
        "requestName": [
            "IAdminInvestorRecordUpdatePut"
        ],
        "responseBaseName": "OAdminInvestorRecordUpdatePut",
        "responseName": [
            "OAdminInvestorRecordUpdatePut"
        ],
        "responseValueName": [
            "OAdminInvestorRecordUpdatePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "alienNumber",
                    "type": "string",
                    "description": "侨民号码 即绿卡上的号码",
                    "oldType": "string"
                },
                {
                    "name": "avatar",
                    "type": "string",
                    "description": "profile photo",
                    "oldType": "string"
                },
                {
                    "name": "birthday",
                    "type": "number",
                    "description": "出生日期",
                    "oldType": "number"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "country",
                    "type": "string",
                    "description": "国家",
                    "oldType": "string"
                },
                {
                    "name": "currentAddress",
                    "type": "string",
                    "description": "当前地址",
                    "oldType": "string"
                },
                {
                    "name": "demoAccount",
                    "type": "number",
                    "description": "0-非演示账号 1-演示账号",
                    "oldType": "number"
                },
                {
                    "name": "firstName",
                    "type": "string",
                    "description": "名 微信返回的nickname保存至此字段",
                    "oldType": "string"
                },
                {
                    "name": "gender",
                    "type": "number",
                    "description": "性别,0:male;1:female,2:unknow",
                    "oldType": "number"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "UID",
                    "oldType": "number"
                },
                {
                    "name": "lastName",
                    "type": "string",
                    "description": "姓",
                    "oldType": "string"
                },
                {
                    "name": "middleName",
                    "type": "string",
                    "description": "中名",
                    "oldType": "string"
                },
                {
                    "name": "orderNum",
                    "type": "number",
                    "description": "可下单数量",
                    "oldType": "number"
                },
                {
                    "name": "overseasAddress",
                    "type": "string",
                    "description": "海外地址",
                    "oldType": "string"
                },
                {
                    "name": "privacyStatus",
                    "type": "number",
                    "description": "隐私开关 0-关闭 1-开启",
                    "oldType": "number"
                },
                {
                    "name": "province",
                    "type": "string",
                    "description": "洲/省",
                    "oldType": "string"
                },
                {
                    "name": "regType",
                    "type": "number",
                    "description": "投资者类型 0-未选择合格投资者  3-Reg S 4-Reg D",
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "ssn",
                    "type": "string",
                    "description": "社会安全号码",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "0-正常 1-停用",
                    "oldType": "number"
                },
                {
                    "name": "twoFaStatus",
                    "type": "number",
                    "description": "两步验证状态 0-关闭 1-开启",
                    "oldType": "number"
                },
                {
                    "name": "zipCode",
                    "type": "string",
                    "description": "邮政编码",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 更新投资者基本信息 buildFnGetOrPostCode\n * \n * @param {string} params.alienNumber 可选: 侨民号码 即绿卡上的号码\n * @param {string} params.avatar 可选: profile photo\n * @param {number} params.birthday 可选: 出生日期\n * @param {string} params.city 可选: 城市\n * @param {string} params.country 可选: 国家\n * @param {string} params.currentAddress 可选: 当前地址\n * @param {number} params.demoAccount 可选: 0-非演示账号 1-演示账号\n * @param {string} params.firstName 可选: 名 微信返回的nickname保存至此字段\n * @param {number} params.gender 可选: 性别,0:male;1:female,2:unknow\n * @param {number} params.id 可选: UID\n * @param {string} params.lastName 可选: 姓\n * @param {string} params.middleName 可选: 中名\n * @param {number} params.orderNum 可选: 可下单数量\n * @param {string} params.overseasAddress 可选: 海外地址\n * @param {number} params.privacyStatus 可选: 隐私开关 0-关闭 1-开启\n * @param {string} params.province 可选: 洲/省\n * @param {number} params.regType 可选: 投资者类型 0-未选择合格投资者  3-Reg S 4-Reg D\n * @param {string} params.remark 可选: 备注\n * @param {string} params.ssn 可选: 社会安全号码\n * @param {number} params.status 可选: 0-正常 1-停用\n * @param {number} params.twoFaStatus 可选: 两步验证状态 0-关闭 1-开启\n * @param {string} params.zipCode 可选: 邮政编码\n * @return Promise<OAdminInvestorRecordUpdatePut>\n */\nexport const adminInvestorRecordUpdatePut = async (params?: IAdminInvestorRecordUpdatePut) => {\n\treturn put<OAdminInvestorRecordUpdatePut>(`/admin/investor/record/update`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 更新投资者基本信息 buildReqGetOrPostTyped\n * @url /admin/investor/record/update\n */\nexport interface IAdminInvestorRecordUpdatePut{\n\talienNumber?: string; // 侨民号码 即绿卡上的号码\n\tavatar?: string; // profile photo\n\tbirthday?: number; // 出生日期\n\tcity?: string; // 城市\n\tcountry?: string; // 国家\n\tcurrentAddress?: string; // 当前地址\n\tdemoAccount?: number; // 0-非演示账号 1-演示账号\n\tfirstName?: string; // 名 微信返回的nickname保存至此字段\n\tgender?: number; // 性别,0:male;1:female,2:unknow\n\tid?: number; // UID\n\tlastName?: string; // 姓\n\tmiddleName?: string; // 中名\n\torderNum?: number; // 可下单数量\n\toverseasAddress?: string; // 海外地址\n\tprivacyStatus?: number; // 隐私开关 0-关闭 1-开启\n\tprovince?: string; // 洲/省\n\tregType?: number; // 投资者类型 0-未选择合格投资者  3-Reg S 4-Reg D\n\tremark?: string; // 备注\n\tssn?: string; // 社会安全号码\n\tstatus?: number; // 0-正常 1-停用\n\ttwoFaStatus?: number; // 两步验证状态 0-关闭 1-开启\n\tzipCode?: string; // 邮政编码\n}",
        "resCode": "/**\n * @description 更新投资者基本信息 buildResAnyTyped\n * @url /admin/investor/record/update\n */\nexport type OAdminInvestorRecordUpdatePut = {\n}",
        "resValueCode": "/**\n * @description 更新投资者基本信息 buildResAnyTyped\n * @url /admin/investor/record/update\n */\nexport const OAdminInvestorRecordUpdatePutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/investor/repeatPwdEmail",
        "url": "/admin/investor/repeatPwdEmail",
        "pureUrl": "/admin/investor/repeatPwdEmail",
        "pathReqUrl": "/admin/investor/repeatPwdEmail",
        "method": "post",
        "apiName": "重发密码文件",
        "key": "AdminInvestorRepeatPwdEmailPost",
        "fnName": "adminInvestorRepeatPwdEmailPost",
        "requestBaseName": "IAdminInvestorRepeatPwdEmailPost",
        "requestName": [
            "IAdminInvestorRepeatPwdEmailPost"
        ],
        "responseBaseName": "OAdminInvestorRepeatPwdEmailPost",
        "responseName": [
            "OAdminInvestorRepeatPwdEmailPost"
        ],
        "responseValueName": [
            "OAdminInvestorRepeatPwdEmailPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "id",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "properties": {},
            "description": "返回数据",
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 重发密码文件 buildFnGetOrPostCode\n * \n * @param {string} params.id 必填: id\n * @return Promise<OAdminInvestorRepeatPwdEmailPost>\n */\nexport const adminInvestorRepeatPwdEmailPost = async (params?: IAdminInvestorRepeatPwdEmailPost) => {\n\treturn post<OAdminInvestorRepeatPwdEmailPost>(`/admin/investor/repeatPwdEmail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 重发密码文件 buildReqGetOrPostTyped\n * @url /admin/investor/repeatPwdEmail\n */\nexport interface IAdminInvestorRepeatPwdEmailPost{\n\tid: string; // id\n}",
        "resCode": "/**\n * @description 重发密码文件 buildResAnyTyped\n * @url /admin/investor/repeatPwdEmail\n */\nexport type OAdminInvestorRepeatPwdEmailPost = {\n}",
        "resValueCode": "/**\n * @description 重发密码文件 buildResAnyTyped\n * @url /admin/investor/repeatPwdEmail\n */\nexport const OAdminInvestorRepeatPwdEmailPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/investor/token",
        "url": "/admin/investor/token",
        "pureUrl": "/admin/investor/token",
        "pathReqUrl": "/admin/investor/token",
        "method": "post",
        "apiName": "投资者token",
        "key": "AdminInvestorTokenPost",
        "fnName": "adminInvestorTokenPost",
        "requestBaseName": "IAdminInvestorTokenPost",
        "requestName": [
            "IAdminInvestorTokenPost"
        ],
        "responseBaseName": "OAdminInvestorTokenPost",
        "responseName": [
            "OAdminInvestorTokenPost"
        ],
        "responseValueName": [
            "OAdminInvestorTokenPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 投资者token buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者ID\n * @return Promise<OAdminInvestorTokenPost>\n */\nexport const adminInvestorTokenPost = async (params?: IAdminInvestorTokenPost) => {\n\treturn post<OAdminInvestorTokenPost>(`/admin/investor/token`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 投资者token buildReqGetOrPostTyped\n * @url /admin/investor/token\n */\nexport interface IAdminInvestorTokenPost{\n\tinvestorId: number; // 投资者ID\n}",
        "resCode": "/**\n * @description 投资者token buildResAnyTyped\n * @url /admin/investor/token\n */\nexport type OAdminInvestorTokenPost = {\n}",
        "resValueCode": "/**\n * @description 投资者token buildResAnyTyped\n * @url /admin/investor/token\n */\nexport const OAdminInvestorTokenPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/wallet/bank/account",
        "url": "/admin/investor/wallet/bank/account",
        "pureUrl": "/admin/investor/wallet/bank/account",
        "pathReqUrl": "/admin/investor/wallet/bank/account",
        "method": "get",
        "apiName": "获取投资者银行信息",
        "key": "AdminInvestorWalletBankAccountGet",
        "fnName": "adminInvestorWalletBankAccountGet",
        "requestBaseName": "IAdminInvestorWalletBankAccountGet",
        "requestName": [
            "IAdminInvestorWalletBankAccountGet"
        ],
        "responseBaseName": "OAdminInvestorWalletBankAccountGet",
        "responseName": [
            "OAdminInvestorWalletBankAccountGet"
        ],
        "responseValueName": [
            "OAdminInvestorWalletBankAccountGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "投资者ID",
                    "type": "number",
                    "id": "Sam8QZWQuO",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者银行信息 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 可选: 投资者ID\n * @return Promise<OAdminInvestorWalletBankAccountGet>\n */\nexport const adminInvestorWalletBankAccountGet = async (params?: IAdminInvestorWalletBankAccountGet) => {\n\treturn get<OAdminInvestorWalletBankAccountGet>(`/admin/investor/wallet/bank/account`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者银行信息 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport interface IAdminInvestorWalletBankAccountGet{\n\tinvestorId?: number; // 投资者ID\n}",
        "resCode": "/**\n * @description 获取投资者银行信息 buildResAnyTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport type OAdminInvestorWalletBankAccountGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者银行信息 buildResAnyTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport const OAdminInvestorWalletBankAccountGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/investor/wallet/bank/account",
        "url": "/admin/investor/wallet/bank/account",
        "pureUrl": "/admin/investor/wallet/bank/account",
        "pathReqUrl": "/admin/investor/wallet/bank/account",
        "method": "post",
        "apiName": "保存投资者银行卡信息",
        "key": "AdminInvestorWalletBankAccountPost",
        "fnName": "adminInvestorWalletBankAccountPost",
        "requestBaseName": "IAdminInvestorWalletBankAccountPost",
        "requestName": [
            "IAdminInvestorWalletBankAccountPost"
        ],
        "responseBaseName": "OAdminInvestorWalletBankAccountPost",
        "responseName": [
            "OAdminInvestorWalletBankAccountPost"
        ],
        "responseValueName": [
            "OAdminInvestorWalletBankAccountPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "投资者id",
                    "type": "number",
                    "id": "9yITvf8Fj9",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": true,
                    "description": "银行卡号",
                    "type": "string",
                    "id": "c1756Oeny8",
                    "enable": true,
                    "name": "bankNumber",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": true,
                    "description": "开户行",
                    "type": "string",
                    "id": "Uasdy2tWSb",
                    "enable": true,
                    "name": "bankName",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": true,
                    "description": "开户户名",
                    "type": "string",
                    "id": "67usegG82a",
                    "enable": true,
                    "name": "bankUserName",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 保存投资者银行卡信息 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者id\n * @param {string} params.bankNumber 必填: 银行卡号\n * @param {string} params.bankName 必填: 开户行\n * @param {string} params.bankUserName 必填: 开户户名\n * @return Promise<OAdminInvestorWalletBankAccountPost>\n */\nexport const adminInvestorWalletBankAccountPost = async (params?: IAdminInvestorWalletBankAccountPost) => {\n\treturn post<OAdminInvestorWalletBankAccountPost>(`/admin/investor/wallet/bank/account`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 保存投资者银行卡信息 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport interface IAdminInvestorWalletBankAccountPost{\n\tinvestorId: number; // 投资者id\n\tbankNumber: string; // 银行卡号\n\tbankName: string; // 开户行\n\tbankUserName: string; // 开户户名\n}",
        "resCode": "/**\n * @description 保存投资者银行卡信息 buildResAnyTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport type OAdminInvestorWalletBankAccountPost = {\n}",
        "resValueCode": "/**\n * @description 保存投资者银行卡信息 buildResAnyTyped\n * @url /admin/investor/wallet/bank/account\n */\nexport const OAdminInvestorWalletBankAccountPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/wallet/deposit/list",
        "url": "/admin/investor/wallet/deposit/list",
        "pureUrl": "/admin/investor/wallet/deposit/list",
        "pathReqUrl": "/admin/investor/wallet/deposit/list",
        "method": "get",
        "apiName": "获取投资者投资记录",
        "key": "AdminInvestorWalletDepositListGet",
        "fnName": "adminInvestorWalletDepositListGet",
        "requestBaseName": "IAdminInvestorWalletDepositListGet",
        "requestName": [
            "IAdminInvestorWalletDepositListGet"
        ],
        "responseBaseName": "OAdminInvestorWalletDepositListGet",
        "responseName": [
            "OAdminInvestorWalletDepositListGet"
        ],
        "responseValueName": [
            "OAdminInvestorWalletDepositListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "j5jyRgxx88",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "3e1Uz1Ds1l",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "MR6MXNCpDW",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "id": "jOQutxp8jz",
                    "enable": true,
                    "name": "depositNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者投资记录 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.depositNo 可选: 流水号\n * @return Promise<OAdminInvestorWalletDepositListGet>\n */\nexport const adminInvestorWalletDepositListGet = async (params?: IAdminInvestorWalletDepositListGet) => {\n\treturn get<OAdminInvestorWalletDepositListGet>(`/admin/investor/wallet/deposit/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者投资记录 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/deposit/list\n */\nexport interface IAdminInvestorWalletDepositListGet{\n\tinvestorId: number;\n\tpageSize?: number;\n\tpageNum?: number;\n\tdepositNo?: string; // 流水号\n}",
        "resCode": "/**\n * @description 获取投资者投资记录 buildResAnyTyped\n * @url /admin/investor/wallet/deposit/list\n */\nexport type OAdminInvestorWalletDepositListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者投资记录 buildResAnyTyped\n * @url /admin/investor/wallet/deposit/list\n */\nexport const OAdminInvestorWalletDepositListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/wallet/info/{x}",
        "url": "/admin/investor/wallet/info/{id}",
        "pureUrl": "/admin/investor/wallet/info/{x}",
        "pathReqUrl": "/admin/investor/wallet/info/${id}",
        "method": "get",
        "apiName": "获取投资者资产详情",
        "key": "AdminInvestorWalletInfoIdGet",
        "fnName": "adminInvestorWalletInfoIdGet",
        "requestBaseName": "IAdminInvestorWalletInfoIdGet",
        "requestName": [
            "IAdminInvestorWalletInfoIdGet"
        ],
        "responseBaseName": "OAdminInvestorWalletInfoIdGet",
        "responseName": [
            "OAdminInvestorWalletInfoIdGet"
        ],
        "responseValueName": [
            "OAdminInvestorWalletInfoIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者资产详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminInvestorWalletInfoIdGet>\n */\nexport const adminInvestorWalletInfoIdGet = async (id: number) => {\n\treturn get<OAdminInvestorWalletInfoIdGet>(`/admin/investor/wallet/info/${id}`)\n}",
        "reqCode": "/**\n * @description 获取投资者资产详情 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/info/{id}\n */\nexport interface IAdminInvestorWalletInfoIdGet{\n}",
        "resCode": "/**\n * @description 获取投资者资产详情 buildResAnyTyped\n * @url /admin/investor/wallet/info/{x}\n */\nexport type OAdminInvestorWalletInfoIdGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者资产详情 buildResAnyTyped\n * @url /admin/investor/wallet/info/{x}\n */\nexport const OAdminInvestorWalletInfoIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/wallet/orderpay/list",
        "url": "/admin/investor/wallet/orderpay/list",
        "pureUrl": "/admin/investor/wallet/orderpay/list",
        "pathReqUrl": "/admin/investor/wallet/orderpay/list",
        "method": "get",
        "apiName": "获取投资者订单支付记录",
        "key": "AdminInvestorWalletOrderpayListGet",
        "fnName": "adminInvestorWalletOrderpayListGet",
        "requestBaseName": "IAdminInvestorWalletOrderpayListGet",
        "requestName": [
            "IAdminInvestorWalletOrderpayListGet"
        ],
        "responseBaseName": "OAdminInvestorWalletOrderpayListGet",
        "responseName": [
            "OAdminInvestorWalletOrderpayListGet"
        ],
        "responseValueName": [
            "OAdminInvestorWalletOrderpayListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "GSOwSb7WJe",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "gXhzAewDJS",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "a7SGBeTiW2",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "id": "8krH0DEVL1",
                    "enable": true,
                    "name": "payNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者订单支付记录 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.payNo 可选: 流水号\n * @return Promise<OAdminInvestorWalletOrderpayListGet>\n */\nexport const adminInvestorWalletOrderpayListGet = async (params?: IAdminInvestorWalletOrderpayListGet) => {\n\treturn get<OAdminInvestorWalletOrderpayListGet>(`/admin/investor/wallet/orderpay/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者订单支付记录 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/orderpay/list\n */\nexport interface IAdminInvestorWalletOrderpayListGet{\n\tinvestorId: number;\n\tpageNum?: number;\n\tpageSize?: number;\n\tpayNo?: string; // 流水号\n}",
        "resCode": "/**\n * @description 获取投资者订单支付记录 buildResAnyTyped\n * @url /admin/investor/wallet/orderpay/list\n */\nexport type OAdminInvestorWalletOrderpayListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者订单支付记录 buildResAnyTyped\n * @url /admin/investor/wallet/orderpay/list\n */\nexport const OAdminInvestorWalletOrderpayListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/investor/wallet/rebate/list",
        "url": "/admin/investor/wallet/rebate/list",
        "pureUrl": "/admin/investor/wallet/rebate/list",
        "pathReqUrl": "/admin/investor/wallet/rebate/list",
        "method": "get",
        "apiName": "获取投资者反俑记录",
        "key": "AdminInvestorWalletRebateListGet",
        "fnName": "adminInvestorWalletRebateListGet",
        "requestBaseName": "IAdminInvestorWalletRebateListGet",
        "requestName": [
            "IAdminInvestorWalletRebateListGet"
        ],
        "responseBaseName": "OAdminInvestorWalletRebateListGet",
        "responseName": [
            "OAdminInvestorWalletRebateListGet"
        ],
        "responseValueName": [
            "OAdminInvestorWalletRebateListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "cQ32r2Chae",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "yDMphy8zuX",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "zXquYEcJ4T",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "id": "OpJU7tmYyA",
                    "enable": true,
                    "name": "rebateNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者反俑记录 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.rebateNo 可选: 流水号\n * @return Promise<OAdminInvestorWalletRebateListGet>\n */\nexport const adminInvestorWalletRebateListGet = async (params?: IAdminInvestorWalletRebateListGet) => {\n\treturn get<OAdminInvestorWalletRebateListGet>(`/admin/investor/wallet/rebate/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者反俑记录 buildReqGetOrPostTyped\n * @url /admin/investor/wallet/rebate/list\n */\nexport interface IAdminInvestorWalletRebateListGet{\n\tinvestorId: number;\n\tpageNum?: number;\n\tpageSize?: number;\n\trebateNo?: string; // 流水号\n}",
        "resCode": "/**\n * @description 获取投资者反俑记录 buildResAnyTyped\n * @url /admin/investor/wallet/rebate/list\n */\nexport type OAdminInvestorWalletRebateListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者反俑记录 buildResAnyTyped\n * @url /admin/investor/wallet/rebate/list\n */\nexport const OAdminInvestorWalletRebateListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/invitation/rule",
        "url": "/admin/invitation/rule",
        "pureUrl": "/admin/invitation/rule",
        "pathReqUrl": "/admin/invitation/rule",
        "method": "get",
        "apiName": "规则详情",
        "key": "AdminInvitationRuleGet",
        "fnName": "adminInvitationRuleGet",
        "requestBaseName": "IAdminInvitationRuleGet",
        "requestName": [
            "IAdminInvitationRuleGet"
        ],
        "responseBaseName": "OAdminInvitationRuleGet",
        "responseName": [
            "OAdminInvitationRuleGet"
        ],
        "responseValueName": [
            "OAdminInvitationRuleGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 规则详情 buildFnGetOrPostCode\n * \n * @return Promise<OAdminInvitationRuleGet>\n */\nexport const adminInvitationRuleGet = async (params?: IAdminInvitationRuleGet) => {\n\treturn get<OAdminInvitationRuleGet>(`/admin/invitation/rule`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 规则详情 buildReqGetOrPostTyped\n * @url /admin/invitation/rule\n */\nexport interface IAdminInvitationRuleGet{\n}",
        "resCode": "/**\n * @description 规则详情 buildResAnyTyped\n * @url /admin/invitation/rule\n */\nexport type OAdminInvitationRuleGet = {\n}",
        "resValueCode": "/**\n * @description 规则详情 buildResAnyTyped\n * @url /admin/invitation/rule\n */\nexport const OAdminInvitationRuleGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/invitation/rule",
        "url": "/admin/invitation/rule",
        "pureUrl": "/admin/invitation/rule",
        "pathReqUrl": "/admin/invitation/rule",
        "method": "post",
        "apiName": "添加规则",
        "key": "AdminInvitationRulePost",
        "fnName": "adminInvitationRulePost",
        "requestBaseName": "IAdminInvitationRulePost",
        "requestName": [
            "IAdminInvitationRulePost"
        ],
        "responseBaseName": "OAdminInvitationRulePost",
        "responseName": [
            "OAdminInvitationRulePost"
        ],
        "responseValueName": [
            "OAdminInvitationRulePostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "规则内容",
                    "type": "string",
                    "id": "S1fizFI5oJ",
                    "enable": true,
                    "name": "content",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加规则 buildFnGetOrPostCode\n * \n * @param {string} params.content 必填: 规则内容\n * @return Promise<OAdminInvitationRulePost>\n */\nexport const adminInvitationRulePost = async (params?: IAdminInvitationRulePost) => {\n\treturn post<OAdminInvitationRulePost>(`/admin/invitation/rule`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 添加规则 buildReqGetOrPostTyped\n * @url /admin/invitation/rule\n */\nexport interface IAdminInvitationRulePost{\n\tcontent: string; // 规则内容\n}",
        "resCode": "/**\n * @description 添加规则 buildResAnyTyped\n * @url /admin/invitation/rule\n */\nexport type OAdminInvitationRulePost = {\n}",
        "resValueCode": "/**\n * @description 添加规则 buildResAnyTyped\n * @url /admin/invitation/rule\n */\nexport const OAdminInvitationRulePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/login",
        "url": "/admin/login",
        "pureUrl": "/admin/login",
        "pathReqUrl": "/admin/login",
        "method": "post",
        "apiName": "登录",
        "key": "AdminLoginPost",
        "fnName": "adminLoginPost",
        "requestBaseName": "IAdminLoginPost",
        "requestName": [
            "IAdminLoginPost"
        ],
        "responseBaseName": "OAdminLoginPost",
        "responseName": [
            "OAdminLoginPost"
        ],
        "responseValueName": [
            "OAdminLoginPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "图形验证码",
                    "oldType": "string"
                },
                {
                    "name": "loginName",
                    "type": "string",
                    "description": "登录用户名",
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "oldType": "string"
                },
                {
                    "name": "uuid",
                    "type": "string",
                    "description": "唯一标识",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "type": "OAdminLoginPost",
            "x-apifox-refs": {
                "01GM9YX4XPB1AGJQBJETKAF218": {
                    "$ref": "#/definitions/34077680",
                    "x-apifox-overrides": {}
                }
            },
            "properties": {
                "googleCode": {
                    "type": "boolean",
                    "description": "绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。"
                }
            },
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 登录 buildFnGetOrPostCode\n * \n * @param {string} params.code 可选: 图形验证码\n * @param {string} params.loginName 可选: 登录用户名\n * @param {string} params.password 可选: 密码\n * @param {string} params.uuid 可选: 唯一标识\n * @return Promise<OAdminLoginPost>\n */\nexport const adminLoginPost = async (params?: IAdminLoginPost) => {\n\treturn post<OAdminLoginPost>(`/admin/login`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 登录 buildReqGetOrPostTyped\n * @url /admin/login\n */\nexport interface IAdminLoginPost{\n\tcode?: string; // 图形验证码\n\tloginName?: string; // 登录用户名\n\tpassword?: string; // 密码\n\tuuid?: string; // 唯一标识\n}",
        "resCode": "/**\n * @description 登录 buildResAnyTyped\n * @url /admin/login\n */\nexport type OAdminLoginPost = {\n\tgoogleCode: boolean; // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}",
        "resValueCode": "/**\n * @description 登录 buildResAnyTyped\n * @url /admin/login\n */\nexport const OAdminLoginPostValue = {\n\tgoogleCode: false, // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}"
    },
    {
        "bodyKey": "get_/admin/material/exist",
        "url": "/admin/material/exist",
        "pureUrl": "/admin/material/exist",
        "pathReqUrl": "/admin/material/exist",
        "method": "get",
        "apiName": "素材查重",
        "key": "AdminMaterialExistGet",
        "fnName": "adminMaterialExistGet",
        "requestBaseName": "IAdminMaterialExistGet",
        "requestName": [
            "IAdminMaterialExistGet"
        ],
        "responseBaseName": "OAdminMaterialExistGet",
        "responseName": [
            "OAdminMaterialExistGet"
        ],
        "responseValueName": [
            "OAdminMaterialExistGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "false 为不存在，如果存在返回已经存在的文件信息",
                    "type": "string",
                    "id": "H9PE18sHPH",
                    "enable": true,
                    "name": "hash",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 素材查重 buildFnGetOrPostCode\n * \n * @param {string} params.hash 必填: false 为不存在，如果存在返回已经存在的文件信息\n * @return Promise<OAdminMaterialExistGet>\n */\nexport const adminMaterialExistGet = async (params?: IAdminMaterialExistGet) => {\n\treturn get<OAdminMaterialExistGet>(`/admin/material/exist`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 素材查重 buildReqGetOrPostTyped\n * @url /admin/material/exist\n */\nexport interface IAdminMaterialExistGet{\n\thash: string; // false 为不存在，如果存在返回已经存在的文件信息\n}",
        "resCode": "/**\n * @description 素材查重 buildResAnyTyped\n * @url /admin/material/exist\n */\nexport type OAdminMaterialExistGet = {\n}",
        "resValueCode": "/**\n * @description 素材查重 buildResAnyTyped\n * @url /admin/material/exist\n */\nexport const OAdminMaterialExistGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/material/{x}",
        "url": "/admin/material/{id}",
        "pureUrl": "/admin/material/{x}",
        "pathReqUrl": "/admin/material/${id}",
        "method": "delete",
        "apiName": "删除素材",
        "key": "AdminMaterialIdDelete",
        "fnName": "adminMaterialIdDelete",
        "requestBaseName": "IAdminMaterialIdDelete",
        "requestName": [
            "IAdminMaterialIdDelete"
        ],
        "responseBaseName": "OAdminMaterialIdDelete",
        "responseName": [
            "OAdminMaterialIdDelete"
        ],
        "responseValueName": [
            "OAdminMaterialIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除素材 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminMaterialIdDelete>\n */\nexport const adminMaterialIdDelete = async (id: number) => {\n\treturn del<OAdminMaterialIdDelete>(`/admin/material/${id}`)\n}",
        "reqCode": "/**\n * @description 删除素材 buildReqGetOrPostTyped\n * @url /admin/material/{id}\n */\nexport interface IAdminMaterialIdDelete{\n}",
        "resCode": "/**\n * @description 删除素材 buildResAnyTyped\n * @url /admin/material/{x}\n */\nexport type OAdminMaterialIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除素材 buildResAnyTyped\n * @url /admin/material/{x}\n */\nexport const OAdminMaterialIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/material/list",
        "url": "/admin/material/list",
        "pureUrl": "/admin/material/list",
        "pathReqUrl": "/admin/material/list",
        "method": "get",
        "apiName": "素材列表",
        "key": "AdminMaterialListGet",
        "fnName": "adminMaterialListGet",
        "requestBaseName": "IAdminMaterialListGet",
        "requestName": [
            "IAdminMaterialListGet"
        ],
        "responseBaseName": "OAdminMaterialListGet",
        "responseName": [
            "OAdminMaterialListGet"
        ],
        "responseValueName": [
            "OAdminMaterialListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Q0036Rr8tv",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "4Xty7r5vPg",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "zf1YT0ZwAG",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": " 0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'",
                    "type": "any[]",
                    "id": "H9PE18sHPH",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID",
                    "type": "number",
                    "id": "OdVxY8go1L",
                    "enable": true,
                    "name": "tagId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 素材列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.name 可选: \n * @param {any[]} params.type 可选:  0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'\n * @param {number} params.tagId 可选: 标签ID\n * @return Promise<OAdminMaterialListGet>\n */\nexport const adminMaterialListGet = async (params?: IAdminMaterialListGet) => {\n\treturn get<OAdminMaterialListGet>(`/admin/material/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 素材列表 buildReqGetOrPostTyped\n * @url /admin/material/list\n */\nexport interface IAdminMaterialListGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tname?: string;\n\ttype?: any[]; //  0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'\n\ttagId?: number; // 标签ID\n}",
        "resCode": "/**\n * @description 素材列表 buildResAnyTyped\n * @url /admin/material/list\n */\nexport type OAdminMaterialListGet = {\n}",
        "resValueCode": "/**\n * @description 素材列表 buildResAnyTyped\n * @url /admin/material/list\n */\nexport const OAdminMaterialListGetValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/material",
        "url": "/admin/material",
        "pureUrl": "/admin/material",
        "pathReqUrl": "/admin/material",
        "method": "put",
        "apiName": "修改素材",
        "key": "AdminMaterialPut",
        "fnName": "adminMaterialPut",
        "requestBaseName": "IAdminMaterialPut",
        "requestName": [
            "IAdminMaterialPut"
        ],
        "responseBaseName": "OAdminMaterialPut",
        "responseName": [
            "OAdminMaterialPut"
        ],
        "responseValueName": [
            "OAdminMaterialPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "素材ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "素材名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "tagIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "标签ids",
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改素材 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 素材ID\n * @param {string} params.name 必填: 素材名称\n * @param {any[]} params.tagIds 可选: 标签ids\n * @return Promise<OAdminMaterialPut>\n */\nexport const adminMaterialPut = async (params?: IAdminMaterialPut) => {\n\treturn put<OAdminMaterialPut>(`/admin/material`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改素材 buildReqGetOrPostTyped\n * @url /admin/material\n */\nexport interface IAdminMaterialPut{\n\tid: number; // 素材ID\n\tname: string; // 素材名称\n\ttagIds?: any[]; // 标签ids\n}",
        "resCode": "/**\n * @description 修改素材 buildResAnyTyped\n * @url /admin/material\n */\nexport type OAdminMaterialPut = {\n}",
        "resValueCode": "/**\n * @description 修改素材 buildResAnyTyped\n * @url /admin/material\n */\nexport const OAdminMaterialPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/material/recover",
        "url": "/admin/material/recover",
        "pureUrl": "/admin/material/recover",
        "pathReqUrl": "/admin/material/recover",
        "method": "post",
        "apiName": "恢复素材",
        "key": "AdminMaterialRecoverPost",
        "fnName": "adminMaterialRecoverPost",
        "requestBaseName": "IAdminMaterialRecoverPost",
        "requestName": [
            "IAdminMaterialRecoverPost"
        ],
        "responseBaseName": "OAdminMaterialRecoverPost",
        "responseName": [
            "OAdminMaterialRecoverPost"
        ],
        "responseValueName": [
            "OAdminMaterialRecoverPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "素材ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 恢复素材 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 素材ID\n * @return Promise<OAdminMaterialRecoverPost>\n */\nexport const adminMaterialRecoverPost = async (params?: IAdminMaterialRecoverPost) => {\n\treturn post<OAdminMaterialRecoverPost>(`/admin/material/recover`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 恢复素材 buildReqGetOrPostTyped\n * @url /admin/material/recover\n */\nexport interface IAdminMaterialRecoverPost{\n\tid: number; // 素材ID\n}",
        "resCode": "/**\n * @description 恢复素材 buildResAnyTyped\n * @url /admin/material/recover\n */\nexport type OAdminMaterialRecoverPost = {\n}",
        "resValueCode": "/**\n * @description 恢复素材 buildResAnyTyped\n * @url /admin/material/recover\n */\nexport const OAdminMaterialRecoverPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/material/recycle/list",
        "url": "/admin/material/recycle/list",
        "pureUrl": "/admin/material/recycle/list",
        "pathReqUrl": "/admin/material/recycle/list",
        "method": "get",
        "apiName": "素材列表-已删除的",
        "key": "AdminMaterialRecycleListGet",
        "fnName": "adminMaterialRecycleListGet",
        "requestBaseName": "IAdminMaterialRecycleListGet",
        "requestName": [
            "IAdminMaterialRecycleListGet"
        ],
        "responseBaseName": "OAdminMaterialRecycleListGet",
        "responseName": [
            "OAdminMaterialRecycleListGet"
        ],
        "responseValueName": [
            "OAdminMaterialRecycleListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Q0036Rr8tv",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "4Xty7r5vPg",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "zf1YT0ZwAG",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": " 0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'",
                    "type": "number",
                    "id": "H9PE18sHPH",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID",
                    "type": "number",
                    "id": "OdVxY8go1L",
                    "enable": true,
                    "name": "tagId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 素材列表-已删除的 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.name 可选: \n * @param {number} params.type 可选:  0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'\n * @param {number} params.tagId 可选: 标签ID\n * @return Promise<OAdminMaterialRecycleListGet>\n */\nexport const adminMaterialRecycleListGet = async (params?: IAdminMaterialRecycleListGet) => {\n\treturn get<OAdminMaterialRecycleListGet>(`/admin/material/recycle/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 素材列表-已删除的 buildReqGetOrPostTyped\n * @url /admin/material/recycle/list\n */\nexport interface IAdminMaterialRecycleListGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tname?: string;\n\ttype?: number; //  0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'\n\ttagId?: number; // 标签ID\n}",
        "resCode": "/**\n * @description 素材列表-已删除的 buildResAnyTyped\n * @url /admin/material/recycle/list\n */\nexport type OAdminMaterialRecycleListGet = {\n}",
        "resValueCode": "/**\n * @description 素材列表-已删除的 buildResAnyTyped\n * @url /admin/material/recycle/list\n */\nexport const OAdminMaterialRecycleListGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/material/tag/{x}",
        "url": "/admin/material/tag/{id}",
        "pureUrl": "/admin/material/tag/{x}",
        "pathReqUrl": "/admin/material/tag/${id}",
        "method": "delete",
        "apiName": "删除标签",
        "key": "AdminMaterialTagIdDelete",
        "fnName": "adminMaterialTagIdDelete",
        "requestBaseName": "IAdminMaterialTagIdDelete",
        "requestName": [
            "IAdminMaterialTagIdDelete"
        ],
        "responseBaseName": "OAdminMaterialTagIdDelete",
        "responseName": [
            "OAdminMaterialTagIdDelete"
        ],
        "responseValueName": [
            "OAdminMaterialTagIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": " 标签ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除标签 buildFnPathCode\n * @path {number id 必填:  标签ID}\n * @return Promise<OAdminMaterialTagIdDelete>\n */\nexport const adminMaterialTagIdDelete = async (id: number) => {\n\treturn del<OAdminMaterialTagIdDelete>(`/admin/material/tag/${id}`)\n}",
        "reqCode": "/**\n * @description 删除标签 buildReqGetOrPostTyped\n * @url /admin/material/tag/{id}\n */\nexport interface IAdminMaterialTagIdDelete{\n}",
        "resCode": "/**\n * @description 删除标签 buildResAnyTyped\n * @url /admin/material/tag/{x}\n */\nexport type OAdminMaterialTagIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除标签 buildResAnyTyped\n * @url /admin/material/tag/{x}\n */\nexport const OAdminMaterialTagIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/material/tag/list/all",
        "url": "/admin/material/tag/list/all",
        "pureUrl": "/admin/material/tag/list/all",
        "pathReqUrl": "/admin/material/tag/list/all",
        "method": "get",
        "apiName": "查询标签列表-全部",
        "key": "AdminMaterialTagListAllGet",
        "fnName": "adminMaterialTagListAllGet",
        "requestBaseName": "IAdminMaterialTagListAllGet",
        "requestName": [
            "IAdminMaterialTagListAllGet"
        ],
        "responseBaseName": "OAdminMaterialTagListAllGet",
        "responseName": [
            "OAdminMaterialTagListAllGet"
        ],
        "responseValueName": [
            "OAdminMaterialTagListAllGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "XQ3DHO4ojw",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询标签列表-全部 buildFnGetOrPostCode\n * \n * @param {string} params.name 可选: \n * @return Promise<OAdminMaterialTagListAllGet>\n */\nexport const adminMaterialTagListAllGet = async (params?: IAdminMaterialTagListAllGet) => {\n\treturn get<OAdminMaterialTagListAllGet>(`/admin/material/tag/list/all`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询标签列表-全部 buildReqGetOrPostTyped\n * @url /admin/material/tag/list/all\n */\nexport interface IAdminMaterialTagListAllGet{\n\tname?: string;\n}",
        "resCode": "/**\n * @description 查询标签列表-全部 buildResAnyTyped\n * @url /admin/material/tag/list/all\n */\nexport type OAdminMaterialTagListAllGet = {\n}",
        "resValueCode": "/**\n * @description 查询标签列表-全部 buildResAnyTyped\n * @url /admin/material/tag/list/all\n */\nexport const OAdminMaterialTagListAllGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/material/tag/list",
        "url": "/admin/material/tag/list",
        "pureUrl": "/admin/material/tag/list",
        "pathReqUrl": "/admin/material/tag/list",
        "method": "get",
        "apiName": "查询标签列表",
        "key": "AdminMaterialTagListGet",
        "fnName": "adminMaterialTagListGet",
        "requestBaseName": "IAdminMaterialTagListGet",
        "requestName": [
            "IAdminMaterialTagListGet"
        ],
        "responseBaseName": "OAdminMaterialTagListGet",
        "responseName": [
            "OAdminMaterialTagListGet"
        ],
        "responseValueName": [
            "OAdminMaterialTagListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "XQ3DHO4ojw",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Ivrkx7BGpn",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "CuLqMnRUsu",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询标签列表 buildFnGetOrPostCode\n * \n * @param {string} params.name 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminMaterialTagListGet>\n */\nexport const adminMaterialTagListGet = async (params?: IAdminMaterialTagListGet) => {\n\treturn get<OAdminMaterialTagListGet>(`/admin/material/tag/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询标签列表 buildReqGetOrPostTyped\n * @url /admin/material/tag/list\n */\nexport interface IAdminMaterialTagListGet{\n\tname?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询标签列表 buildResAnyTyped\n * @url /admin/material/tag/list\n */\nexport type OAdminMaterialTagListGet = {\n}",
        "resValueCode": "/**\n * @description 查询标签列表 buildResAnyTyped\n * @url /admin/material/tag/list\n */\nexport const OAdminMaterialTagListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/material/tag",
        "url": "/admin/material/tag",
        "pureUrl": "/admin/material/tag",
        "pathReqUrl": "/admin/material/tag",
        "method": "post",
        "apiName": "添加标签",
        "key": "AdminMaterialTagPost",
        "fnName": "adminMaterialTagPost",
        "requestBaseName": "IAdminMaterialTagPost",
        "requestName": [
            "IAdminMaterialTagPost"
        ],
        "responseBaseName": "OAdminMaterialTagPost",
        "responseName": [
            "OAdminMaterialTagPost"
        ],
        "responseValueName": [
            "OAdminMaterialTagPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "name",
                    "type": "string",
                    "mock": {
                        "mock": "标签名称"
                    },
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加标签 buildFnGetOrPostCode\n * \n * @param {string} params.name 必填: \n * @return Promise<OAdminMaterialTagPost>\n */\nexport const adminMaterialTagPost = async (params?: IAdminMaterialTagPost) => {\n\treturn post<OAdminMaterialTagPost>(`/admin/material/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加标签 buildReqGetOrPostTyped\n * @url /admin/material/tag\n */\nexport interface IAdminMaterialTagPost{\n\tname: string;\n}",
        "resCode": "/**\n * @description 添加标签 buildResAnyTyped\n * @url /admin/material/tag\n */\nexport type OAdminMaterialTagPost = {\n}",
        "resValueCode": "/**\n * @description 添加标签 buildResAnyTyped\n * @url /admin/material/tag\n */\nexport const OAdminMaterialTagPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/material/tag",
        "url": "/admin/material/tag",
        "pureUrl": "/admin/material/tag",
        "pathReqUrl": "/admin/material/tag",
        "method": "put",
        "apiName": "编辑标签",
        "key": "AdminMaterialTagPut",
        "fnName": "adminMaterialTagPut",
        "requestBaseName": "IAdminMaterialTagPut",
        "requestName": [
            "IAdminMaterialTagPut"
        ],
        "responseBaseName": "OAdminMaterialTagPut",
        "responseName": [
            "OAdminMaterialTagPut"
        ],
        "responseValueName": [
            "OAdminMaterialTagPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "mock": {
                        "mock": "标签ID"
                    },
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "mock": {
                        "mock": "标签名称"
                    },
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: \n * @param {string} params.name 必填: \n * @return Promise<OAdminMaterialTagPut>\n */\nexport const adminMaterialTagPut = async (params?: IAdminMaterialTagPut) => {\n\treturn put<OAdminMaterialTagPut>(`/admin/material/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签 buildReqGetOrPostTyped\n * @url /admin/material/tag\n */\nexport interface IAdminMaterialTagPut{\n\tid: number;\n\tname: string;\n}",
        "resCode": "/**\n * @description 编辑标签 buildResAnyTyped\n * @url /admin/material/tag\n */\nexport type OAdminMaterialTagPut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签 buildResAnyTyped\n * @url /admin/material/tag\n */\nexport const OAdminMaterialTagPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/material/upload",
        "url": "/admin/material/upload",
        "pureUrl": "/admin/material/upload",
        "pathReqUrl": "/admin/material/upload",
        "method": "post",
        "apiName": "上传素材",
        "key": "AdminMaterialUploadPost",
        "fnName": "adminMaterialUploadPost",
        "requestBaseName": "IAdminMaterialUploadPost",
        "requestName": [
            "IAdminMaterialUploadPostFormData"
        ],
        "responseBaseName": "OAdminMaterialUploadPost",
        "responseName": [
            "OAdminMaterialUploadPost"
        ],
        "responseValueName": [
            "OAdminMaterialUploadPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "",
                    "type": "file",
                    "id": "5PT428e6je",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                },
                {
                    "required": true,
                    "description": "",
                    "type": "string",
                    "id": "gt4H6LIa1L",
                    "enable": true,
                    "name": "name",
                    "sampleValue": "素材名称",
                    "oldType": "string"
                },
                {
                    "required": true,
                    "description": " 0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'",
                    "type": "number",
                    "id": "lVthXC3lb8",
                    "enable": true,
                    "name": "type",
                    "sampleValue": "0",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "AI6aSJx3lY",
                    "enable": true,
                    "name": "size",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "fTHkv8M7Fi",
                    "enable": true,
                    "name": "width",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Qd9CPvYFVV",
                    "enable": true,
                    "name": "height",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "标签ids",
                    "type": "string",
                    "id": "E7ZOGEsD9d",
                    "enable": true,
                    "name": "tagIds",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": true,
                    "description": "文件hash",
                    "type": "string",
                    "id": "yeWWlXBxKw",
                    "enable": true,
                    "name": "hash",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 上传素材 buildFnFileCode\n * \n * @param {file} params.files 必填: \n * @param {string} params.name 必填: \n * @param {number} params.type 必填:  0: 'img',  1: 'pdf',  2: 'video',  3: 'html',  4: 'txt',  5: 'ppt',  6: 'xls',  7: 'doc',  8: 'zip',  9: 'file'\n * @param {number} params.size 可选: \n * @param {number} params.width 可选: \n * @param {number} params.height 可选: \n * @param {string} params.tagIds 可选: 标签ids\n * @param {string} params.hash 必填: 文件hash\n * @return Promise<OAdminMaterialUploadPost>\n */\nexport const adminMaterialUploadPost = async (params?: IAdminMaterialUploadPostFormData) => {\n\treturn post<OAdminMaterialUploadPost>(`/admin/material/upload`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IAdminMaterialUploadPost",
        "reqCode": "/**\n * @description 上传素材 buildReqFileTyped\n * @url /admin/material/upload\n */\nexport interface IAdminMaterialUploadPostFormData extends FormData{\n\tappend: (name: 'files' | 'name' | 'type' | 'size' | 'width' | 'height' | 'tagIds' | 'hash', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 上传素材 buildResAnyTyped\n * @url /admin/material/upload\n */\nexport type OAdminMaterialUploadPost = {\n}",
        "resValueCode": "/**\n * @description 上传素材 buildResAnyTyped\n * @url /admin/material/upload\n */\nexport const OAdminMaterialUploadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/menu/list",
        "url": "/admin/menu/list",
        "pureUrl": "/admin/menu/list",
        "pathReqUrl": "/admin/menu/list",
        "method": "get",
        "apiName": "查询菜单列表",
        "key": "AdminMenuListGet",
        "fnName": "adminMenuListGet",
        "requestBaseName": "IAdminMenuListGet",
        "requestName": [
            "IAdminMenuListGet"
        ],
        "responseBaseName": "OAdminMenuListGet",
        "responseName": [
            "OAdminMenuListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "C-菜单 F-接口",
                    "type": "string",
                    "id": "dN7TI0MrSS",
                    "enable": true,
                    "name": "menuType",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminMenuListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询菜单列表 buildFnArrayCode\n * \n * @param {string} params.menuType 可选: C-菜单 F-接口}\n * @return Promise<OAdminMenuListGetItem>\n */\nexport const adminMenuListGet = async (params?: IAdminMenuListGet) => {\n\treturn get<OAdminMenuListGetItem[]>(`/admin/menu/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询菜单列表 buildReqGetOrPostTyped\n * @url /admin/menu/list\n */\nexport interface IAdminMenuListGet{\n\tmenuType?: string; // C-菜单 F-接口\n}",
        "deleteResponseName": "OAdminMenuListGet",
        "resCode": "/**\n * @description 查询菜单列表 buildResArrayTyped\n * @url /admin/menu/list\n */\nexport type OAdminMenuListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询菜单列表 buildResArrayTyped\n * @url /admin/menu/list\n */\nexport const OAdminMenuListGetItemValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/menu/{x}",
        "url": "/admin/menu/{menuId}",
        "pureUrl": "/admin/menu/{x}",
        "pathReqUrl": "/admin/menu/${menuId}",
        "method": "delete",
        "apiName": "删除菜单",
        "key": "AdminMenuMenuIdDelete",
        "fnName": "adminMenuMenuIdDelete",
        "requestBaseName": "IAdminMenuMenuIdDelete",
        "requestName": [
            "IAdminMenuMenuIdDelete"
        ],
        "responseBaseName": "OAdminMenuMenuIdDelete",
        "responseName": [
            "OAdminMenuMenuIdDelete"
        ],
        "responseValueName": [
            "OAdminMenuMenuIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "menuId#0",
                    "name": "menuId",
                    "required": true,
                    "description": "menuId",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 删除菜单 buildFnPathCode\n * @path {number menuId 必填: }\n * @return Promise<OAdminMenuMenuIdDelete>\n */\nexport const adminMenuMenuIdDelete = async (menuId: number) => {\n\treturn del<OAdminMenuMenuIdDelete>(`/admin/menu/${menuId}`)\n}",
        "reqCode": "/**\n * @description 删除菜单 buildReqGetOrPostTyped\n * @url /admin/menu/{menuId}\n */\nexport interface IAdminMenuMenuIdDelete{\n}",
        "resCode": "/**\n * @description 删除菜单 buildResAnyTyped\n * @url /admin/menu/{x}\n */\nexport type OAdminMenuMenuIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除菜单 buildResAnyTyped\n * @url /admin/menu/{x}\n */\nexport const OAdminMenuMenuIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/menu/{x}",
        "url": "/admin/menu/{menuId}",
        "pureUrl": "/admin/menu/{x}",
        "pathReqUrl": "/admin/menu/${menuId}",
        "method": "get",
        "apiName": "查询菜单详情",
        "key": "AdminMenuMenuIdGet",
        "fnName": "adminMenuMenuIdGet",
        "requestBaseName": "IAdminMenuMenuIdGet",
        "requestName": [
            "IAdminMenuMenuIdGet"
        ],
        "responseBaseName": "OAdminMenuMenuIdGet",
        "responseName": [
            "OAdminMenuMenuIdGet"
        ],
        "responseValueName": [
            "OAdminMenuMenuIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "menuId#0",
                    "name": "menuId",
                    "required": true,
                    "description": "menuId",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询菜单详情 buildFnPathCode\n * @path {number menuId 必填: }\n * @return Promise<OAdminMenuMenuIdGet>\n */\nexport const adminMenuMenuIdGet = async (menuId: number) => {\n\treturn get<OAdminMenuMenuIdGet>(`/admin/menu/${menuId}`)\n}",
        "reqCode": "/**\n * @description 查询菜单详情 buildReqGetOrPostTyped\n * @url /admin/menu/{menuId}\n */\nexport interface IAdminMenuMenuIdGet{\n}",
        "resCode": "/**\n * @description 查询菜单详情 buildResAnyTyped\n * @url /admin/menu/{x}\n */\nexport type OAdminMenuMenuIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询菜单详情 buildResAnyTyped\n * @url /admin/menu/{x}\n */\nexport const OAdminMenuMenuIdGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/menu",
        "url": "/admin/menu",
        "pureUrl": "/admin/menu",
        "pathReqUrl": "/admin/menu",
        "method": "post",
        "apiName": "新增菜单",
        "key": "AdminMenuPost",
        "fnName": "adminMenuPost",
        "requestBaseName": "IAdminMenuPost",
        "requestName": [
            "IAdminMenuPost"
        ],
        "responseBaseName": "OAdminMenuPost",
        "responseName": [
            "OAdminMenuPost"
        ],
        "responseValueName": [
            "OAdminMenuPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "frame",
                    "type": "number",
                    "description": "是否外链 0-否 1-是",
                    "oldType": "number"
                },
                {
                    "name": "menuId",
                    "type": "number",
                    "description": "菜单id",
                    "oldType": "number"
                },
                {
                    "name": "menuName",
                    "type": "string",
                    "description": "菜单名称",
                    "oldType": "string"
                },
                {
                    "name": "menuType",
                    "type": "string",
                    "description": "菜单类型 M-目录 C-菜单 F-接口",
                    "oldType": "string"
                },
                {
                    "name": "orderNum",
                    "type": "number",
                    "description": "排序",
                    "oldType": "number"
                },
                {
                    "name": "parentId",
                    "type": "number",
                    "description": "父菜单id 根目录=0",
                    "oldType": "number"
                },
                {
                    "name": "path",
                    "type": "string",
                    "description": "地址",
                    "oldType": "string"
                },
                {
                    "name": "perms",
                    "type": "string",
                    "description": "权限字符串",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "菜单状态 0-正常 1-停用",
                    "oldType": "number"
                },
                {
                    "name": "visible",
                    "type": "number",
                    "description": "显示状态 0-显示 1-隐藏",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 新增菜单 buildFnGetOrPostCode\n * \n * @param {number} params.frame 可选: 是否外链 0-否 1-是\n * @param {number} params.menuId 可选: 菜单id\n * @param {string} params.menuName 可选: 菜单名称\n * @param {string} params.menuType 可选: 菜单类型 M-目录 C-菜单 F-接口\n * @param {number} params.orderNum 可选: 排序\n * @param {number} params.parentId 可选: 父菜单id 根目录=0\n * @param {string} params.path 可选: 地址\n * @param {string} params.perms 可选: 权限字符串\n * @param {number} params.status 可选: 菜单状态 0-正常 1-停用\n * @param {number} params.visible 可选: 显示状态 0-显示 1-隐藏\n * @return Promise<OAdminMenuPost>\n */\nexport const adminMenuPost = async (params?: IAdminMenuPost) => {\n\treturn post<OAdminMenuPost>(`/admin/menu`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增菜单 buildReqGetOrPostTyped\n * @url /admin/menu\n */\nexport interface IAdminMenuPost{\n\tframe?: number; // 是否外链 0-否 1-是\n\tmenuId?: number; // 菜单id\n\tmenuName?: string; // 菜单名称\n\tmenuType?: string; // 菜单类型 M-目录 C-菜单 F-接口\n\torderNum?: number; // 排序\n\tparentId?: number; // 父菜单id 根目录=0\n\tpath?: string; // 地址\n\tperms?: string; // 权限字符串\n\tstatus?: number; // 菜单状态 0-正常 1-停用\n\tvisible?: number; // 显示状态 0-显示 1-隐藏\n}",
        "resCode": "/**\n * @description 新增菜单 buildResAnyTyped\n * @url /admin/menu\n */\nexport type OAdminMenuPost = {\n}",
        "resValueCode": "/**\n * @description 新增菜单 buildResAnyTyped\n * @url /admin/menu\n */\nexport const OAdminMenuPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/menu",
        "url": "/admin/menu",
        "pureUrl": "/admin/menu",
        "pathReqUrl": "/admin/menu",
        "method": "put",
        "apiName": "修改菜单",
        "key": "AdminMenuPut",
        "fnName": "adminMenuPut",
        "requestBaseName": "IAdminMenuPut",
        "requestName": [
            "IAdminMenuPut"
        ],
        "responseBaseName": "OAdminMenuPut",
        "responseName": [
            "OAdminMenuPut"
        ],
        "responseValueName": [
            "OAdminMenuPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "frame",
                    "type": "number",
                    "description": "是否外链 0-否 1-是",
                    "oldType": "number"
                },
                {
                    "name": "menuId",
                    "type": "number",
                    "description": "菜单id",
                    "oldType": "number"
                },
                {
                    "name": "menuName",
                    "type": "string",
                    "description": "菜单名称",
                    "oldType": "string"
                },
                {
                    "name": "menuType",
                    "type": "string",
                    "description": "菜单类型 M-目录 C-菜单 F-接口",
                    "oldType": "string"
                },
                {
                    "name": "orderNum",
                    "type": "number",
                    "description": "排序",
                    "oldType": "number"
                },
                {
                    "name": "parentId",
                    "type": "number",
                    "description": "父菜单id 根目录=0",
                    "oldType": "number"
                },
                {
                    "name": "path",
                    "type": "string",
                    "description": "地址",
                    "oldType": "string"
                },
                {
                    "name": "perms",
                    "type": "string",
                    "description": "权限字符串",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "菜单状态 0-正常 1-停用",
                    "oldType": "number"
                },
                {
                    "name": "visible",
                    "type": "number",
                    "description": "显示状态 0-显示 1-隐藏",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改菜单 buildFnGetOrPostCode\n * \n * @param {number} params.frame 可选: 是否外链 0-否 1-是\n * @param {number} params.menuId 可选: 菜单id\n * @param {string} params.menuName 可选: 菜单名称\n * @param {string} params.menuType 可选: 菜单类型 M-目录 C-菜单 F-接口\n * @param {number} params.orderNum 可选: 排序\n * @param {number} params.parentId 可选: 父菜单id 根目录=0\n * @param {string} params.path 可选: 地址\n * @param {string} params.perms 可选: 权限字符串\n * @param {number} params.status 可选: 菜单状态 0-正常 1-停用\n * @param {number} params.visible 可选: 显示状态 0-显示 1-隐藏\n * @return Promise<OAdminMenuPut>\n */\nexport const adminMenuPut = async (params?: IAdminMenuPut) => {\n\treturn put<OAdminMenuPut>(`/admin/menu`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改菜单 buildReqGetOrPostTyped\n * @url /admin/menu\n */\nexport interface IAdminMenuPut{\n\tframe?: number; // 是否外链 0-否 1-是\n\tmenuId?: number; // 菜单id\n\tmenuName?: string; // 菜单名称\n\tmenuType?: string; // 菜单类型 M-目录 C-菜单 F-接口\n\torderNum?: number; // 排序\n\tparentId?: number; // 父菜单id 根目录=0\n\tpath?: string; // 地址\n\tperms?: string; // 权限字符串\n\tstatus?: number; // 菜单状态 0-正常 1-停用\n\tvisible?: number; // 显示状态 0-显示 1-隐藏\n}",
        "resCode": "/**\n * @description 修改菜单 buildResAnyTyped\n * @url /admin/menu\n */\nexport type OAdminMenuPut = {\n}",
        "resValueCode": "/**\n * @description 修改菜单 buildResAnyTyped\n * @url /admin/menu\n */\nexport const OAdminMenuPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/menus",
        "url": "/admin/menus",
        "pureUrl": "/admin/menus",
        "pathReqUrl": "/admin/menus",
        "method": "get",
        "apiName": "获取菜单信息",
        "key": "AdminMenusGet",
        "fnName": "adminMenusGet",
        "requestBaseName": "IAdminMenusGet",
        "requestName": [
            "IAdminMenusGet"
        ],
        "responseBaseName": "OAdminMenusGet",
        "responseName": [
            "OAdminMenusGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminMenusGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取菜单信息 buildFnArrayCode\n * \n * @return Promise<OAdminMenusGetItem>\n */\nexport const adminMenusGet = async (params?: IAdminMenusGet) => {\n\treturn get<OAdminMenusGetItem[]>(`/admin/menus`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取菜单信息 buildReqGetOrPostTyped\n * @url /admin/menus\n */\nexport interface IAdminMenusGet{\n}",
        "deleteResponseName": "OAdminMenusGet",
        "resCode": "/**\n * @description 获取菜单信息 buildResArrayTyped\n * @url /admin/menus\n */\nexport type OAdminMenusGetItem = {  \n}",
        "resValueCode": "/**\n * @description 获取菜单信息 buildResArrayTyped\n * @url /admin/menus\n */\nexport const OAdminMenusGetItemValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/notification/{x}",
        "url": "/admin/notification/{id}",
        "pureUrl": "/admin/notification/{x}",
        "pathReqUrl": "/admin/notification/${id}",
        "method": "delete",
        "apiName": "删除通知",
        "key": "AdminNotificationIdDelete",
        "fnName": "adminNotificationIdDelete",
        "requestBaseName": "IAdminNotificationIdDelete",
        "requestName": [
            "IAdminNotificationIdDelete"
        ],
        "responseBaseName": "OAdminNotificationIdDelete",
        "responseName": [
            "OAdminNotificationIdDelete"
        ],
        "responseValueName": [
            "OAdminNotificationIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除通知 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminNotificationIdDelete>\n */\nexport const adminNotificationIdDelete = async (id: number) => {\n\treturn del<OAdminNotificationIdDelete>(`/admin/notification/${id}`)\n}",
        "reqCode": "/**\n * @description 删除通知 buildReqGetOrPostTyped\n * @url /admin/notification/{id}\n */\nexport interface IAdminNotificationIdDelete{\n}",
        "resCode": "/**\n * @description 删除通知 buildResAnyTyped\n * @url /admin/notification/{x}\n */\nexport type OAdminNotificationIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除通知 buildResAnyTyped\n * @url /admin/notification/{x}\n */\nexport const OAdminNotificationIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/notification/{x}",
        "url": "/admin/notification/{id}",
        "pureUrl": "/admin/notification/{x}",
        "pathReqUrl": "/admin/notification/${id}",
        "method": "get",
        "apiName": "查询通知详情",
        "key": "AdminNotificationIdGet",
        "fnName": "adminNotificationIdGet",
        "requestBaseName": "IAdminNotificationIdGet",
        "requestName": [
            "IAdminNotificationIdGet"
        ],
        "responseBaseName": "OAdminNotificationIdGet",
        "responseName": [
            "OAdminNotificationIdGet"
        ],
        "responseValueName": [
            "OAdminNotificationIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询通知详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminNotificationIdGet>\n */\nexport const adminNotificationIdGet = async (id: number) => {\n\treturn get<OAdminNotificationIdGet>(`/admin/notification/${id}`)\n}",
        "reqCode": "/**\n * @description 查询通知详情 buildReqGetOrPostTyped\n * @url /admin/notification/{id}\n */\nexport interface IAdminNotificationIdGet{\n}",
        "resCode": "/**\n * @description 查询通知详情 buildResAnyTyped\n * @url /admin/notification/{x}\n */\nexport type OAdminNotificationIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询通知详情 buildResAnyTyped\n * @url /admin/notification/{x}\n */\nexport const OAdminNotificationIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/notification/list",
        "url": "/admin/notification/list",
        "pureUrl": "/admin/notification/list",
        "pathReqUrl": "/admin/notification/list",
        "method": "get",
        "apiName": "查询通知列表",
        "key": "AdminNotificationListGet",
        "fnName": "adminNotificationListGet",
        "requestBaseName": "IAdminNotificationListGet",
        "requestName": [
            "IAdminNotificationListGet"
        ],
        "responseBaseName": "OAdminNotificationListGet",
        "responseName": [
            "OAdminNotificationListGet"
        ],
        "responseValueName": [
            "OAdminNotificationListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "通知类型 二级类型 SYS:系统更新  ANN:公告",
                    "type": "string",
                    "id": "8zAKtdbsST",
                    "enable": true,
                    "name": "secondCategory",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "LNLsmh5dev",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "RIZ2LUjyMX",
                    "enable": true,
                    "name": "createById",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "TbrQWj6yTk",
                    "enable": true,
                    "name": "publishTimeStart",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "Rz5x02gcTO",
                    "enable": true,
                    "name": "publishTimeEnd",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询通知列表 buildFnGetOrPostCode\n * \n * @param {string} params.secondCategory 可选: 通知类型 二级类型 SYS:系统更新  ANN:公告\n * @param {string} params.title 可选: \n * @param {number} params.createById 可选: \n * @param {string} params.publishTimeStart 可选: \n * @param {string} params.publishTimeEnd 可选: \n * @return Promise<OAdminNotificationListGet>\n */\nexport const adminNotificationListGet = async (params?: IAdminNotificationListGet) => {\n\treturn get<OAdminNotificationListGet>(`/admin/notification/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询通知列表 buildReqGetOrPostTyped\n * @url /admin/notification/list\n */\nexport interface IAdminNotificationListGet{\n\tsecondCategory?: string; // 通知类型 二级类型 SYS:系统更新  ANN:公告\n\ttitle?: string;\n\tcreateById?: number;\n\tpublishTimeStart?: string;\n\tpublishTimeEnd?: string;\n}",
        "resCode": "/**\n * @description 查询通知列表 buildResAnyTyped\n * @url /admin/notification/list\n */\nexport type OAdminNotificationListGet = {\n}",
        "resValueCode": "/**\n * @description 查询通知列表 buildResAnyTyped\n * @url /admin/notification/list\n */\nexport const OAdminNotificationListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/notification",
        "url": "/admin/notification",
        "pureUrl": "/admin/notification",
        "pathReqUrl": "/admin/notification",
        "method": "post",
        "apiName": "新增通知",
        "key": "AdminNotificationPost",
        "fnName": "adminNotificationPost",
        "requestBaseName": "IAdminNotificationPost",
        "requestName": [
            "IAdminNotificationPost"
        ],
        "responseBaseName": "OAdminNotificationPost",
        "responseName": [
            "OAdminNotificationPost"
        ],
        "responseValueName": [
            "OAdminNotificationPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "二级类型 SYS:系统更新  ANN:公告",
                    "type": "string",
                    "id": "88ydkRXgW9",
                    "enable": true,
                    "name": "secondCategory",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "HcR3oB669E",
                    "enable": true,
                    "name": "title",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "KrRzkgWBzA",
                    "enable": true,
                    "name": "publishTime",
                    "sampleValue": "",
                    "oldType": "string"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "v2aiqXHYsn",
                    "enable": true,
                    "name": "content",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增通知 buildFnGetOrPostCode\n * \n * @param {string} params.secondCategory 可选: 二级类型 SYS:系统更新  ANN:公告\n * @param {string} params.title 可选: \n * @param {string} params.publishTime 可选: \n * @param {string} params.content 可选: \n * @return Promise<OAdminNotificationPost>\n */\nexport const adminNotificationPost = async (params?: IAdminNotificationPost) => {\n\treturn post<OAdminNotificationPost>(`/admin/notification`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 新增通知 buildReqGetOrPostTyped\n * @url /admin/notification\n */\nexport interface IAdminNotificationPost{\n\tsecondCategory?: string; // 二级类型 SYS:系统更新  ANN:公告\n\ttitle?: string;\n\tpublishTime?: string;\n\tcontent?: string;\n}",
        "resCode": "/**\n * @description 新增通知 buildResAnyTyped\n * @url /admin/notification\n */\nexport type OAdminNotificationPost = {\n}",
        "resValueCode": "/**\n * @description 新增通知 buildResAnyTyped\n * @url /admin/notification\n */\nexport const OAdminNotificationPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/order/basic/info",
        "url": "/admin/order/basic/info",
        "pureUrl": "/admin/order/basic/info",
        "pathReqUrl": "/admin/order/basic/info",
        "method": "put",
        "apiName": "修改订单基本信息",
        "key": "AdminOrderBasicInfoPut",
        "fnName": "adminOrderBasicInfoPut",
        "requestBaseName": "IAdminOrderBasicInfoPut",
        "requestName": [
            "IAdminOrderBasicInfoPut"
        ],
        "responseBaseName": "OAdminOrderBasicInfoPut",
        "responseName": [
            "OAdminOrderBasicInfoPut"
        ],
        "responseValueName": [
            "OAdminOrderBasicInfoPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "applyUserName",
                    "type": "string",
                    "description": "申请人姓名",
                    "oldType": "string"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "receiptNumber",
                    "type": "string",
                    "description": "回执单",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改订单基本信息 buildFnGetOrPostCode\n * \n * @param {string} params.applyUserName 可选: 申请人姓名\n * @param {number} params.orderId 必填: 订单ID\n * @param {string} params.receiptNumber 可选: 回执单\n * @return Promise<OAdminOrderBasicInfoPut>\n */\nexport const adminOrderBasicInfoPut = async (params?: IAdminOrderBasicInfoPut) => {\n\treturn put<OAdminOrderBasicInfoPut>(`/admin/order/basic/info`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改订单基本信息 buildReqGetOrPostTyped\n * @url /admin/order/basic/info\n */\nexport interface IAdminOrderBasicInfoPut{\n\tapplyUserName?: string; // 申请人姓名\n\torderId: number; // 订单ID\n\treceiptNumber?: string; // 回执单\n}",
        "resCode": "/**\n * @description 修改订单基本信息 buildResAnyTyped\n * @url /admin/order/basic/info\n */\nexport type OAdminOrderBasicInfoPut = {\n}",
        "resValueCode": "/**\n * @description 修改订单基本信息 buildResAnyTyped\n * @url /admin/order/basic/info\n */\nexport const OAdminOrderBasicInfoPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/broker/bind",
        "url": "/admin/order/broker/bind",
        "pureUrl": "/admin/order/broker/bind",
        "pathReqUrl": "/admin/order/broker/bind",
        "method": "post",
        "apiName": "绑定中介",
        "key": "AdminOrderBrokerBindPost",
        "fnName": "adminOrderBrokerBindPost",
        "requestBaseName": "IAdminOrderBrokerBindPost",
        "requestName": [
            "IAdminOrderBrokerBindPost"
        ],
        "responseBaseName": "OAdminOrderBrokerBindPost",
        "responseName": [
            "OAdminOrderBrokerBindPost"
        ],
        "responseValueName": [
            "OAdminOrderBrokerBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "brokerId",
                    "type": "number",
                    "description": "中介id",
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定中介 buildFnGetOrPostCode\n * \n * @param {number} params.brokerId 可选: 中介id\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OAdminOrderBrokerBindPost>\n */\nexport const adminOrderBrokerBindPost = async (params?: IAdminOrderBrokerBindPost) => {\n\treturn post<OAdminOrderBrokerBindPost>(`/admin/order/broker/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定中介 buildReqGetOrPostTyped\n * @url /admin/order/broker/bind\n */\nexport interface IAdminOrderBrokerBindPost{\n\tbrokerId?: number; // 中介id\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 绑定中介 buildResAnyTyped\n * @url /admin/order/broker/bind\n */\nexport type OAdminOrderBrokerBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定中介 buildResAnyTyped\n * @url /admin/order/broker/bind\n */\nexport const OAdminOrderBrokerBindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/broker/list",
        "url": "/admin/order/broker/list",
        "pureUrl": "/admin/order/broker/list",
        "pathReqUrl": "/admin/order/broker/list",
        "method": "get",
        "apiName": "查询订单中介列表",
        "key": "AdminOrderBrokerListGet",
        "fnName": "adminOrderBrokerListGet",
        "requestBaseName": "IAdminOrderBrokerListGet",
        "requestName": [
            "IAdminOrderBrokerListGet"
        ],
        "responseBaseName": "OAdminOrderBrokerListGet",
        "responseName": [
            "OAdminOrderBrokerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "2qP6eMa9pP",
                    "name": "orderId",
                    "required": true,
                    "description": "订单id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "0-当前 1-历史",
                    "type": "number",
                    "id": "k9lksRjPo2",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderBrokerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询订单中介列表 buildFnArrayCode\n * \n * @param {number} params.orderId 必填: 订单id\n * @param {number} params.status 必填: 0-当前 1-历史}\n * @return Promise<OAdminOrderBrokerListGetItem>\n */\nexport const adminOrderBrokerListGet = async (params?: IAdminOrderBrokerListGet) => {\n\treturn get<OAdminOrderBrokerListGetItem[]>(`/admin/order/broker/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单中介列表 buildReqGetOrPostTyped\n * @url /admin/order/broker/list\n */\nexport interface IAdminOrderBrokerListGet{\n\torderId: number; // 订单id\n\tstatus: number; // 0-当前 1-历史\n}",
        "deleteResponseName": "OAdminOrderBrokerListGet",
        "resCode": "/**\n * @description 查询订单中介列表 buildResArrayTyped\n * @url /admin/order/broker/list\n */\nexport type OAdminOrderBrokerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询订单中介列表 buildResArrayTyped\n * @url /admin/order/broker/list\n */\nexport const OAdminOrderBrokerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/cancel",
        "url": "/admin/order/cancel",
        "pureUrl": "/admin/order/cancel",
        "pathReqUrl": "/admin/order/cancel",
        "method": "post",
        "apiName": "取消订单",
        "key": "AdminOrderCancelPost",
        "fnName": "adminOrderCancelPost",
        "requestBaseName": "IAdminOrderCancelPost",
        "requestName": [
            "IAdminOrderCancelPost"
        ],
        "responseBaseName": "OAdminOrderCancelPost",
        "responseName": [
            "OAdminOrderCancelPost"
        ],
        "responseValueName": [
            "OAdminOrderCancelPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 取消订单 buildFnGetOrPostCode\n * \n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OAdminOrderCancelPost>\n */\nexport const adminOrderCancelPost = async (params?: IAdminOrderCancelPost) => {\n\treturn post<OAdminOrderCancelPost>(`/admin/order/cancel`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 取消订单 buildReqGetOrPostTyped\n * @url /admin/order/cancel\n */\nexport interface IAdminOrderCancelPost{\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 取消订单 buildResAnyTyped\n * @url /admin/order/cancel\n */\nexport type OAdminOrderCancelPost = {\n}",
        "resValueCode": "/**\n * @description 取消订单 buildResAnyTyped\n * @url /admin/order/cancel\n */\nexport const OAdminOrderCancelPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/copywriting/bind",
        "url": "/admin/order/copywriting/bind",
        "pureUrl": "/admin/order/copywriting/bind",
        "pathReqUrl": "/admin/order/copywriting/bind",
        "method": "post",
        "apiName": "绑定文案",
        "key": "AdminOrderCopywritingBindPost",
        "fnName": "adminOrderCopywritingBindPost",
        "requestBaseName": "IAdminOrderCopywritingBindPost",
        "requestName": [
            "IAdminOrderCopywritingBindPost"
        ],
        "responseBaseName": "OAdminOrderCopywritingBindPost",
        "responseName": [
            "OAdminOrderCopywritingBindPost"
        ],
        "responseValueName": [
            "OAdminOrderCopywritingBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "copywritingId",
                    "type": "number",
                    "description": "文案id",
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定文案 buildFnGetOrPostCode\n * \n * @param {number} params.copywritingId 可选: 文案id\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OAdminOrderCopywritingBindPost>\n */\nexport const adminOrderCopywritingBindPost = async (params?: IAdminOrderCopywritingBindPost) => {\n\treturn post<OAdminOrderCopywritingBindPost>(`/admin/order/copywriting/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定文案 buildReqGetOrPostTyped\n * @url /admin/order/copywriting/bind\n */\nexport interface IAdminOrderCopywritingBindPost{\n\tcopywritingId?: number; // 文案id\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 绑定文案 buildResAnyTyped\n * @url /admin/order/copywriting/bind\n */\nexport type OAdminOrderCopywritingBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定文案 buildResAnyTyped\n * @url /admin/order/copywriting/bind\n */\nexport const OAdminOrderCopywritingBindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/copywriting/list",
        "url": "/admin/order/copywriting/list",
        "pureUrl": "/admin/order/copywriting/list",
        "pathReqUrl": "/admin/order/copywriting/list",
        "method": "get",
        "apiName": "查询订单文案列表",
        "key": "AdminOrderCopywritingListGet",
        "fnName": "adminOrderCopywritingListGet",
        "requestBaseName": "IAdminOrderCopywritingListGet",
        "requestName": [
            "IAdminOrderCopywritingListGet"
        ],
        "responseBaseName": "OAdminOrderCopywritingListGet",
        "responseName": [
            "OAdminOrderCopywritingListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "2qP6eMa9pP",
                    "name": "orderId",
                    "required": true,
                    "description": "订单id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "0-当前 1-历史",
                    "type": "number",
                    "id": "jsVNoiAJ60",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderCopywritingListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询订单文案列表 buildFnArrayCode\n * \n * @param {number} params.orderId 必填: 订单id\n * @param {number} params.status 必填: 0-当前 1-历史}\n * @return Promise<OAdminOrderCopywritingListGetItem>\n */\nexport const adminOrderCopywritingListGet = async (params?: IAdminOrderCopywritingListGet) => {\n\treturn get<OAdminOrderCopywritingListGetItem[]>(`/admin/order/copywriting/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单文案列表 buildReqGetOrPostTyped\n * @url /admin/order/copywriting/list\n */\nexport interface IAdminOrderCopywritingListGet{\n\torderId: number; // 订单id\n\tstatus: number; // 0-当前 1-历史\n}",
        "deleteResponseName": "OAdminOrderCopywritingListGet",
        "resCode": "/**\n * @description 查询订单文案列表 buildResArrayTyped\n * @url /admin/order/copywriting/list\n */\nexport type OAdminOrderCopywritingListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询订单文案列表 buildResArrayTyped\n * @url /admin/order/copywriting/list\n */\nexport const OAdminOrderCopywritingListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/create",
        "url": "/admin/order/create",
        "pureUrl": "/admin/order/create",
        "pathReqUrl": "/admin/order/create",
        "method": "post",
        "apiName": "创建订单",
        "key": "AdminOrderCreatePost",
        "fnName": "adminOrderCreatePost",
        "requestBaseName": "IAdminOrderCreatePost",
        "requestName": [
            "IAdminOrderCreatePost"
        ],
        "responseBaseName": "OAdminOrderCreatePost",
        "responseName": [
            "OAdminOrderCreatePost"
        ],
        "responseValueName": [
            "OAdminOrderCreatePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资人ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "productType",
                    "type": "string",
                    "description": "产品类型  'EB-5','EB-1A','NIW'",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 创建订单 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资人ID\n * @param {string} params.productType 必填: 产品类型  'EB-5','EB-1A','NIW'\n * @return Promise<OAdminOrderCreatePost>\n */\nexport const adminOrderCreatePost = async (params?: IAdminOrderCreatePost) => {\n\treturn post<OAdminOrderCreatePost>(`/admin/order/create`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 创建订单 buildReqGetOrPostTyped\n * @url /admin/order/create\n */\nexport interface IAdminOrderCreatePost{\n\tinvestorId: number; // 投资人ID\n\tproductType: string; // 产品类型  'EB-5','EB-1A','NIW'\n}",
        "resCode": "/**\n * @description 创建订单 buildResAnyTyped\n * @url /admin/order/create\n */\nexport type OAdminOrderCreatePost = {\n}",
        "resValueCode": "/**\n * @description 创建订单 buildResAnyTyped\n * @url /admin/order/create\n */\nexport const OAdminOrderCreatePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/customer/bind",
        "url": "/admin/order/customer/bind",
        "pureUrl": "/admin/order/customer/bind",
        "pathReqUrl": "/admin/order/customer/bind",
        "method": "post",
        "apiName": "绑定客服",
        "key": "AdminOrderCustomerBindPost",
        "fnName": "adminOrderCustomerBindPost",
        "requestBaseName": "IAdminOrderCustomerBindPost",
        "requestName": [
            "IAdminOrderCustomerBindPost"
        ],
        "responseBaseName": "OAdminOrderCustomerBindPost",
        "responseName": [
            "OAdminOrderCustomerBindPost"
        ],
        "responseValueName": [
            "OAdminOrderCustomerBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "customerId",
                    "type": "number",
                    "description": "客服id",
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定客服 buildFnGetOrPostCode\n * \n * @param {number} params.customerId 可选: 客服id\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OAdminOrderCustomerBindPost>\n */\nexport const adminOrderCustomerBindPost = async (params?: IAdminOrderCustomerBindPost) => {\n\treturn post<OAdminOrderCustomerBindPost>(`/admin/order/customer/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定客服 buildReqGetOrPostTyped\n * @url /admin/order/customer/bind\n */\nexport interface IAdminOrderCustomerBindPost{\n\tcustomerId?: number; // 客服id\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 绑定客服 buildResAnyTyped\n * @url /admin/order/customer/bind\n */\nexport type OAdminOrderCustomerBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定客服 buildResAnyTyped\n * @url /admin/order/customer/bind\n */\nexport const OAdminOrderCustomerBindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/customer/list",
        "url": "/admin/order/customer/list",
        "pureUrl": "/admin/order/customer/list",
        "pathReqUrl": "/admin/order/customer/list",
        "method": "get",
        "apiName": "查询订单客服列表",
        "key": "AdminOrderCustomerListGet",
        "fnName": "adminOrderCustomerListGet",
        "requestBaseName": "IAdminOrderCustomerListGet",
        "requestName": [
            "IAdminOrderCustomerListGet"
        ],
        "responseBaseName": "OAdminOrderCustomerListGet",
        "responseName": [
            "OAdminOrderCustomerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "2qP6eMa9pP",
                    "name": "orderId",
                    "required": true,
                    "description": "订单id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "0-当前 1-历史",
                    "type": "number",
                    "id": "6unKAZpl02",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderCustomerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询订单客服列表 buildFnArrayCode\n * \n * @param {number} params.orderId 必填: 订单id\n * @param {number} params.status 必填: 0-当前 1-历史}\n * @return Promise<OAdminOrderCustomerListGetItem>\n */\nexport const adminOrderCustomerListGet = async (params?: IAdminOrderCustomerListGet) => {\n\treturn get<OAdminOrderCustomerListGetItem[]>(`/admin/order/customer/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单客服列表 buildReqGetOrPostTyped\n * @url /admin/order/customer/list\n */\nexport interface IAdminOrderCustomerListGet{\n\torderId: number; // 订单id\n\tstatus: number; // 0-当前 1-历史\n}",
        "deleteResponseName": "OAdminOrderCustomerListGet",
        "resCode": "/**\n * @description 查询订单客服列表 buildResArrayTyped\n * @url /admin/order/customer/list\n */\nexport type OAdminOrderCustomerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询订单客服列表 buildResArrayTyped\n * @url /admin/order/customer/list\n */\nexport const OAdminOrderCustomerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/lawyer/bind",
        "url": "/admin/order/lawyer/bind",
        "pureUrl": "/admin/order/lawyer/bind",
        "pathReqUrl": "/admin/order/lawyer/bind",
        "method": "post",
        "apiName": "绑定律师",
        "key": "AdminOrderLawyerBindPost",
        "fnName": "adminOrderLawyerBindPost",
        "requestBaseName": "IAdminOrderLawyerBindPost",
        "requestName": [
            "IAdminOrderLawyerBindPost"
        ],
        "responseBaseName": "OAdminOrderLawyerBindPost",
        "responseName": [
            "OAdminOrderLawyerBindPost"
        ],
        "responseValueName": [
            "OAdminOrderLawyerBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "lawyerId",
                    "type": "number",
                    "description": "律师id",
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定律师 buildFnGetOrPostCode\n * \n * @param {number} params.lawyerId 可选: 律师id\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OAdminOrderLawyerBindPost>\n */\nexport const adminOrderLawyerBindPost = async (params?: IAdminOrderLawyerBindPost) => {\n\treturn post<OAdminOrderLawyerBindPost>(`/admin/order/lawyer/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定律师 buildReqGetOrPostTyped\n * @url /admin/order/lawyer/bind\n */\nexport interface IAdminOrderLawyerBindPost{\n\tlawyerId?: number; // 律师id\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 绑定律师 buildResAnyTyped\n * @url /admin/order/lawyer/bind\n */\nexport type OAdminOrderLawyerBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定律师 buildResAnyTyped\n * @url /admin/order/lawyer/bind\n */\nexport const OAdminOrderLawyerBindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/lawyer/list",
        "url": "/admin/order/lawyer/list",
        "pureUrl": "/admin/order/lawyer/list",
        "pathReqUrl": "/admin/order/lawyer/list",
        "method": "get",
        "apiName": "查询订单律师列表",
        "key": "AdminOrderLawyerListGet",
        "fnName": "adminOrderLawyerListGet",
        "requestBaseName": "IAdminOrderLawyerListGet",
        "requestName": [
            "IAdminOrderLawyerListGet"
        ],
        "responseBaseName": "OAdminOrderLawyerListGet",
        "responseName": [
            "OAdminOrderLawyerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "qEYsXVZqPu",
                    "name": "orderId",
                    "required": true,
                    "description": "订单id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "0-当前 1-历史",
                    "type": "number",
                    "id": "NPEdoAbAlp",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderLawyerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询订单律师列表 buildFnArrayCode\n * \n * @param {number} params.orderId 必填: 订单id\n * @param {number} params.status 必填: 0-当前 1-历史}\n * @return Promise<OAdminOrderLawyerListGetItem>\n */\nexport const adminOrderLawyerListGet = async (params?: IAdminOrderLawyerListGet) => {\n\treturn get<OAdminOrderLawyerListGetItem[]>(`/admin/order/lawyer/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单律师列表 buildReqGetOrPostTyped\n * @url /admin/order/lawyer/list\n */\nexport interface IAdminOrderLawyerListGet{\n\torderId: number; // 订单id\n\tstatus: number; // 0-当前 1-历史\n}",
        "deleteResponseName": "OAdminOrderLawyerListGet",
        "resCode": "/**\n * @description 查询订单律师列表 buildResArrayTyped\n * @url /admin/order/lawyer/list\n */\nexport type OAdminOrderLawyerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询订单律师列表 buildResArrayTyped\n * @url /admin/order/lawyer/list\n */\nexport const OAdminOrderLawyerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/list",
        "url": "/admin/order/list",
        "pureUrl": "/admin/order/list",
        "pathReqUrl": "/admin/order/list",
        "method": "get",
        "apiName": "查询订单列表",
        "key": "AdminOrderListGet",
        "fnName": "adminOrderListGet",
        "requestBaseName": "IAdminOrderListGet",
        "requestName": [
            "IAdminOrderListGet"
        ],
        "responseBaseName": "OAdminOrderListGet",
        "responseName": [
            "OAdminOrderListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "ancfJcWbvU",
                    "name": "beginTime",
                    "required": false,
                    "description": "签约开始时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "zC4gCJJkzw",
                    "name": "endTime",
                    "required": false,
                    "description": "签约结束时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "n0QSGMXLaF",
                    "name": "orderNo",
                    "required": false,
                    "description": "订单编号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "0DSv4RIcle",
                    "name": "orderStatus",
                    "required": false,
                    "description": "订单状态 0-进行重 1-已完成 100-已取消",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "AsO0dOLcit",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "0U17oPS3uq",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "Pm6u6IaqQ2",
                    "name": "productId",
                    "required": false,
                    "description": "产品id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "wtNQP5Z5o4",
                    "name": "type",
                    "required": false,
                    "description": "产品类型详见productType枚举 目前有:EB-5",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者邮箱",
                    "type": "string",
                    "id": "jdp96wZu0M",
                    "enable": true,
                    "name": "investorEmail",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者名称",
                    "type": "string",
                    "id": "Uaolp16spJ",
                    "enable": true,
                    "name": "investorName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者编号",
                    "type": "string",
                    "id": "A94VXjcbaZ",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询订单列表 buildFnArrayCode\n * \n * @param {string} params.beginTime 可选: 签约开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.endTime 可选: 签约结束时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.orderNo 可选: 订单编号\n * @param {number} params.orderStatus 可选: 订单状态 0-进行重 1-已完成 100-已取消\n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {number} params.productId 可选: 产品id\n * @param {string} params.type 可选: 产品类型详见productType枚举 目前有:EB-5\n * @param {string} params.investorEmail 可选: 投资者邮箱\n * @param {string} params.investorName 可选: 投资者名称\n * @param {string} params.investorNo 可选: 投资者编号}\n * @return Promise<OAdminOrderListGetItem>\n */\nexport const adminOrderListGet = async (params?: IAdminOrderListGet) => {\n\treturn get<OAdminOrderListGetItem[]>(`/admin/order/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单列表 buildReqGetOrPostTyped\n * @url /admin/order/list\n */\nexport interface IAdminOrderListGet{\n\tbeginTime?: string; // 签约开始时间 yyyy-MM-dd HH:mm:ss\n\tendTime?: string; // 签约结束时间 yyyy-MM-dd HH:mm:ss\n\torderNo?: string; // 订单编号\n\torderStatus?: number; // 订单状态 0-进行重 1-已完成 100-已取消\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\tproductId?: number; // 产品id\n\ttype?: string; // 产品类型详见productType枚举 目前有:EB-5\n\tinvestorEmail?: string; // 投资者邮箱\n\tinvestorName?: string; // 投资者名称\n\tinvestorNo?: string; // 投资者编号\n}",
        "deleteResponseName": "OAdminOrderListGet",
        "resCode": "/**\n * @description 查询订单列表 buildResArrayTyped\n * @url /admin/order/list\n */\nexport type OAdminOrderListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询订单列表 buildResArrayTyped\n * @url /admin/order/list\n */\nexport const OAdminOrderListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/{x}",
        "url": "/admin/order/{orderNo}",
        "pureUrl": "/admin/order/{x}",
        "pathReqUrl": "/admin/order/${orderNo}",
        "method": "get",
        "apiName": "获取订单详情",
        "key": "AdminOrderOrderNoGet",
        "fnName": "adminOrderOrderNoGet",
        "requestBaseName": "IAdminOrderOrderNoGet",
        "requestName": [
            "IAdminOrderOrderNoGet"
        ],
        "responseBaseName": "OAdminOrderOrderNoGet",
        "responseName": [
            "OAdminOrderOrderNoGet"
        ],
        "responseValueName": [
            "OAdminOrderOrderNoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "orderNo#0",
                    "name": "orderNo",
                    "required": true,
                    "description": "orderNo",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取订单详情 buildFnPathCode\n * @path {string orderNo 必填: }\n * @return Promise<OAdminOrderOrderNoGet>\n */\nexport const adminOrderOrderNoGet = async (orderNo: string) => {\n\treturn get<OAdminOrderOrderNoGet>(`/admin/order/${orderNo}`)\n}",
        "reqCode": "/**\n * @description 获取订单详情 buildReqGetOrPostTyped\n * @url /admin/order/{orderNo}\n */\nexport interface IAdminOrderOrderNoGet{\n}",
        "resCode": "/**\n * @description 获取订单详情 buildResAnyTyped\n * @url /admin/order/{x}\n */\nexport type OAdminOrderOrderNoGet = {\n}",
        "resValueCode": "/**\n * @description 获取订单详情 buildResAnyTyped\n * @url /admin/order/{x}\n */\nexport const OAdminOrderOrderNoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/pay/list",
        "url": "/admin/order/pay/list",
        "pureUrl": "/admin/order/pay/list",
        "pathReqUrl": "/admin/order/pay/list",
        "method": "get",
        "apiName": "订单支付记录",
        "key": "AdminOrderPayListGet",
        "fnName": "adminOrderPayListGet",
        "requestBaseName": "IAdminOrderPayListGet",
        "requestName": [
            "IAdminOrderPayListGet"
        ],
        "responseBaseName": "OAdminOrderPayListGet",
        "responseName": [
            "OAdminOrderPayListGet"
        ],
        "responseValueName": [
            "OAdminOrderPayListGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "id": "jGx4WIYiMM",
                    "name": "pageNum",
                    "required": false,
                    "description": "页码",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "fnxUSNrVez",
                    "name": "pageSize",
                    "required": false,
                    "description": "条数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "8Txf4ctwmj",
                    "name": "payNo",
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者编号",
                    "type": "string",
                    "id": "e88FUJ12v5",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者邮箱",
                    "type": "string",
                    "id": "naWa9cAIVW",
                    "enable": true,
                    "name": "investorEmail",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者手机",
                    "type": "string",
                    "id": "3FMPYsy7Gi",
                    "enable": true,
                    "name": "investorPhone",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者名称",
                    "type": "string",
                    "id": "fjrKZZorn7",
                    "enable": true,
                    "name": "investorName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值时间",
                    "type": "string",
                    "id": "hqEbEIi9sr",
                    "enable": true,
                    "name": "beginTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值时间",
                    "type": "string",
                    "id": "SqUZKKPclo",
                    "enable": true,
                    "name": "endTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值金额",
                    "type": "number",
                    "id": "3i6DOlxX84",
                    "enable": true,
                    "name": "minAmount",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值金额",
                    "type": "number",
                    "id": "tI8NpK3RfX",
                    "enable": true,
                    "name": "maxAmount",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单编号",
                    "type": "string",
                    "id": "5WskxiBtsD",
                    "enable": true,
                    "name": "orderNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "操作人",
                    "type": "number",
                    "id": "lblNBOpK2b",
                    "enable": true,
                    "name": "createById",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 订单支付记录 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: 页码\n * @param {number} params.pageSize 可选: 条数\n * @param {string} params.payNo 可选: 流水号\n * @param {string} params.investorNo 可选: 投资者编号\n * @param {string} params.investorEmail 可选: 投资者邮箱\n * @param {string} params.investorPhone 可选: 投资者手机\n * @param {string} params.investorName 可选: 投资者名称\n * @param {string} params.beginTime 可选: 充值时间\n * @param {string} params.endTime 可选: 充值时间\n * @param {number} params.minAmount 可选: 充值金额\n * @param {number} params.maxAmount 可选: 充值金额\n * @param {string} params.orderNo 可选: 订单编号\n * @param {number} params.createById 可选: 操作人\n * @return Promise<OAdminOrderPayListGet>\n */\nexport const adminOrderPayListGet = async (params?: IAdminOrderPayListGet) => {\n\treturn get<OAdminOrderPayListGet>(`/admin/order/pay/list`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 订单支付记录 buildReqGetOrPostTyped\n * @url /admin/order/pay/list\n */\nexport interface IAdminOrderPayListGet{\n\tpageNum?: number; // 页码\n\tpageSize?: number; // 条数\n\tpayNo?: string; // 流水号\n\tinvestorNo?: string; // 投资者编号\n\tinvestorEmail?: string; // 投资者邮箱\n\tinvestorPhone?: string; // 投资者手机\n\tinvestorName?: string; // 投资者名称\n\tbeginTime?: string; // 充值时间\n\tendTime?: string; // 充值时间\n\tminAmount?: number; // 充值金额\n\tmaxAmount?: number; // 充值金额\n\torderNo?: string; // 订单编号\n\tcreateById?: number; // 操作人\n}",
        "resCode": "/**\n * @description 订单支付记录 buildResAnyTyped\n * @url /admin/order/pay/list\n */\nexport type OAdminOrderPayListGet = {\n}",
        "resValueCode": "/**\n * @description 订单支付记录 buildResAnyTyped\n * @url /admin/order/pay/list\n */\nexport const OAdminOrderPayListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/phase/status",
        "url": "/admin/order/phase/status",
        "pureUrl": "/admin/order/phase/status",
        "pathReqUrl": "/admin/order/phase/status",
        "method": "post",
        "apiName": "隐藏/显示阶段",
        "key": "AdminOrderPhaseStatusPost",
        "fnName": "adminOrderPhaseStatusPost",
        "requestBaseName": "IAdminOrderPhaseStatusPost",
        "requestName": [
            "IAdminOrderPhaseStatusPost"
        ],
        "responseBaseName": "OAdminOrderPhaseStatusPost",
        "responseName": [
            "OAdminOrderPhaseStatusPost"
        ],
        "responseValueName": [
            "OAdminOrderPhaseStatusPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "phaseId",
                    "type": "number",
                    "description": "阶段ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0打开 1关闭",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 隐藏/显示阶段 buildFnGetOrPostCode\n * \n * @param {number} params.phaseId 必填: 阶段ID\n * @param {number} params.status 必填: 状态 0打开 1关闭\n * @return Promise<OAdminOrderPhaseStatusPost>\n */\nexport const adminOrderPhaseStatusPost = async (params?: IAdminOrderPhaseStatusPost) => {\n\treturn post<OAdminOrderPhaseStatusPost>(`/admin/order/phase/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 隐藏/显示阶段 buildReqGetOrPostTyped\n * @url /admin/order/phase/status\n */\nexport interface IAdminOrderPhaseStatusPost{\n\tphaseId: number; // 阶段ID\n\tstatus: number; // 状态 0打开 1关闭\n}",
        "resCode": "/**\n * @description 隐藏/显示阶段 buildResAnyTyped\n * @url /admin/order/phase/status\n */\nexport type OAdminOrderPhaseStatusPost = {\n}",
        "resValueCode": "/**\n * @description 隐藏/显示阶段 buildResAnyTyped\n * @url /admin/order/phase/status\n */\nexport const OAdminOrderPhaseStatusPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/product/bind",
        "url": "/admin/order/product/bind",
        "pureUrl": "/admin/order/product/bind",
        "pathReqUrl": "/admin/order/product/bind",
        "method": "post",
        "apiName": "绑定产品",
        "key": "AdminOrderProductBindPost",
        "fnName": "adminOrderProductBindPost",
        "requestBaseName": "IAdminOrderProductBindPost",
        "requestName": [
            "IAdminOrderProductBindPost"
        ],
        "responseBaseName": "OAdminOrderProductBindPost",
        "responseName": [
            "OAdminOrderProductBindPost"
        ],
        "responseValueName": [
            "OAdminOrderProductBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "orderId",
                    "type": "string",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "productId",
                    "type": "string",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 绑定产品 buildFnGetOrPostCode\n * \n * @param {string} params.orderId 必填: 订单ID\n * @param {string} params.productId 必填: 产品ID\n * @return Promise<OAdminOrderProductBindPost>\n */\nexport const adminOrderProductBindPost = async (params?: IAdminOrderProductBindPost) => {\n\treturn post<OAdminOrderProductBindPost>(`/admin/order/product/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定产品 buildReqGetOrPostTyped\n * @url /admin/order/product/bind\n */\nexport interface IAdminOrderProductBindPost{\n\torderId: string; // 订单ID\n\tproductId: string; // 产品ID\n}",
        "resCode": "/**\n * @description 绑定产品 buildResAnyTyped\n * @url /admin/order/product/bind\n */\nexport type OAdminOrderProductBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定产品 buildResAnyTyped\n * @url /admin/order/product/bind\n */\nexport const OAdminOrderProductBindPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/order/step",
        "url": "/admin/order/step",
        "pureUrl": "/admin/order/step",
        "pathReqUrl": "/admin/order/step",
        "method": "put",
        "apiName": "修改订单",
        "key": "AdminOrderStepPut",
        "fnName": "adminOrderStepPut",
        "requestBaseName": "IAdminOrderStepPut",
        "requestName": [
            "IAdminOrderStepPut"
        ],
        "responseBaseName": "OAdminOrderStepPut",
        "responseName": [
            "OAdminOrderStepPut"
        ],
        "responseValueName": [
            "OAdminOrderStepPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "componentId",
                    "type": "number",
                    "description": "组件ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderSubId",
                    "type": "number",
                    "description": "子订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "valueObject",
                    "type": "any",
                    "properties": {
                        "payMode": {
                            "type": "integer",
                            "description": "支付方式 一般用于支付组件"
                        },
                        "fileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fileUrl": {
                                        "type": "string"
                                    },
                                    "fileName": {
                                        "type": "string"
                                    }
                                },
                                "x-apifox-orders": [
                                    "fileUrl",
                                    "fileName"
                                ]
                            },
                            "description": "文件url 一般用于文件组件"
                        }
                    },
                    "x-apifox-orders": [
                        "fileList",
                        "payMode"
                    ],
                    "required": true,
                    "oldType": "any"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改订单 buildFnGetOrPostCode\n * \n * @param {number} params.componentId 必填: 组件ID\n * @param {number} params.orderId 必填: 订单ID\n * @param {number} params.orderSubId 必填: 子订单ID\n * @param {any} params.valueObject 必填: \n * @return Promise<OAdminOrderStepPut>\n */\nexport const adminOrderStepPut = async (params?: IAdminOrderStepPut) => {\n\treturn put<OAdminOrderStepPut>(`/admin/order/step`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改订单 buildReqGetOrPostTyped\n * @url /admin/order/step\n */\nexport interface IAdminOrderStepPut{\n\tcomponentId: number; // 组件ID\n\torderId: number; // 订单ID\n\torderSubId: number; // 子订单ID\n\tvalueObject: any;\n}",
        "resCode": "/**\n * @description 修改订单 buildResAnyTyped\n * @url /admin/order/step\n */\nexport type OAdminOrderStepPut = {\n}",
        "resValueCode": "/**\n * @description 修改订单 buildResAnyTyped\n * @url /admin/order/step\n */\nexport const OAdminOrderStepPutValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/order/sub/content/{x}/{x}",
        "url": "/admin/order/sub/content/{componentId}/{orderSubId}",
        "pureUrl": "/admin/order/sub/content/{x}/{x}",
        "pathReqUrl": "/admin/order/sub/content/${componentId}/${orderSubId}",
        "method": "delete",
        "apiName": "删除订单组件内容(子订单)",
        "key": "AdminOrderSubContentComponentIdOrderSubIdDelete",
        "fnName": "adminOrderSubContentComponentIdOrderSubIdDelete",
        "requestBaseName": "IAdminOrderSubContentComponentIdOrderSubIdDelete",
        "requestName": [
            "IAdminOrderSubContentComponentIdOrderSubIdDelete"
        ],
        "responseBaseName": "OAdminOrderSubContentComponentIdOrderSubIdDelete",
        "responseName": [
            "OAdminOrderSubContentComponentIdOrderSubIdDelete"
        ],
        "responseValueName": [
            "OAdminOrderSubContentComponentIdOrderSubIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "componentId#0",
                    "name": "componentId",
                    "required": true,
                    "description": "组件ID",
                    "type": "number",
                    "enable": true
                },
                {
                    "id": "orderSubId#0",
                    "name": "orderSubId",
                    "required": true,
                    "description": "子订单ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除订单组件内容(子订单) buildFnPathCode\n * @path {number componentId 必填: 组件ID}\n * @path {number orderSubId 必填: 子订单ID}\n * @return Promise<OAdminOrderSubContentComponentIdOrderSubIdDelete>\n */\nexport const adminOrderSubContentComponentIdOrderSubIdDelete = async (componentId: number, orderSubId: number) => {\n\treturn del<OAdminOrderSubContentComponentIdOrderSubIdDelete>(`/admin/order/sub/content/${componentId}/${orderSubId}`)\n}",
        "reqCode": "/**\n * @description 删除订单组件内容(子订单) buildReqGetOrPostTyped\n * @url /admin/order/sub/content/{componentId}/{orderSubId}\n */\nexport interface IAdminOrderSubContentComponentIdOrderSubIdDelete{\n}",
        "resCode": "/**\n * @description 删除订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content/{x}/{x}\n */\nexport type OAdminOrderSubContentComponentIdOrderSubIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content/{x}/{x}\n */\nexport const OAdminOrderSubContentComponentIdOrderSubIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/sub/content",
        "url": "/admin/order/sub/content",
        "pureUrl": "/admin/order/sub/content",
        "pathReqUrl": "/admin/order/sub/content",
        "method": "post",
        "apiName": "添加订单组件内容(子订单)",
        "key": "AdminOrderSubContentPost",
        "fnName": "adminOrderSubContentPost",
        "requestBaseName": "IAdminOrderSubContentPost",
        "requestName": [
            "IAdminOrderSubContentPost"
        ],
        "responseBaseName": "OAdminOrderSubContentPost",
        "responseName": [
            "OAdminOrderSubContentPost"
        ],
        "responseValueName": [
            "OAdminOrderSubContentPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "componentId",
                    "type": "number",
                    "description": "组件ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "valueObject",
                    "type": "any",
                    "properties": {},
                    "x-apifox-orders": [],
                    "description": "各组件内容值",
                    "required": true,
                    "oldType": "any"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加订单组件内容(子订单) buildFnGetOrPostCode\n * \n * @param {number} params.componentId 必填: 组件ID\n * @param {number} params.orderId 必填: 订单ID\n * @param {any} params.valueObject 必填: 各组件内容值\n * @return Promise<OAdminOrderSubContentPost>\n */\nexport const adminOrderSubContentPost = async (params?: IAdminOrderSubContentPost) => {\n\treturn post<OAdminOrderSubContentPost>(`/admin/order/sub/content`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加订单组件内容(子订单) buildReqGetOrPostTyped\n * @url /admin/order/sub/content\n */\nexport interface IAdminOrderSubContentPost{\n\tcomponentId: number; // 组件ID\n\torderId: number; // 订单ID\n\tvalueObject: any; // 各组件内容值\n}",
        "resCode": "/**\n * @description 添加订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content\n */\nexport type OAdminOrderSubContentPost = {\n}",
        "resValueCode": "/**\n * @description 添加订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content\n */\nexport const OAdminOrderSubContentPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/order/sub/content",
        "url": "/admin/order/sub/content",
        "pureUrl": "/admin/order/sub/content",
        "pathReqUrl": "/admin/order/sub/content",
        "method": "put",
        "apiName": "修改订单组件内容(子订单)",
        "key": "AdminOrderSubContentPut",
        "fnName": "adminOrderSubContentPut",
        "requestBaseName": "IAdminOrderSubContentPut",
        "requestName": [
            "IAdminOrderSubContentPut"
        ],
        "responseBaseName": "OAdminOrderSubContentPut",
        "responseName": [
            "OAdminOrderSubContentPut"
        ],
        "responseValueName": [
            "OAdminOrderSubContentPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "componentId",
                    "type": "number",
                    "description": "组件ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderSubId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "valueObject",
                    "type": "any",
                    "properties": {},
                    "x-apifox-orders": [],
                    "description": "各组件内容值",
                    "required": true,
                    "oldType": "any"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改订单组件内容(子订单) buildFnGetOrPostCode\n * \n * @param {number} params.componentId 必填: 组件ID\n * @param {number} params.orderId 必填: 订单ID\n * @param {number} params.orderSubId 必填: \n * @param {any} params.valueObject 必填: 各组件内容值\n * @return Promise<OAdminOrderSubContentPut>\n */\nexport const adminOrderSubContentPut = async (params?: IAdminOrderSubContentPut) => {\n\treturn put<OAdminOrderSubContentPut>(`/admin/order/sub/content`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改订单组件内容(子订单) buildReqGetOrPostTyped\n * @url /admin/order/sub/content\n */\nexport interface IAdminOrderSubContentPut{\n\tcomponentId: number; // 组件ID\n\torderId: number; // 订单ID\n\torderSubId: number;\n\tvalueObject: any; // 各组件内容值\n}",
        "resCode": "/**\n * @description 修改订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content\n */\nexport type OAdminOrderSubContentPut = {\n}",
        "resValueCode": "/**\n * @description 修改订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/content\n */\nexport const OAdminOrderSubContentPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/order/sub/title",
        "url": "/admin/order/sub/title",
        "pureUrl": "/admin/order/sub/title",
        "pathReqUrl": "/admin/order/sub/title",
        "method": "put",
        "apiName": "修改阶段/组件标题",
        "key": "AdminOrderSubTitlePut",
        "fnName": "adminOrderSubTitlePut",
        "requestBaseName": "IAdminOrderSubTitlePut",
        "requestName": [
            "IAdminOrderSubTitlePut"
        ],
        "responseBaseName": "OAdminOrderSubTitlePut",
        "responseName": [
            "OAdminOrderSubTitlePut"
        ],
        "responseValueName": [
            "OAdminOrderSubTitlePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "bizStatus",
                    "type": "number",
                    "description": "业务状态 0未开始 1已完成 2进行中",
                    "oldType": "number"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "对应 phaseId，phaseChildId，componentId",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0打开 1关闭",
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题内容",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "对于的类型 'phase','step','component'",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改阶段/组件标题 buildFnGetOrPostCode\n * \n * @param {number} params.bizStatus 可选: 业务状态 0未开始 1已完成 2进行中\n * @param {number} params.id 必填: 对应 phaseId，phaseChildId，componentId\n * @param {number} params.status 可选: 状态 0打开 1关闭\n * @param {string} params.title 必填: 标题内容\n * @param {string} params.type 必填: 对于的类型 'phase','step','component'\n * @return Promise<OAdminOrderSubTitlePut>\n */\nexport const adminOrderSubTitlePut = async (params?: IAdminOrderSubTitlePut) => {\n\treturn put<OAdminOrderSubTitlePut>(`/admin/order/sub/title`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改阶段/组件标题 buildReqGetOrPostTyped\n * @url /admin/order/sub/title\n */\nexport interface IAdminOrderSubTitlePut{\n\tbizStatus?: number; // 业务状态 0未开始 1已完成 2进行中\n\tid: number; // 对应 phaseId，phaseChildId，componentId\n\tstatus?: number; // 状态 0打开 1关闭\n\ttitle: string; // 标题内容\n\ttype: string; // 对于的类型 'phase','step','component'\n}",
        "resCode": "/**\n * @description 修改阶段/组件标题 buildResAnyTyped\n * @url /admin/order/sub/title\n */\nexport type OAdminOrderSubTitlePut = {\n}",
        "resValueCode": "/**\n * @description 修改阶段/组件标题 buildResAnyTyped\n * @url /admin/order/sub/title\n */\nexport const OAdminOrderSubTitlePutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/sub/verify",
        "url": "/admin/order/sub/verify",
        "pureUrl": "/admin/order/sub/verify",
        "pathReqUrl": "/admin/order/sub/verify",
        "method": "post",
        "apiName": "审核订单组件内容(子订单)",
        "key": "AdminOrderSubVerifyPost",
        "fnName": "adminOrderSubVerifyPost",
        "requestBaseName": "IAdminOrderSubVerifyPost",
        "requestName": [
            "IAdminOrderSubVerifyPost"
        ],
        "responseBaseName": "OAdminOrderSubVerifyPost",
        "responseName": [
            "OAdminOrderSubVerifyPost"
        ],
        "responseValueName": [
            "OAdminOrderSubVerifyPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "componentId",
                    "type": "number",
                    "description": "组件ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderSubId",
                    "type": "number",
                    "description": "子订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "reason",
                    "type": "string",
                    "description": "审核不通过原因",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "审核状态 1-通过 9-不通过",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 审核订单组件内容(子订单) buildFnGetOrPostCode\n * \n * @param {number} params.componentId 必填: 组件ID\n * @param {number} params.orderId 必填: 订单ID\n * @param {number} params.orderSubId 必填: 子订单ID\n * @param {string} params.reason 可选: 审核不通过原因\n * @param {number} params.status 必填: 审核状态 1-通过 9-不通过\n * @return Promise<OAdminOrderSubVerifyPost>\n */\nexport const adminOrderSubVerifyPost = async (params?: IAdminOrderSubVerifyPost) => {\n\treturn post<OAdminOrderSubVerifyPost>(`/admin/order/sub/verify`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 审核订单组件内容(子订单) buildReqGetOrPostTyped\n * @url /admin/order/sub/verify\n */\nexport interface IAdminOrderSubVerifyPost{\n\tcomponentId: number; // 组件ID\n\torderId: number; // 订单ID\n\torderSubId: number; // 子订单ID\n\treason?: string; // 审核不通过原因\n\tstatus: number; // 审核状态 1-通过 9-不通过\n}",
        "resCode": "/**\n * @description 审核订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/verify\n */\nexport type OAdminOrderSubVerifyPost = {\n}",
        "resValueCode": "/**\n * @description 审核订单组件内容(子订单) buildResAnyTyped\n * @url /admin/order/sub/verify\n */\nexport const OAdminOrderSubVerifyPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/order/transfer/inside",
        "url": "/admin/order/transfer/inside",
        "pureUrl": "/admin/order/transfer/inside",
        "pathReqUrl": "/admin/order/transfer/inside",
        "method": "post",
        "apiName": "钱包内交易（目前只允许操作投资者的项目钱包）",
        "key": "AdminOrderTransferInsidePost",
        "fnName": "adminOrderTransferInsidePost",
        "requestBaseName": "IAdminOrderTransferInsidePost",
        "requestName": [
            "IAdminOrderTransferInsidePost"
        ],
        "responseBaseName": "OAdminOrderTransferInsidePost",
        "responseName": [
            "OAdminOrderTransferInsidePost"
        ],
        "responseValueName": [
            "OAdminOrderTransferInsidePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "amount",
                    "minimum": 0,
                    "type": "number",
                    "description": "交易金额",
                    "oldType": "number"
                },
                {
                    "name": "sourceAmountType",
                    "type": "string",
                    "description": "来源资金类型",
                    "oldType": "string"
                },
                {
                    "name": "targetAmountType",
                    "type": "string",
                    "description": "目标资金类型",
                    "oldType": "string"
                },
                {
                    "name": "walletId",
                    "type": "number",
                    "description": "钱包id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 钱包内交易（目前只允许操作投资者的项目钱包） buildFnGetOrPostCode\n * \n * @param {number} params.amount 可选: 交易金额\n * @param {string} params.sourceAmountType 可选: 来源资金类型\n * @param {string} params.targetAmountType 可选: 目标资金类型\n * @param {number} params.walletId 可选: 钱包id\n * @return Promise<OAdminOrderTransferInsidePost>\n */\nexport const adminOrderTransferInsidePost = async (params?: IAdminOrderTransferInsidePost) => {\n\treturn post<OAdminOrderTransferInsidePost>(`/admin/order/transfer/inside`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 钱包内交易（目前只允许操作投资者的项目钱包） buildReqGetOrPostTyped\n * @url /admin/order/transfer/inside\n */\nexport interface IAdminOrderTransferInsidePost{\n\tamount?: number; // 交易金额\n\tsourceAmountType?: string; // 来源资金类型\n\ttargetAmountType?: string; // 目标资金类型\n\twalletId?: number; // 钱包id\n}",
        "resCode": "/**\n * @description 钱包内交易（目前只允许操作投资者的项目钱包） buildResAnyTyped\n * @url /admin/order/transfer/inside\n */\nexport type OAdminOrderTransferInsidePost = {\n}",
        "resValueCode": "/**\n * @description 钱包内交易（目前只允许操作投资者的项目钱包） buildResAnyTyped\n * @url /admin/order/transfer/inside\n */\nexport const OAdminOrderTransferInsidePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/transfer/inside/type/list",
        "url": "/admin/order/transfer/inside/type/list",
        "pureUrl": "/admin/order/transfer/inside/type/list",
        "pathReqUrl": "/admin/order/transfer/inside/type/list",
        "method": "get",
        "apiName": "获取钱包内交易资金类型列表",
        "key": "AdminOrderTransferInsideTypeListGet",
        "fnName": "adminOrderTransferInsideTypeListGet",
        "requestBaseName": "IAdminOrderTransferInsideTypeListGet",
        "requestName": [
            "IAdminOrderTransferInsideTypeListGet"
        ],
        "responseBaseName": "OAdminOrderTransferInsideTypeListGet",
        "responseName": [
            "OAdminOrderTransferInsideTypeListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminOrderTransferInsideTypeListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取钱包内交易资金类型列表 buildFnArrayCode\n * \n * @return Promise<OAdminOrderTransferInsideTypeListGetItem>\n */\nexport const adminOrderTransferInsideTypeListGet = async (params?: IAdminOrderTransferInsideTypeListGet) => {\n\treturn get<OAdminOrderTransferInsideTypeListGetItem[]>(`/admin/order/transfer/inside/type/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取钱包内交易资金类型列表 buildReqGetOrPostTyped\n * @url /admin/order/transfer/inside/type/list\n */\nexport interface IAdminOrderTransferInsideTypeListGet{\n}",
        "deleteResponseName": "OAdminOrderTransferInsideTypeListGet",
        "resCode": "/**\n * @description 获取钱包内交易资金类型列表 buildResArrayTyped\n * @url /admin/order/transfer/inside/type/list\n */\nexport type OAdminOrderTransferInsideTypeListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 获取钱包内交易资金类型列表 buildResArrayTyped\n * @url /admin/order/transfer/inside/type/list\n */\nexport const OAdminOrderTransferInsideTypeListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/wallet/deposit/list",
        "url": "/admin/order/wallet/deposit/list",
        "pureUrl": "/admin/order/wallet/deposit/list",
        "pathReqUrl": "/admin/order/wallet/deposit/list",
        "method": "get",
        "apiName": "获取订单投资记录",
        "key": "AdminOrderWalletDepositListGet",
        "fnName": "adminOrderWalletDepositListGet",
        "requestBaseName": "IAdminOrderWalletDepositListGet",
        "requestName": [
            "IAdminOrderWalletDepositListGet"
        ],
        "responseBaseName": "OAdminOrderWalletDepositListGet",
        "responseName": [
            "OAdminOrderWalletDepositListGet"
        ],
        "responseValueName": [
            "OAdminOrderWalletDepositListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "订单号",
                    "type": "string",
                    "id": "BM1vBF1UlK",
                    "enable": true,
                    "name": "orderNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "dqaCbBdqei",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NmHAoDJwkx",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "id": "DnlwnkLVxK",
                    "enable": true,
                    "name": "depositNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取订单投资记录 buildFnGetOrPostCode\n * \n * @param {string} params.orderNo 可选: 订单号\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.depositNo 可选: 流水号\n * @return Promise<OAdminOrderWalletDepositListGet>\n */\nexport const adminOrderWalletDepositListGet = async (params?: IAdminOrderWalletDepositListGet) => {\n\treturn get<OAdminOrderWalletDepositListGet>(`/admin/order/wallet/deposit/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取订单投资记录 buildReqGetOrPostTyped\n * @url /admin/order/wallet/deposit/list\n */\nexport interface IAdminOrderWalletDepositListGet{\n\torderNo?: string; // 订单号\n\tpageNum?: number;\n\tpageSize?: number;\n\tdepositNo?: string; // 流水号\n}",
        "resCode": "/**\n * @description 获取订单投资记录 buildResAnyTyped\n * @url /admin/order/wallet/deposit/list\n */\nexport type OAdminOrderWalletDepositListGet = {\n}",
        "resValueCode": "/**\n * @description 获取订单投资记录 buildResAnyTyped\n * @url /admin/order/wallet/deposit/list\n */\nexport const OAdminOrderWalletDepositListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/wallet",
        "url": "/admin/order/wallet",
        "pureUrl": "/admin/order/wallet",
        "pathReqUrl": "/admin/order/wallet",
        "method": "get",
        "apiName": "获取项目钱包详情",
        "key": "AdminOrderWalletGet",
        "fnName": "adminOrderWalletGet",
        "requestBaseName": "IAdminOrderWalletGet",
        "requestName": [
            "IAdminOrderWalletGet"
        ],
        "responseBaseName": "OAdminOrderWalletGet",
        "responseName": [
            "OAdminOrderWalletGet"
        ],
        "responseValueName": [
            "OAdminOrderWalletGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "RFx6PhQ7uZ",
                    "name": "orderNo",
                    "required": true,
                    "description": "订单编号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "订单关钱包信息 仅在详情返回",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取项目钱包详情 buildFnGetOrPostCode\n * \n * @param {string} params.orderNo 必填: 订单编号\n * @return Promise<OAdminOrderWalletGet>\n */\nexport const adminOrderWalletGet = async (params?: IAdminOrderWalletGet) => {\n\treturn get<OAdminOrderWalletGet>(`/admin/order/wallet`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取项目钱包详情 buildReqGetOrPostTyped\n * @url /admin/order/wallet\n */\nexport interface IAdminOrderWalletGet{\n\torderNo: string; // 订单编号\n}",
        "resCode": "/**\n * @description 获取项目钱包详情 buildResAnyTyped\n * @url /admin/order/wallet\n */\nexport type OAdminOrderWalletGet = {\n}",
        "resValueCode": "/**\n * @description 获取项目钱包详情 buildResAnyTyped\n * @url /admin/order/wallet\n */\nexport const OAdminOrderWalletGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/order/wallet/orderpay/list",
        "url": "/admin/order/wallet/orderpay/list",
        "pureUrl": "/admin/order/wallet/orderpay/list",
        "pathReqUrl": "/admin/order/wallet/orderpay/list",
        "method": "get",
        "apiName": "获取投资者订单支付记录",
        "key": "AdminOrderWalletOrderpayListGet",
        "fnName": "adminOrderWalletOrderpayListGet",
        "requestBaseName": "IAdminOrderWalletOrderpayListGet",
        "requestName": [
            "IAdminOrderWalletOrderpayListGet"
        ],
        "responseBaseName": "OAdminOrderWalletOrderpayListGet",
        "responseName": [
            "OAdminOrderWalletOrderpayListGet"
        ],
        "responseValueName": [
            "OAdminOrderWalletOrderpayListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "订单号",
                    "type": "string",
                    "id": "BM1vBF1UlK",
                    "enable": true,
                    "name": "orderNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "dqaCbBdqei",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NmHAoDJwkx",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "流水号",
                    "type": "string",
                    "id": "DnlwnkLVxK",
                    "enable": true,
                    "name": "payNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取投资者订单支付记录 buildFnGetOrPostCode\n * \n * @param {string} params.orderNo 可选: 订单号\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.payNo 可选: 流水号\n * @return Promise<OAdminOrderWalletOrderpayListGet>\n */\nexport const adminOrderWalletOrderpayListGet = async (params?: IAdminOrderWalletOrderpayListGet) => {\n\treturn get<OAdminOrderWalletOrderpayListGet>(`/admin/order/wallet/orderpay/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取投资者订单支付记录 buildReqGetOrPostTyped\n * @url /admin/order/wallet/orderpay/list\n */\nexport interface IAdminOrderWalletOrderpayListGet{\n\torderNo?: string; // 订单号\n\tpageNum?: number;\n\tpageSize?: number;\n\tpayNo?: string; // 流水号\n}",
        "resCode": "/**\n * @description 获取投资者订单支付记录 buildResAnyTyped\n * @url /admin/order/wallet/orderpay/list\n */\nexport type OAdminOrderWalletOrderpayListGet = {\n}",
        "resValueCode": "/**\n * @description 获取投资者订单支付记录 buildResAnyTyped\n * @url /admin/order/wallet/orderpay/list\n */\nexport const OAdminOrderWalletOrderpayListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/origin/{x}",
        "url": "/admin/origin/{id}",
        "pureUrl": "/admin/origin/{x}",
        "pathReqUrl": "/admin/origin/${id}",
        "method": "get",
        "apiName": "来源详情",
        "key": "AdminOriginIdGet",
        "fnName": "adminOriginIdGet",
        "requestBaseName": "IAdminOriginIdGet",
        "requestName": [
            "IAdminOriginIdGet"
        ],
        "responseBaseName": "OAdminOriginIdGet",
        "responseName": [
            "OAdminOriginIdGet"
        ],
        "responseValueName": [
            "OAdminOriginIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 来源详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminOriginIdGet>\n */\nexport const adminOriginIdGet = async (id: number) => {\n\treturn get<OAdminOriginIdGet>(`/admin/origin/${id}`)\n}",
        "reqCode": "/**\n * @description 来源详情 buildReqGetOrPostTyped\n * @url /admin/origin/{id}\n */\nexport interface IAdminOriginIdGet{\n}",
        "resCode": "/**\n * @description 来源详情 buildResAnyTyped\n * @url /admin/origin/{x}\n */\nexport type OAdminOriginIdGet = {\n}",
        "resValueCode": "/**\n * @description 来源详情 buildResAnyTyped\n * @url /admin/origin/{x}\n */\nexport const OAdminOriginIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/origin/list",
        "url": "/admin/origin/list",
        "pureUrl": "/admin/origin/list",
        "pathReqUrl": "/admin/origin/list",
        "method": "get",
        "apiName": "来源列表",
        "key": "AdminOriginListGet",
        "fnName": "adminOriginListGet",
        "requestBaseName": "IAdminOriginListGet",
        "requestName": [
            "IAdminOriginListGet"
        ],
        "responseBaseName": "OAdminOriginListGet",
        "responseName": [
            "OAdminOriginListGet"
        ],
        "responseValueName": [
            "OAdminOriginListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "MxYFC4OBql",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "XTK6BnvsNt",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "EQ054g4HmU",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 来源列表 buildFnGetOrPostCode\n * \n * @param {string} params.name 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminOriginListGet>\n */\nexport const adminOriginListGet = async (params?: IAdminOriginListGet) => {\n\treturn get<OAdminOriginListGet>(`/admin/origin/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 来源列表 buildReqGetOrPostTyped\n * @url /admin/origin/list\n */\nexport interface IAdminOriginListGet{\n\tname?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 来源列表 buildResAnyTyped\n * @url /admin/origin/list\n */\nexport type OAdminOriginListGet = {\n}",
        "resValueCode": "/**\n * @description 来源列表 buildResAnyTyped\n * @url /admin/origin/list\n */\nexport const OAdminOriginListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/origin",
        "url": "/admin/origin",
        "pureUrl": "/admin/origin",
        "pathReqUrl": "/admin/origin",
        "method": "post",
        "apiName": "添加来源",
        "key": "AdminOriginPost",
        "fnName": "adminOriginPost",
        "requestBaseName": "IAdminOriginPost",
        "requestName": [
            "IAdminOriginPost"
        ],
        "responseBaseName": "OAdminOriginPost",
        "responseName": [
            "OAdminOriginPost"
        ],
        "responseValueName": [
            "OAdminOriginPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "seaCategory",
                    "type": "string",
                    "description": "公海类型 ['baidu', 'meiqia', 'btm',wechat']",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "seaId",
                    "type": "number",
                    "description": "公海ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加来源 buildFnGetOrPostCode\n * \n * @param {string} params.name 必填: 名称\n * @param {string} params.seaCategory 必填: 公海类型 ['baidu', 'meiqia', 'btm',wechat']\n * @param {number} params.seaId 必填: 公海ID\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @return Promise<OAdminOriginPost>\n */\nexport const adminOriginPost = async (params?: IAdminOriginPost) => {\n\treturn post<OAdminOriginPost>(`/admin/origin`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加来源 buildReqGetOrPostTyped\n * @url /admin/origin\n */\nexport interface IAdminOriginPost{\n\tname: string; // 名称\n\tseaCategory: string; // 公海类型 ['baidu', 'meiqia', 'btm',wechat']\n\tseaId: number; // 公海ID\n\tstatus: number; // 状态 0-正常 1-禁用\n}",
        "resCode": "/**\n * @description 添加来源 buildResAnyTyped\n * @url /admin/origin\n */\nexport type OAdminOriginPost = {\n}",
        "resValueCode": "/**\n * @description 添加来源 buildResAnyTyped\n * @url /admin/origin\n */\nexport const OAdminOriginPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/origin",
        "url": "/admin/origin",
        "pureUrl": "/admin/origin",
        "pathReqUrl": "/admin/origin",
        "method": "put",
        "apiName": "编辑来源",
        "key": "AdminOriginPut",
        "fnName": "adminOriginPut",
        "requestBaseName": "IAdminOriginPut",
        "requestName": [
            "IAdminOriginPut"
        ],
        "responseBaseName": "OAdminOriginPut",
        "responseName": [
            "OAdminOriginPut"
        ],
        "responseValueName": [
            "OAdminOriginPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑来源 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: ID\n * @param {string} params.name 必填: 名称\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @return Promise<OAdminOriginPut>\n */\nexport const adminOriginPut = async (params?: IAdminOriginPut) => {\n\treturn put<OAdminOriginPut>(`/admin/origin`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑来源 buildReqGetOrPostTyped\n * @url /admin/origin\n */\nexport interface IAdminOriginPut{\n\tid: number; // ID\n\tname: string; // 名称\n\tstatus: number; // 状态 0-正常 1-禁用\n}",
        "resCode": "/**\n * @description 编辑来源 buildResAnyTyped\n * @url /admin/origin\n */\nexport type OAdminOriginPut = {\n}",
        "resValueCode": "/**\n * @description 编辑来源 buildResAnyTyped\n * @url /admin/origin\n */\nexport const OAdminOriginPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/bind/flow",
        "url": "/admin/product/bind/flow",
        "pureUrl": "/admin/product/bind/flow",
        "pathReqUrl": "/admin/product/bind/flow",
        "method": "post",
        "apiName": "产品绑定/换绑流程",
        "key": "AdminProductBindFlowPost",
        "fnName": "adminProductBindFlowPost",
        "requestBaseName": "IAdminProductBindFlowPost",
        "requestName": [
            "IAdminProductBindFlowPost"
        ],
        "responseBaseName": "OAdminProductBindFlowPost",
        "responseName": [
            "OAdminProductBindFlowPost"
        ],
        "responseValueName": [
            "OAdminProductBindFlowPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "cTJsU9nvtz",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "流程ID",
                    "type": "number",
                    "id": "IFy5vL3rKM",
                    "enable": true,
                    "name": "flowId",
                    "sampleValue": "",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 产品绑定/换绑流程 buildFnGetOrPostCode\n * \n * @param {number} params.productId 可选: 产品ID\n * @param {number} params.flowId 可选: 流程ID\n * @return Promise<OAdminProductBindFlowPost>\n */\nexport const adminProductBindFlowPost = async (params?: IAdminProductBindFlowPost) => {\n\treturn post<OAdminProductBindFlowPost>(`/admin/product/bind/flow`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 产品绑定/换绑流程 buildReqGetOrPostTyped\n * @url /admin/product/bind/flow\n */\nexport interface IAdminProductBindFlowPost{\n\tproductId?: number; // 产品ID\n\tflowId?: number; // 流程ID\n}",
        "resCode": "/**\n * @description 产品绑定/换绑流程 buildResAnyTyped\n * @url /admin/product/bind/flow\n */\nexport type OAdminProductBindFlowPost = {\n}",
        "resValueCode": "/**\n * @description 产品绑定/换绑流程 buildResAnyTyped\n * @url /admin/product/bind/flow\n */\nexport const OAdminProductBindFlowPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product/content",
        "url": "/admin/product/content",
        "pureUrl": "/admin/product/content",
        "pathReqUrl": "/admin/product/content",
        "method": "put",
        "apiName": "编辑产品详情内容",
        "key": "AdminProductContentPut",
        "fnName": "adminProductContentPut",
        "requestBaseName": "IAdminProductContentPut",
        "requestName": [
            "IAdminProductContentPut"
        ],
        "responseBaseName": "OAdminProductContentPut",
        "responseName": [
            "OAdminProductContentPut"
        ],
        "responseValueName": [
            "OAdminProductContentPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "description": "产品详情内容",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑产品详情内容 buildFnGetOrPostCode\n * \n * @param {string} params.content 必填: 产品详情内容\n * @param {number} params.id 必填: 产品ID\n * @return Promise<OAdminProductContentPut>\n */\nexport const adminProductContentPut = async (params?: IAdminProductContentPut) => {\n\treturn put<OAdminProductContentPut>(`/admin/product/content`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑产品详情内容 buildReqGetOrPostTyped\n * @url /admin/product/content\n */\nexport interface IAdminProductContentPut{\n\tcontent: string; // 产品详情内容\n\tid: number; // 产品ID\n}",
        "resCode": "/**\n * @description 编辑产品详情内容 buildResAnyTyped\n * @url /admin/product/content\n */\nexport type OAdminProductContentPut = {\n}",
        "resValueCode": "/**\n * @description 编辑产品详情内容 buildResAnyTyped\n * @url /admin/product/content\n */\nexport const OAdminProductContentPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/flow/alllist",
        "url": "/admin/product/flow/alllist",
        "pureUrl": "/admin/product/flow/alllist",
        "pathReqUrl": "/admin/product/flow/alllist",
        "method": "get",
        "apiName": "获取产品下所有流程",
        "key": "AdminProductFlowAlllistGet",
        "fnName": "adminProductFlowAlllistGet",
        "requestBaseName": "IAdminProductFlowAlllistGet",
        "requestName": [
            "IAdminProductFlowAlllistGet"
        ],
        "responseBaseName": "OAdminProductFlowAlllistGet",
        "responseName": [
            "OAdminProductFlowAlllistGet"
        ],
        "responseValueName": [
            "OAdminProductFlowAlllistGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "YT8u8yBAgt",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取产品下所有流程 buildFnGetOrPostCode\n * \n * @param {number} params.productId 可选: 产品ID\n * @return Promise<OAdminProductFlowAlllistGet>\n */\nexport const adminProductFlowAlllistGet = async (params?: IAdminProductFlowAlllistGet) => {\n\treturn get<OAdminProductFlowAlllistGet>(`/admin/product/flow/alllist`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取产品下所有流程 buildReqGetOrPostTyped\n * @url /admin/product/flow/alllist\n */\nexport interface IAdminProductFlowAlllistGet{\n\tproductId?: number; // 产品ID\n}",
        "resCode": "/**\n * @description 获取产品下所有流程 buildResAnyTyped\n * @url /admin/product/flow/alllist\n */\nexport type OAdminProductFlowAlllistGet = {\n}",
        "resValueCode": "/**\n * @description 获取产品下所有流程 buildResAnyTyped\n * @url /admin/product/flow/alllist\n */\nexport const OAdminProductFlowAlllistGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/flow/list",
        "url": "/admin/product/flow/list",
        "pureUrl": "/admin/product/flow/list",
        "pathReqUrl": "/admin/product/flow/list",
        "method": "get",
        "apiName": "获取产品下的流程",
        "key": "AdminProductFlowListGet",
        "fnName": "adminProductFlowListGet",
        "requestBaseName": "IAdminProductFlowListGet",
        "requestName": [
            "IAdminProductFlowListGet"
        ],
        "responseBaseName": "OAdminProductFlowListGet",
        "responseName": [
            "OAdminProductFlowListGet"
        ],
        "responseValueName": [
            "OAdminProductFlowListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "YT8u8yBAgt",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取产品下的流程 buildFnGetOrPostCode\n * \n * @param {number} params.productId 可选: 产品ID\n * @return Promise<OAdminProductFlowListGet>\n */\nexport const adminProductFlowListGet = async (params?: IAdminProductFlowListGet) => {\n\treturn get<OAdminProductFlowListGet>(`/admin/product/flow/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取产品下的流程 buildReqGetOrPostTyped\n * @url /admin/product/flow/list\n */\nexport interface IAdminProductFlowListGet{\n\tproductId?: number; // 产品ID\n}",
        "resCode": "/**\n * @description 获取产品下的流程 buildResAnyTyped\n * @url /admin/product/flow/list\n */\nexport type OAdminProductFlowListGet = {\n}",
        "resValueCode": "/**\n * @description 获取产品下的流程 buildResAnyTyped\n * @url /admin/product/flow/list\n */\nexport const OAdminProductFlowListGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/product/{x}",
        "url": "/admin/product/{id}",
        "pureUrl": "/admin/product/{x}",
        "pathReqUrl": "/admin/product/${id}",
        "method": "delete",
        "apiName": "删除产品",
        "key": "AdminProductIdDelete",
        "fnName": "adminProductIdDelete",
        "requestBaseName": "IAdminProductIdDelete",
        "requestName": [
            "IAdminProductIdDelete"
        ],
        "responseBaseName": "OAdminProductIdDelete",
        "responseName": [
            "OAdminProductIdDelete"
        ],
        "responseValueName": [
            "OAdminProductIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除产品 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminProductIdDelete>\n */\nexport const adminProductIdDelete = async (id: number) => {\n\treturn del<OAdminProductIdDelete>(`/admin/product/${id}`)\n}",
        "reqCode": "/**\n * @description 删除产品 buildReqGetOrPostTyped\n * @url /admin/product/{id}\n */\nexport interface IAdminProductIdDelete{\n}",
        "resCode": "/**\n * @description 删除产品 buildResAnyTyped\n * @url /admin/product/{x}\n */\nexport type OAdminProductIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除产品 buildResAnyTyped\n * @url /admin/product/{x}\n */\nexport const OAdminProductIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/{x}",
        "url": "/admin/product/{id}",
        "pureUrl": "/admin/product/{x}",
        "pathReqUrl": "/admin/product/${id}",
        "method": "get",
        "apiName": "获取产品详情",
        "key": "AdminProductIdGet",
        "fnName": "adminProductIdGet",
        "requestBaseName": "IAdminProductIdGet",
        "requestName": [
            "IAdminProductIdGet"
        ],
        "responseBaseName": "OAdminProductIdGet",
        "responseName": [
            "OAdminProductIdGet"
        ],
        "responseValueName": [
            "OAdminProductIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "id",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取产品详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminProductIdGet>\n */\nexport const adminProductIdGet = async (id: number) => {\n\treturn get<OAdminProductIdGet>(`/admin/product/${id}`)\n}",
        "reqCode": "/**\n * @description 获取产品详情 buildReqGetOrPostTyped\n * @url /admin/product/{id}\n */\nexport interface IAdminProductIdGet{\n}",
        "resCode": "/**\n * @description 获取产品详情 buildResAnyTyped\n * @url /admin/product/{x}\n */\nexport type OAdminProductIdGet = {\n}",
        "resValueCode": "/**\n * @description 获取产品详情 buildResAnyTyped\n * @url /admin/product/{x}\n */\nexport const OAdminProductIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/list",
        "url": "/admin/product/list",
        "pureUrl": "/admin/product/list",
        "pathReqUrl": "/admin/product/list",
        "method": "get",
        "apiName": "查询产品列表",
        "key": "AdminProductListGet",
        "fnName": "adminProductListGet",
        "requestBaseName": "IAdminProductListGet",
        "requestName": [
            "IAdminProductListGet"
        ],
        "responseBaseName": "OAdminProductListGet",
        "responseName": [
            "OAdminProductListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "rMzPa5r3cM",
                    "name": "type",
                    "required": false,
                    "description": "产品类型",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品名称",
                    "type": "string",
                    "id": "s7l6n8NNmX",
                    "enable": true,
                    "name": "productName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "绑定流程",
                    "type": "number",
                    "id": "jGRT5eICDn",
                    "enable": true,
                    "name": "flowId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "创建人",
                    "type": "string",
                    "id": "0GhnWb5pLU",
                    "enable": true,
                    "name": "createBy",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "yamvsrFr6P",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "tAGBA8mdyz",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "6HU3fgf7O8",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "基金ID",
                    "type": "number",
                    "id": "51f7PDp97i",
                    "enable": true,
                    "name": "fundId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminProductListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询产品列表 buildFnArrayCode\n * \n * @param {string} params.type 可选: 产品类型\n * @param {string} params.productName 可选: 产品名称\n * @param {number} params.flowId 可选: 绑定流程\n * @param {string} params.createBy 可选: 创建人\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.productId 可选: 产品ID\n * @param {number} params.fundId 可选: 基金ID}\n * @return Promise<OAdminProductListGetItem>\n */\nexport const adminProductListGet = async (params?: IAdminProductListGet) => {\n\treturn get<OAdminProductListGetItem[]>(`/admin/product/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品列表 buildReqGetOrPostTyped\n * @url /admin/product/list\n */\nexport interface IAdminProductListGet{\n\ttype?: string; // 产品类型\n\tproductName?: string; // 产品名称\n\tflowId?: number; // 绑定流程\n\tcreateBy?: string; // 创建人\n\tpageNum?: number;\n\tpageSize?: number;\n\tproductId?: number; // 产品ID\n\tfundId?: number; // 基金ID\n}",
        "deleteResponseName": "OAdminProductListGet",
        "resCode": "/**\n * @description 查询产品列表 buildResArrayTyped\n * @url /admin/product/list\n */\nexport type OAdminProductListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询产品列表 buildResArrayTyped\n * @url /admin/product/list\n */\nexport const OAdminProductListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product",
        "url": "/admin/product",
        "pureUrl": "/admin/product",
        "pathReqUrl": "/admin/product",
        "method": "post",
        "apiName": "新增产品",
        "key": "AdminProductPost",
        "fnName": "adminProductPost",
        "requestBaseName": "IAdminProductPost",
        "requestName": [
            "IAdminProductPost"
        ],
        "responseBaseName": "OAdminProductPost",
        "responseName": [
            "OAdminProductPost"
        ],
        "responseValueName": [
            "OAdminProductPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "actualCompletionTime",
                    "type": "string",
                    "description": "实际竣工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "actualWorkTime",
                    "type": "string",
                    "description": "实际开工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "address",
                    "type": "string",
                    "description": "项目位置",
                    "oldType": "string"
                },
                {
                    "name": "borrowerExtensionNum",
                    "type": "number",
                    "description": "借款方延期数量",
                    "oldType": "number"
                },
                {
                    "name": "borrowerExtensionRights",
                    "type": "number",
                    "description": "借款方延期权 0-否 1-是",
                    "oldType": "number"
                },
                {
                    "name": "coverImg",
                    "type": "string",
                    "description": "图片链接",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "createJobNum",
                    "type": "number",
                    "description": "创造就业总数",
                    "oldType": "number"
                },
                {
                    "name": "designer",
                    "type": "string",
                    "description": "项目设计者",
                    "oldType": "string"
                },
                {
                    "name": "estimatedCompletionTime",
                    "type": "string",
                    "description": "预计竣工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "estimatedWorkTime",
                    "type": "string",
                    "description": "预计开工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "fundCompany",
                    "type": "string",
                    "description": "发行方公司",
                    "oldType": "string"
                },
                {
                    "name": "fundId",
                    "type": "number",
                    "description": "基金ID",
                    "oldType": "number"
                },
                {
                    "name": "fundStatus",
                    "type": "number",
                    "description": "发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款",
                    "oldType": "number"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "oldType": "number"
                },
                {
                    "name": "immigrantNum",
                    "type": "number",
                    "description": "移民名额总数",
                    "oldType": "number"
                },
                {
                    "name": "immigrantStatus",
                    "type": "number",
                    "description": "移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "introduction",
                    "type": "string",
                    "description": "项目介绍",
                    "oldType": "string"
                },
                {
                    "name": "investYears",
                    "type": "number",
                    "description": "投资年限",
                    "oldType": "number"
                },
                {
                    "name": "law",
                    "type": "number",
                    "description": "法律 1新法 0老法",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "mobileLinkUrl",
                    "type": "string",
                    "description": "移动端详情页链接",
                    "oldType": "string"
                },
                {
                    "name": "pcLinkUrl",
                    "type": "string",
                    "description": "pc详情页链接",
                    "oldType": "string"
                },
                {
                    "name": "perInvestAmount",
                    "type": "number",
                    "description": "每份投资额 单位美金",
                    "oldType": "number"
                },
                {
                    "name": "productName",
                    "type": "string",
                    "description": "产品名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "progressStatus",
                    "type": "number",
                    "description": "建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成",
                    "oldType": "number"
                },
                {
                    "name": "projectStatus",
                    "type": "number",
                    "description": "项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止",
                    "oldType": "number"
                },
                {
                    "name": "raiseAmount",
                    "type": "number",
                    "description": "募集总额",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "regionCategory",
                    "type": "string",
                    "description": "地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区",
                    "oldType": "string"
                },
                {
                    "name": "sellBeginTime",
                    "type": "string",
                    "description": "发售开始时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "sellEndTime",
                    "type": "string",
                    "description": "发售结束时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "sellNum",
                    "type": "number",
                    "description": "最大发售额",
                    "oldType": "number"
                },
                {
                    "name": "sellStatus",
                    "type": "number",
                    "description": "售罄状态 0-未售完 1已售完",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "showStatus",
                    "type": "number",
                    "description": "显示状态 0-正常 1-隐藏",
                    "oldType": "number"
                },
                {
                    "name": "sort",
                    "type": "number",
                    "description": "排序 升序",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "产品类型详见productType枚举 目前有:EB-5 ，GENERAL",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 新增产品 buildFnGetOrPostCode\n * \n * @param {string} params.actualCompletionTime 可选: 实际竣工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.actualWorkTime 可选: 实际开工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.address 可选: 项目位置\n * @param {number} params.borrowerExtensionNum 可选: 借款方延期数量\n * @param {number} params.borrowerExtensionRights 可选: 借款方延期权 0-否 1-是\n * @param {string} params.coverImg 必填: 图片链接\n * @param {number} params.createJobNum 可选: 创造就业总数\n * @param {string} params.designer 可选: 项目设计者\n * @param {string} params.estimatedCompletionTime 可选: 预计竣工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.estimatedWorkTime 可选: 预计开工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.fundCompany 可选: 发行方公司\n * @param {number} params.fundId 可选: 基金ID\n * @param {number} params.fundStatus 可选: 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款\n * @param {number} params.id 可选: id\n * @param {number} params.immigrantNum 可选: 移民名额总数\n * @param {number} params.immigrantStatus 必填: 移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中\n * @param {string} params.introduction 可选: 项目介绍\n * @param {number} params.investYears 可选: 投资年限\n * @param {number} params.law 必填: 法律 1新法 0老法\n * @param {string} params.mobileLinkUrl 可选: 移动端详情页链接\n * @param {string} params.pcLinkUrl 可选: pc详情页链接\n * @param {number} params.perInvestAmount 可选: 每份投资额 单位美金\n * @param {string} params.productName 必填: 产品名称\n * @param {number} params.progressStatus 可选: 建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n * @param {number} params.projectStatus 可选: 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n * @param {number} params.raiseAmount 必填: 募集总额\n * @param {string} params.regionCategory 可选: 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n * @param {string} params.sellBeginTime 可选: 发售开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.sellEndTime 可选: 发售结束时间 yyyy-MM-dd HH:mm:ss\n * @param {number} params.sellNum 可选: 最大发售额\n * @param {number} params.sellStatus 必填: 售罄状态 0-未售完 1已售完\n * @param {number} params.showStatus 可选: 显示状态 0-正常 1-隐藏\n * @param {number} params.sort 必填: 排序 升序\n * @param {string} params.type 可选: 产品类型详见productType枚举 目前有:EB-5 ，GENERAL\n * @return Promise<OAdminProductPost>\n */\nexport const adminProductPost = async (params?: IAdminProductPost) => {\n\treturn post<OAdminProductPost>(`/admin/product`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增产品 buildReqGetOrPostTyped\n * @url /admin/product\n */\nexport interface IAdminProductPost{\n\tactualCompletionTime?: string; // 实际竣工时间 yyyy-MM-dd HH:mm:ss\n\tactualWorkTime?: string; // 实际开工时间 yyyy-MM-dd HH:mm:ss\n\taddress?: string; // 项目位置\n\tborrowerExtensionNum?: number; // 借款方延期数量\n\tborrowerExtensionRights?: number; // 借款方延期权 0-否 1-是\n\tcoverImg: string; // 图片链接\n\tcreateJobNum?: number; // 创造就业总数\n\tdesigner?: string; // 项目设计者\n\testimatedCompletionTime?: string; // 预计竣工时间 yyyy-MM-dd HH:mm:ss\n\testimatedWorkTime?: string; // 预计开工时间 yyyy-MM-dd HH:mm:ss\n\tfundCompany?: string; // 发行方公司\n\tfundId?: number; // 基金ID\n\tfundStatus?: number; // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款\n\tid?: number; // id\n\timmigrantNum?: number; // 移民名额总数\n\timmigrantStatus: number; // 移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中\n\tintroduction?: string; // 项目介绍\n\tinvestYears?: number; // 投资年限\n\tlaw: number; // 法律 1新法 0老法\n\tmobileLinkUrl?: string; // 移动端详情页链接\n\tpcLinkUrl?: string; // pc详情页链接\n\tperInvestAmount?: number; // 每份投资额 单位美金\n\tproductName: string; // 产品名称\n\tprogressStatus?: number; // 建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus?: number; // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\traiseAmount: number; // 募集总额\n\tregionCategory?: string; // 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n\tsellBeginTime?: string; // 发售开始时间 yyyy-MM-dd HH:mm:ss\n\tsellEndTime?: string; // 发售结束时间 yyyy-MM-dd HH:mm:ss\n\tsellNum?: number; // 最大发售额\n\tsellStatus: number; // 售罄状态 0-未售完 1已售完\n\tshowStatus?: number; // 显示状态 0-正常 1-隐藏\n\tsort: number; // 排序 升序\n\ttype?: string; // 产品类型详见productType枚举 目前有:EB-5 ，GENERAL\n}",
        "resCode": "/**\n * @description 新增产品 buildResAnyTyped\n * @url /admin/product\n */\nexport type OAdminProductPost = {\n}",
        "resValueCode": "/**\n * @description 新增产品 buildResAnyTyped\n * @url /admin/product\n */\nexport const OAdminProductPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product",
        "url": "/admin/product",
        "pureUrl": "/admin/product",
        "pathReqUrl": "/admin/product",
        "method": "put",
        "apiName": "修改产品",
        "key": "AdminProductPut",
        "fnName": "adminProductPut",
        "requestBaseName": "IAdminProductPut",
        "requestName": [
            "IAdminProductPut"
        ],
        "responseBaseName": "OAdminProductPut",
        "responseName": [
            "OAdminProductPut"
        ],
        "responseValueName": [
            "OAdminProductPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "actualCompletionTime",
                    "type": "string",
                    "description": "实际竣工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "actualWorkTime",
                    "type": "string",
                    "description": "实际开工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "address",
                    "type": "string",
                    "description": "项目位置",
                    "oldType": "string"
                },
                {
                    "name": "borrowerExtensionNum",
                    "type": "number",
                    "description": "借款方延期数量",
                    "oldType": "number"
                },
                {
                    "name": "borrowerExtensionRights",
                    "type": "number",
                    "description": "借款方延期权 0-否 1-是",
                    "oldType": "number"
                },
                {
                    "name": "coverImg",
                    "type": "string",
                    "description": "图片链接",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "createJobNum",
                    "type": "number",
                    "description": "创造就业总数",
                    "oldType": "number"
                },
                {
                    "name": "designer",
                    "type": "string",
                    "description": "项目设计者",
                    "oldType": "string"
                },
                {
                    "name": "estimatedCompletionTime",
                    "type": "string",
                    "description": "预计竣工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "estimatedWorkTime",
                    "type": "string",
                    "description": "预计开工时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "fundCompany",
                    "type": "string",
                    "description": "发行方公司",
                    "oldType": "string"
                },
                {
                    "name": "fundId",
                    "type": "number",
                    "description": "基金ID",
                    "oldType": "number"
                },
                {
                    "name": "fundStatus",
                    "type": "number",
                    "description": "发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款",
                    "oldType": "number"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "oldType": "number"
                },
                {
                    "name": "immigrantNum",
                    "type": "number",
                    "description": "移民名额总数",
                    "oldType": "number"
                },
                {
                    "name": "immigrantStatus",
                    "type": "number",
                    "description": "移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "introduction",
                    "type": "string",
                    "description": "项目介绍",
                    "oldType": "string"
                },
                {
                    "name": "investYears",
                    "type": "number",
                    "description": "投资年限",
                    "oldType": "number"
                },
                {
                    "name": "law",
                    "type": "number",
                    "description": "法律 1新法 0老法",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "mobileLinkUrl",
                    "type": "string",
                    "description": "移动端详情页链接",
                    "oldType": "string"
                },
                {
                    "name": "pcLinkUrl",
                    "type": "string",
                    "description": "pc详情页链接",
                    "oldType": "string"
                },
                {
                    "name": "perInvestAmount",
                    "type": "number",
                    "description": "每份投资额 单位美金",
                    "oldType": "number"
                },
                {
                    "name": "productName",
                    "type": "string",
                    "description": "产品名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "progressStatus",
                    "type": "number",
                    "description": "建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成",
                    "oldType": "number"
                },
                {
                    "name": "projectStatus",
                    "type": "number",
                    "description": "项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止",
                    "oldType": "number"
                },
                {
                    "name": "raiseAmount",
                    "type": "number",
                    "description": "募集总额",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "regionCategory",
                    "type": "string",
                    "description": "地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区",
                    "oldType": "string"
                },
                {
                    "name": "sellBeginTime",
                    "type": "string",
                    "description": "发售开始时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "sellEndTime",
                    "type": "string",
                    "description": "发售结束时间 yyyy-MM-dd HH:mm:ss",
                    "oldType": "string"
                },
                {
                    "name": "sellNum",
                    "type": "number",
                    "description": "最大发售额",
                    "oldType": "number"
                },
                {
                    "name": "sellStatus",
                    "type": "number",
                    "description": "售罄状态 0-未售完 1已售完",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "showStatus",
                    "type": "number",
                    "description": "显示状态 0-正常 1-隐藏",
                    "oldType": "number"
                },
                {
                    "name": "sort",
                    "type": "number",
                    "description": "排序 升序",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "产品类型详见productType枚举 目前有:EB-5 ，GENERAL",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改产品 buildFnGetOrPostCode\n * \n * @param {string} params.actualCompletionTime 可选: 实际竣工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.actualWorkTime 可选: 实际开工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.address 可选: 项目位置\n * @param {number} params.borrowerExtensionNum 可选: 借款方延期数量\n * @param {number} params.borrowerExtensionRights 可选: 借款方延期权 0-否 1-是\n * @param {string} params.coverImg 必填: 图片链接\n * @param {number} params.createJobNum 可选: 创造就业总数\n * @param {string} params.designer 可选: 项目设计者\n * @param {string} params.estimatedCompletionTime 可选: 预计竣工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.estimatedWorkTime 可选: 预计开工时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.fundCompany 可选: 发行方公司\n * @param {number} params.fundId 可选: 基金ID\n * @param {number} params.fundStatus 可选: 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款\n * @param {number} params.id 可选: id\n * @param {number} params.immigrantNum 可选: 移民名额总数\n * @param {number} params.immigrantStatus 必填: 移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中\n * @param {string} params.introduction 可选: 项目介绍\n * @param {number} params.investYears 可选: 投资年限\n * @param {number} params.law 必填: 法律 1新法 0老法\n * @param {string} params.mobileLinkUrl 可选: 移动端详情页链接\n * @param {string} params.pcLinkUrl 可选: pc详情页链接\n * @param {number} params.perInvestAmount 可选: 每份投资额 单位美金\n * @param {string} params.productName 必填: 产品名称\n * @param {number} params.progressStatus 可选: 建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n * @param {number} params.projectStatus 可选: 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n * @param {number} params.raiseAmount 必填: 募集总额\n * @param {string} params.regionCategory 可选: 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n * @param {string} params.sellBeginTime 可选: 发售开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.sellEndTime 可选: 发售结束时间 yyyy-MM-dd HH:mm:ss\n * @param {number} params.sellNum 可选: 最大发售额\n * @param {number} params.sellStatus 必填: 售罄状态 0-未售完 1已售完\n * @param {number} params.showStatus 可选: 显示状态 0-正常 1-隐藏\n * @param {number} params.sort 必填: 排序 升序\n * @param {string} params.type 可选: 产品类型详见productType枚举 目前有:EB-5 ，GENERAL\n * @return Promise<OAdminProductPut>\n */\nexport const adminProductPut = async (params?: IAdminProductPut) => {\n\treturn put<OAdminProductPut>(`/admin/product`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品 buildReqGetOrPostTyped\n * @url /admin/product\n */\nexport interface IAdminProductPut{\n\tactualCompletionTime?: string; // 实际竣工时间 yyyy-MM-dd HH:mm:ss\n\tactualWorkTime?: string; // 实际开工时间 yyyy-MM-dd HH:mm:ss\n\taddress?: string; // 项目位置\n\tborrowerExtensionNum?: number; // 借款方延期数量\n\tborrowerExtensionRights?: number; // 借款方延期权 0-否 1-是\n\tcoverImg: string; // 图片链接\n\tcreateJobNum?: number; // 创造就业总数\n\tdesigner?: string; // 项目设计者\n\testimatedCompletionTime?: string; // 预计竣工时间 yyyy-MM-dd HH:mm:ss\n\testimatedWorkTime?: string; // 预计开工时间 yyyy-MM-dd HH:mm:ss\n\tfundCompany?: string; // 发行方公司\n\tfundId?: number; // 基金ID\n\tfundStatus?: number; // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕 4-已经还款和二投 5-投资中 6-二投中 7-准备还款\n\tid?: number; // id\n\timmigrantNum?: number; // 移民名额总数\n\timmigrantStatus: number; // 移民状态 0-暂无状态 1-I-526审批中 2-I-526已批准 3-I-829审批中\n\tintroduction?: string; // 项目介绍\n\tinvestYears?: number; // 投资年限\n\tlaw: number; // 法律 1新法 0老法\n\tmobileLinkUrl?: string; // 移动端详情页链接\n\tpcLinkUrl?: string; // pc详情页链接\n\tperInvestAmount?: number; // 每份投资额 单位美金\n\tproductName: string; // 产品名称\n\tprogressStatus?: number; // 建设进度状态 1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus?: number; // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\traiseAmount: number; // 募集总额\n\tregionCategory?: string; // 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n\tsellBeginTime?: string; // 发售开始时间 yyyy-MM-dd HH:mm:ss\n\tsellEndTime?: string; // 发售结束时间 yyyy-MM-dd HH:mm:ss\n\tsellNum?: number; // 最大发售额\n\tsellStatus: number; // 售罄状态 0-未售完 1已售完\n\tshowStatus?: number; // 显示状态 0-正常 1-隐藏\n\tsort: number; // 排序 升序\n\ttype?: string; // 产品类型详见productType枚举 目前有:EB-5 ，GENERAL\n}",
        "resCode": "/**\n * @description 修改产品 buildResAnyTyped\n * @url /admin/product\n */\nexport type OAdminProductPut = {\n}",
        "resValueCode": "/**\n * @description 修改产品 buildResAnyTyped\n * @url /admin/product\n */\nexport const OAdminProductPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/recycle/list",
        "url": "/admin/product/recycle/list",
        "pureUrl": "/admin/product/recycle/list",
        "pathReqUrl": "/admin/product/recycle/list",
        "method": "get",
        "apiName": "查询删除后的产品列表 ",
        "key": "AdminProductRecycleListGet",
        "fnName": "adminProductRecycleListGet",
        "requestBaseName": "IAdminProductRecycleListGet",
        "requestName": [
            "IAdminProductRecycleListGet"
        ],
        "responseBaseName": "OAdminProductRecycleListGet",
        "responseName": [
            "OAdminProductRecycleListGet"
        ],
        "responseValueName": [
            "OAdminProductRecycleListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "rMzPa5r3cM",
                    "name": "type",
                    "required": false,
                    "description": "产品类型",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品名称",
                    "type": "string",
                    "id": "s7l6n8NNmX",
                    "enable": true,
                    "name": "productName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "绑定流程",
                    "type": "number",
                    "id": "jGRT5eICDn",
                    "enable": true,
                    "name": "flowId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "创建人",
                    "type": "string",
                    "id": "0GhnWb5pLU",
                    "enable": true,
                    "name": "createBy",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "yamvsrFr6P",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "tAGBA8mdyz",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "6HU3fgf7O8",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "基金ID",
                    "type": "number",
                    "id": "51f7PDp97i",
                    "enable": true,
                    "name": "fundId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "删除人",
                    "type": "string",
                    "id": "wHOT9vfHFQ",
                    "enable": true,
                    "name": "delBy",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询删除后的产品列表  buildFnGetOrPostCode\n * \n * @param {string} params.type 可选: 产品类型\n * @param {string} params.productName 可选: 产品名称\n * @param {number} params.flowId 可选: 绑定流程\n * @param {string} params.createBy 可选: 创建人\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.productId 可选: 产品ID\n * @param {number} params.fundId 可选: 基金ID\n * @param {string} params.delBy 可选: 删除人\n * @return Promise<OAdminProductRecycleListGet>\n */\nexport const adminProductRecycleListGet = async (params?: IAdminProductRecycleListGet) => {\n\treturn get<OAdminProductRecycleListGet>(`/admin/product/recycle/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询删除后的产品列表  buildReqGetOrPostTyped\n * @url /admin/product/recycle/list\n */\nexport interface IAdminProductRecycleListGet{\n\ttype?: string; // 产品类型\n\tproductName?: string; // 产品名称\n\tflowId?: number; // 绑定流程\n\tcreateBy?: string; // 创建人\n\tpageNum?: number;\n\tpageSize?: number;\n\tproductId?: number; // 产品ID\n\tfundId?: number; // 基金ID\n\tdelBy?: string; // 删除人\n}",
        "resCode": "/**\n * @description 查询删除后的产品列表  buildResAnyTyped\n * @url /admin/product/recycle/list\n */\nexport type OAdminProductRecycleListGet = {\n}",
        "resValueCode": "/**\n * @description 查询删除后的产品列表  buildResAnyTyped\n * @url /admin/product/recycle/list\n */\nexport const OAdminProductRecycleListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/audit/list",
        "url": "/admin/product/relevant/audit/list",
        "pureUrl": "/admin/product/relevant/audit/list",
        "pathReqUrl": "/admin/product/relevant/audit/list",
        "method": "get",
        "apiName": "申请权限列表",
        "key": "AdminProductRelevantAuditListGet",
        "fnName": "adminProductRelevantAuditListGet",
        "requestBaseName": "IAdminProductRelevantAuditListGet",
        "requestName": [
            "IAdminProductRelevantAuditListGet"
        ],
        "responseBaseName": "OAdminProductRelevantAuditListGet",
        "responseName": [
            "OAdminProductRelevantAuditListGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantAuditListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NG3GjHB2Jq",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NUt7iNTFw5",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "申请人",
                    "type": "string",
                    "id": "FgBE8QlDfy",
                    "enable": true,
                    "name": "createBy",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "Cq1joZOSPp",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 申请权限列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.createBy 可选: 申请人\n * @param {number} params.productId 可选: 产品ID\n * @return Promise<OAdminProductRelevantAuditListGet>\n */\nexport const adminProductRelevantAuditListGet = async (params?: IAdminProductRelevantAuditListGet) => {\n\treturn get<OAdminProductRelevantAuditListGet>(`/admin/product/relevant/audit/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 申请权限列表 buildReqGetOrPostTyped\n * @url /admin/product/relevant/audit/list\n */\nexport interface IAdminProductRelevantAuditListGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tcreateBy?: string; // 申请人\n\tproductId?: number; // 产品ID\n}",
        "resCode": "/**\n * @description 申请权限列表 buildResAnyTyped\n * @url /admin/product/relevant/audit/list\n */\nexport type OAdminProductRelevantAuditListGet = {\n}",
        "resValueCode": "/**\n * @description 申请权限列表 buildResAnyTyped\n * @url /admin/product/relevant/audit/list\n */\nexport const OAdminProductRelevantAuditListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/audit",
        "url": "/admin/product/relevant/audit",
        "pureUrl": "/admin/product/relevant/audit",
        "pathReqUrl": "/admin/product/relevant/audit",
        "method": "post",
        "apiName": "申请权限审核",
        "key": "AdminProductRelevantAuditPost",
        "fnName": "adminProductRelevantAuditPost",
        "requestBaseName": "IAdminProductRelevantAuditPost",
        "requestName": [
            "IAdminProductRelevantAuditPost"
        ],
        "responseBaseName": "OAdminProductRelevantAuditPost",
        "responseName": [
            "OAdminProductRelevantAuditPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantAuditPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "auditReason",
                    "type": "string",
                    "description": "原因",
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-未处理 1-已处理 2-已拒绝",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 申请权限审核 buildFnGetOrPostCode\n * \n * @param {string} params.auditReason 可选: 原因\n * @param {number} params.id 必填: ID\n * @param {number} params.status 必填: 状态 0-未处理 1-已处理 2-已拒绝\n * @return Promise<OAdminProductRelevantAuditPost>\n */\nexport const adminProductRelevantAuditPost = async (params?: IAdminProductRelevantAuditPost) => {\n\treturn post<OAdminProductRelevantAuditPost>(`/admin/product/relevant/audit`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 申请权限审核 buildReqGetOrPostTyped\n * @url /admin/product/relevant/audit\n */\nexport interface IAdminProductRelevantAuditPost{\n\tauditReason?: string; // 原因\n\tid: number; // ID\n\tstatus: number; // 状态 0-未处理 1-已处理 2-已拒绝\n}",
        "resCode": "/**\n * @description 申请权限审核 buildResAnyTyped\n * @url /admin/product/relevant/audit\n */\nexport type OAdminProductRelevantAuditPost = {\n}",
        "resValueCode": "/**\n * @description 申请权限审核 buildResAnyTyped\n * @url /admin/product/relevant/audit\n */\nexport const OAdminProductRelevantAuditPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/file",
        "url": "/admin/product/relevant/file",
        "pureUrl": "/admin/product/relevant/file",
        "pathReqUrl": "/admin/product/relevant/file",
        "method": "get",
        "apiName": "查询产品相关内容-文件",
        "key": "AdminProductRelevantFileGet",
        "fnName": "adminProductRelevantFileGet",
        "requestBaseName": "IAdminProductRelevantFileGet",
        "requestName": [
            "IAdminProductRelevantFileGet"
        ],
        "responseBaseName": "OAdminProductRelevantFileGet",
        "responseName": [
            "OAdminProductRelevantFileGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantFileGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "3FgaRYolEc",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "产品ID",
                    "type": "number",
                    "id": "HjVJcogShr",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品相关内容-文件 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantFileGet>\n */\nexport const adminProductRelevantFileGet = async (params?: IAdminProductRelevantFileGet) => {\n\treturn get<OAdminProductRelevantFileGet>(`/admin/product/relevant/file`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品相关内容-文件 buildReqGetOrPostTyped\n * @url /admin/product/relevant/file\n */\nexport interface IAdminProductRelevantFileGet{\n\ttitle?: string;\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 查询产品相关内容-文件 buildResAnyTyped\n * @url /admin/product/relevant/file\n */\nexport type OAdminProductRelevantFileGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品相关内容-文件 buildResAnyTyped\n * @url /admin/product/relevant/file\n */\nexport const OAdminProductRelevantFileGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/file",
        "url": "/admin/product/relevant/file",
        "pureUrl": "/admin/product/relevant/file",
        "pathReqUrl": "/admin/product/relevant/file",
        "method": "post",
        "apiName": "添加产品相关内容-文件",
        "key": "AdminProductRelevantFilePost",
        "fnName": "adminProductRelevantFilePost",
        "requestBaseName": "IAdminProductRelevantFilePost",
        "requestName": [
            "IAdminProductRelevantFilePost"
        ],
        "responseBaseName": "OAdminProductRelevantFilePost",
        "responseName": [
            "OAdminProductRelevantFilePost"
        ],
        "responseValueName": [
            "OAdminProductRelevantFilePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "objId": {
                                "type": "integer",
                                "description": "对象ID"
                            },
                            "title": {
                                "type": "string"
                            },
                            "sort": {
                                "type": "integer",
                                "description": "权重 降序"
                            },
                            "url": {
                                "type": "string",
                                "description": "文件地址"
                            },
                            "groupId": {
                                "type": "integer"
                            },
                            "levelId": {
                                "type": "integer"
                            }
                        },
                        "x-apifox-orders": [
                            "objId",
                            "title",
                            "url",
                            "sort",
                            "groupId",
                            "levelId"
                        ],
                        "required": [
                            "objId",
                            "title",
                            "sort",
                            "url",
                            "groupId",
                            "levelId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品相关内容-文件 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantFilePost>\n */\nexport const adminProductRelevantFilePost = async (params?: IAdminProductRelevantFilePost) => {\n\treturn post<OAdminProductRelevantFilePost>(`/admin/product/relevant/file`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品相关内容-文件 buildReqGetOrPostTyped\n * @url /admin/product/relevant/file\n */\nexport interface IAdminProductRelevantFilePost{\n\tdata: any[];\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 添加产品相关内容-文件 buildResAnyTyped\n * @url /admin/product/relevant/file\n */\nexport type OAdminProductRelevantFilePost = {\n}",
        "resValueCode": "/**\n * @description 添加产品相关内容-文件 buildResAnyTyped\n * @url /admin/product/relevant/file\n */\nexport const OAdminProductRelevantFilePostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/product/relevant/group/{x}",
        "url": "/admin/product/relevant/group/{groupId}",
        "pureUrl": "/admin/product/relevant/group/{x}",
        "pathReqUrl": "/admin/product/relevant/group/${groupId}",
        "method": "delete",
        "apiName": "删除产品文件夹（分组）",
        "key": "AdminProductRelevantGroupGroupIdDelete",
        "fnName": "adminProductRelevantGroupGroupIdDelete",
        "requestBaseName": "IAdminProductRelevantGroupGroupIdDelete",
        "requestName": [
            "IAdminProductRelevantGroupGroupIdDelete",
            "IAdminProductRelevantGroupGroupIdDeleteGroup"
        ],
        "responseBaseName": "OAdminProductRelevantGroupGroupIdDelete",
        "responseName": [
            "OAdminProductRelevantGroupGroupIdDelete"
        ],
        "responseValueName": [
            "OAdminProductRelevantGroupGroupIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "当文件夹下面有文件时，1表示强制删除",
                    "type": "string",
                    "id": "PRZnyYddpI",
                    "enable": true,
                    "name": "delChildren",
                    "sampleValue": "1"
                }
            ],
            "path": [
                {
                    "id": "groupId#0",
                    "name": "groupId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除产品文件夹（分组） buildFnPathCode\n * @path {number groupId 必填: }\n * @query {string} delChildren 可选: 当文件夹下面有文件时，1表示强制删除\n * @return Promise<OAdminProductRelevantGroupGroupIdDelete>\n */\nexport const adminProductRelevantGroupGroupIdDelete = async ({path, params}: IAdminProductRelevantGroupGroupIdDeleteGroup) => {\n\treturn del<OAdminProductRelevantGroupGroupIdDelete>(`/admin/product/relevant/group/${path.groupId}`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 删除产品文件夹（分组） buildReqGetOrPostTyped\n * @url /admin/product/relevant/group/{groupId}\n */\nexport interface IAdminProductRelevantGroupGroupIdDelete{\n\tdelChildren?: string; // 当文件夹下面有文件时，1表示强制删除\n}/**\n * @description 删除产品文件夹（分组） buildReqGetOrPostTyped\n * @url /admin/product/relevant/group/{groupId}\n */\nexport interface IAdminProductRelevantGroupGroupIdDeleteGroup {\n  path: {\n\t\tgroupId: number;\n\t};\n  params: IAdminProductRelevantGroupGroupIdDelete;\n}",
        "resCode": "/**\n * @description 删除产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group/{x}\n */\nexport type OAdminProductRelevantGroupGroupIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group/{x}\n */\nexport const OAdminProductRelevantGroupGroupIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/group/list",
        "url": "/admin/product/relevant/group/list",
        "pureUrl": "/admin/product/relevant/group/list",
        "pathReqUrl": "/admin/product/relevant/group/list",
        "method": "get",
        "apiName": "查询产品文件夹（分组）",
        "key": "AdminProductRelevantGroupListGet",
        "fnName": "adminProductRelevantGroupListGet",
        "requestBaseName": "IAdminProductRelevantGroupListGet",
        "requestName": [
            "IAdminProductRelevantGroupListGet"
        ],
        "responseBaseName": "OAdminProductRelevantGroupListGet",
        "responseName": [
            "OAdminProductRelevantGroupListGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantGroupListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "xhEbJCNBF8",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "类型 file，image，video，news",
                    "type": "string",
                    "id": "j8fqbFUUGO",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品文件夹（分组） buildFnGetOrPostCode\n * \n * @param {number} params.productId 可选: 产品ID\n * @param {string} params.type 可选: 类型 file，image，video，news\n * @return Promise<OAdminProductRelevantGroupListGet>\n */\nexport const adminProductRelevantGroupListGet = async (params?: IAdminProductRelevantGroupListGet) => {\n\treturn get<OAdminProductRelevantGroupListGet>(`/admin/product/relevant/group/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品文件夹（分组） buildReqGetOrPostTyped\n * @url /admin/product/relevant/group/list\n */\nexport interface IAdminProductRelevantGroupListGet{\n\tproductId?: number; // 产品ID\n\ttype?: string; // 类型 file，image，video，news\n}",
        "resCode": "/**\n * @description 查询产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group/list\n */\nexport type OAdminProductRelevantGroupListGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group/list\n */\nexport const OAdminProductRelevantGroupListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/group",
        "url": "/admin/product/relevant/group",
        "pureUrl": "/admin/product/relevant/group",
        "pathReqUrl": "/admin/product/relevant/group",
        "method": "post",
        "apiName": "添加产品文件夹（分组）",
        "key": "AdminProductRelevantGroupPost",
        "fnName": "adminProductRelevantGroupPost",
        "requestBaseName": "IAdminProductRelevantGroupPost",
        "requestName": [
            "IAdminProductRelevantGroupPost"
        ],
        "responseBaseName": "OAdminProductRelevantGroupPost",
        "responseName": [
            "OAdminProductRelevantGroupPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantGroupPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "文件夹名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "file | image",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品文件夹（分组） buildFnGetOrPostCode\n * \n * @param {number} params.productId 必填: 产品ID\n * @param {string} params.title 必填: 文件夹名\n * @param {string} params.type 必填: file | image\n * @return Promise<OAdminProductRelevantGroupPost>\n */\nexport const adminProductRelevantGroupPost = async (params?: IAdminProductRelevantGroupPost) => {\n\treturn post<OAdminProductRelevantGroupPost>(`/admin/product/relevant/group`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品文件夹（分组） buildReqGetOrPostTyped\n * @url /admin/product/relevant/group\n */\nexport interface IAdminProductRelevantGroupPost{\n\tproductId: number; // 产品ID\n\ttitle: string; // 文件夹名\n\ttype: string; // file | image\n}",
        "resCode": "/**\n * @description 添加产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group\n */\nexport type OAdminProductRelevantGroupPost = {\n}",
        "resValueCode": "/**\n * @description 添加产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group\n */\nexport const OAdminProductRelevantGroupPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product/relevant/group",
        "url": "/admin/product/relevant/group",
        "pureUrl": "/admin/product/relevant/group",
        "pathReqUrl": "/admin/product/relevant/group",
        "method": "put",
        "apiName": "修改产品文件夹（分组）",
        "key": "AdminProductRelevantGroupPut",
        "fnName": "adminProductRelevantGroupPut",
        "requestBaseName": "IAdminProductRelevantGroupPut",
        "requestName": [
            "IAdminProductRelevantGroupPut"
        ],
        "responseBaseName": "OAdminProductRelevantGroupPut",
        "responseName": [
            "OAdminProductRelevantGroupPut"
        ],
        "responseValueName": [
            "OAdminProductRelevantGroupPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "groupId",
                    "type": "number",
                    "description": "分组ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "文件夹名",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改产品文件夹（分组） buildFnGetOrPostCode\n * \n * @param {number} params.groupId 必填: 分组ID\n * @param {string} params.title 必填: 文件夹名\n * @return Promise<OAdminProductRelevantGroupPut>\n */\nexport const adminProductRelevantGroupPut = async (params?: IAdminProductRelevantGroupPut) => {\n\treturn put<OAdminProductRelevantGroupPut>(`/admin/product/relevant/group`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品文件夹（分组） buildReqGetOrPostTyped\n * @url /admin/product/relevant/group\n */\nexport interface IAdminProductRelevantGroupPut{\n\tgroupId: number; // 分组ID\n\ttitle: string; // 文件夹名\n}",
        "resCode": "/**\n * @description 修改产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group\n */\nexport type OAdminProductRelevantGroupPut = {\n}",
        "resValueCode": "/**\n * @description 修改产品文件夹（分组） buildResAnyTyped\n * @url /admin/product/relevant/group\n */\nexport const OAdminProductRelevantGroupPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/group/sort",
        "url": "/admin/product/relevant/group/sort",
        "pureUrl": "/admin/product/relevant/group/sort",
        "pathReqUrl": "/admin/product/relevant/group/sort",
        "method": "post",
        "apiName": "批量排序-分组",
        "key": "AdminProductRelevantGroupSortPost",
        "fnName": "adminProductRelevantGroupSortPost",
        "requestBaseName": "IAdminProductRelevantGroupSortPost",
        "requestName": [
            "IAdminProductRelevantGroupSortPost"
        ],
        "responseBaseName": "OAdminProductRelevantGroupSortPost",
        "responseName": [
            "OAdminProductRelevantGroupSortPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantGroupSortPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "sort": {
                                "type": "integer",
                                "description": "排序  降序"
                            },
                            "groupId": {
                                "type": "integer"
                            }
                        },
                        "x-apifox-orders": [
                            "sort",
                            "groupId"
                        ],
                        "required": [
                            "sort",
                            "groupId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 批量排序-分组 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @return Promise<OAdminProductRelevantGroupSortPost>\n */\nexport const adminProductRelevantGroupSortPost = async (params?: IAdminProductRelevantGroupSortPost) => {\n\treturn post<OAdminProductRelevantGroupSortPost>(`/admin/product/relevant/group/sort`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 批量排序-分组 buildReqGetOrPostTyped\n * @url /admin/product/relevant/group/sort\n */\nexport interface IAdminProductRelevantGroupSortPost{\n\tdata: any[];\n}",
        "resCode": "/**\n * @description 批量排序-分组 buildResAnyTyped\n * @url /admin/product/relevant/group/sort\n */\nexport type OAdminProductRelevantGroupSortPost = {\n}",
        "resValueCode": "/**\n * @description 批量排序-分组 buildResAnyTyped\n * @url /admin/product/relevant/group/sort\n */\nexport const OAdminProductRelevantGroupSortPostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/product/relevant/{x}",
        "url": "/admin/product/relevant/{id}",
        "pureUrl": "/admin/product/relevant/{x}",
        "pathReqUrl": "/admin/product/relevant/${id}",
        "method": "delete",
        "apiName": "删除产品相关内容",
        "key": "AdminProductRelevantIdDelete",
        "fnName": "adminProductRelevantIdDelete",
        "requestBaseName": "IAdminProductRelevantIdDelete",
        "requestName": [
            "IAdminProductRelevantIdDelete"
        ],
        "responseBaseName": "OAdminProductRelevantIdDelete",
        "responseName": [
            "OAdminProductRelevantIdDelete"
        ],
        "responseValueName": [
            "OAdminProductRelevantIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除产品相关内容 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminProductRelevantIdDelete>\n */\nexport const adminProductRelevantIdDelete = async (id: number) => {\n\treturn del<OAdminProductRelevantIdDelete>(`/admin/product/relevant/${id}`)\n}",
        "reqCode": "/**\n * @description 删除产品相关内容 buildReqGetOrPostTyped\n * @url /admin/product/relevant/{id}\n */\nexport interface IAdminProductRelevantIdDelete{\n}",
        "resCode": "/**\n * @description 删除产品相关内容 buildResAnyTyped\n * @url /admin/product/relevant/{x}\n */\nexport type OAdminProductRelevantIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除产品相关内容 buildResAnyTyped\n * @url /admin/product/relevant/{x}\n */\nexport const OAdminProductRelevantIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/image",
        "url": "/admin/product/relevant/image",
        "pureUrl": "/admin/product/relevant/image",
        "pathReqUrl": "/admin/product/relevant/image",
        "method": "get",
        "apiName": "查询产品相关内容-图片",
        "key": "AdminProductRelevantImageGet",
        "fnName": "adminProductRelevantImageGet",
        "requestBaseName": "IAdminProductRelevantImageGet",
        "requestName": [
            "IAdminProductRelevantImageGet"
        ],
        "responseBaseName": "OAdminProductRelevantImageGet",
        "responseName": [
            "OAdminProductRelevantImageGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantImageGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "3FgaRYolEc",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "产品ID",
                    "type": "number",
                    "id": "HjVJcogShr",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品相关内容-图片 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantImageGet>\n */\nexport const adminProductRelevantImageGet = async (params?: IAdminProductRelevantImageGet) => {\n\treturn get<OAdminProductRelevantImageGet>(`/admin/product/relevant/image`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品相关内容-图片 buildReqGetOrPostTyped\n * @url /admin/product/relevant/image\n */\nexport interface IAdminProductRelevantImageGet{\n\ttitle?: string;\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 查询产品相关内容-图片 buildResAnyTyped\n * @url /admin/product/relevant/image\n */\nexport type OAdminProductRelevantImageGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品相关内容-图片 buildResAnyTyped\n * @url /admin/product/relevant/image\n */\nexport const OAdminProductRelevantImageGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/image",
        "url": "/admin/product/relevant/image",
        "pureUrl": "/admin/product/relevant/image",
        "pathReqUrl": "/admin/product/relevant/image",
        "method": "post",
        "apiName": "添加产品相关内容-图片",
        "key": "AdminProductRelevantImagePost",
        "fnName": "adminProductRelevantImagePost",
        "requestBaseName": "IAdminProductRelevantImagePost",
        "requestName": [
            "IAdminProductRelevantImagePost"
        ],
        "responseBaseName": "OAdminProductRelevantImagePost",
        "responseName": [
            "OAdminProductRelevantImagePost"
        ],
        "responseValueName": [
            "OAdminProductRelevantImagePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "objId": {
                                "type": "integer",
                                "description": "对象ID"
                            },
                            "title": {
                                "type": "string"
                            },
                            "sort": {
                                "type": "integer",
                                "description": "权重 降序"
                            },
                            "url": {
                                "type": "string",
                                "description": "图片地址"
                            },
                            "groupId": {
                                "type": "integer"
                            }
                        },
                        "x-apifox-orders": [
                            "objId",
                            "title",
                            "url",
                            "sort",
                            "groupId"
                        ],
                        "required": [
                            "objId",
                            "title",
                            "sort",
                            "url",
                            "groupId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品相关内容-图片 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantImagePost>\n */\nexport const adminProductRelevantImagePost = async (params?: IAdminProductRelevantImagePost) => {\n\treturn post<OAdminProductRelevantImagePost>(`/admin/product/relevant/image`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品相关内容-图片 buildReqGetOrPostTyped\n * @url /admin/product/relevant/image\n */\nexport interface IAdminProductRelevantImagePost{\n\tdata: any[];\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 添加产品相关内容-图片 buildResAnyTyped\n * @url /admin/product/relevant/image\n */\nexport type OAdminProductRelevantImagePost = {\n}",
        "resValueCode": "/**\n * @description 添加产品相关内容-图片 buildResAnyTyped\n * @url /admin/product/relevant/image\n */\nexport const OAdminProductRelevantImagePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/level/list",
        "url": "/admin/product/relevant/level/list",
        "pureUrl": "/admin/product/relevant/level/list",
        "pathReqUrl": "/admin/product/relevant/level/list",
        "method": "get",
        "apiName": "查询产品相关内容等级",
        "key": "AdminProductRelevantLevelListGet",
        "fnName": "adminProductRelevantLevelListGet",
        "requestBaseName": "IAdminProductRelevantLevelListGet",
        "requestName": [
            "IAdminProductRelevantLevelListGet"
        ],
        "responseBaseName": "OAdminProductRelevantLevelListGet",
        "responseName": [
            "OAdminProductRelevantLevelListGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantLevelListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "产品类型",
                    "type": "string",
                    "id": "9qp7cU1eKs",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品相关内容等级 buildFnGetOrPostCode\n * \n * @param {string} params.productType 必填: 产品类型\n * @return Promise<OAdminProductRelevantLevelListGet>\n */\nexport const adminProductRelevantLevelListGet = async (params?: IAdminProductRelevantLevelListGet) => {\n\treturn get<OAdminProductRelevantLevelListGet>(`/admin/product/relevant/level/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品相关内容等级 buildReqGetOrPostTyped\n * @url /admin/product/relevant/level/list\n */\nexport interface IAdminProductRelevantLevelListGet{\n\tproductType: string; // 产品类型\n}",
        "resCode": "/**\n * @description 查询产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level/list\n */\nexport type OAdminProductRelevantLevelListGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level/list\n */\nexport const OAdminProductRelevantLevelListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/level",
        "url": "/admin/product/relevant/level",
        "pureUrl": "/admin/product/relevant/level",
        "pathReqUrl": "/admin/product/relevant/level",
        "method": "post",
        "apiName": "添加产品相关内容等级",
        "key": "AdminProductRelevantLevelPost",
        "fnName": "adminProductRelevantLevelPost",
        "requestBaseName": "IAdminProductRelevantLevelPost",
        "requestName": [
            "IAdminProductRelevantLevelPost"
        ],
        "responseBaseName": "OAdminProductRelevantLevelPost",
        "responseName": [
            "OAdminProductRelevantLevelPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantLevelPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "level",
                    "type": "number",
                    "description": "等级值 需>=0",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "productType",
                    "type": "string",
                    "description": "产品类型",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0正常 1禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品相关内容等级 buildFnGetOrPostCode\n * \n * @param {number} params.level 必填: 等级值 需>=0\n * @param {string} params.productType 必填: 产品类型\n * @param {number} params.status 必填: 状态 0正常 1禁用\n * @param {string} params.title 必填: 标题\n * @return Promise<OAdminProductRelevantLevelPost>\n */\nexport const adminProductRelevantLevelPost = async (params?: IAdminProductRelevantLevelPost) => {\n\treturn post<OAdminProductRelevantLevelPost>(`/admin/product/relevant/level`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品相关内容等级 buildReqGetOrPostTyped\n * @url /admin/product/relevant/level\n */\nexport interface IAdminProductRelevantLevelPost{\n\tlevel: number; // 等级值 需>=0\n\tproductType: string; // 产品类型\n\tstatus: number; // 状态 0正常 1禁用\n\ttitle: string; // 标题\n}",
        "resCode": "/**\n * @description 添加产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level\n */\nexport type OAdminProductRelevantLevelPost = {\n}",
        "resValueCode": "/**\n * @description 添加产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level\n */\nexport const OAdminProductRelevantLevelPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product/relevant/level",
        "url": "/admin/product/relevant/level",
        "pureUrl": "/admin/product/relevant/level",
        "pathReqUrl": "/admin/product/relevant/level",
        "method": "put",
        "apiName": "修改产品相关内容等级",
        "key": "AdminProductRelevantLevelPut",
        "fnName": "adminProductRelevantLevelPut",
        "requestBaseName": "IAdminProductRelevantLevelPut",
        "requestName": [
            "IAdminProductRelevantLevelPut"
        ],
        "responseBaseName": "OAdminProductRelevantLevelPut",
        "responseName": [
            "OAdminProductRelevantLevelPut"
        ],
        "responseValueName": [
            "OAdminProductRelevantLevelPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "等级ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "level",
                    "type": "number",
                    "description": "等级值 需>=0",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0正常 1禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改产品相关内容等级 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 等级ID\n * @param {number} params.level 必填: 等级值 需>=0\n * @param {number} params.status 必填: 状态 0正常 1禁用\n * @param {string} params.title 必填: 标题\n * @return Promise<OAdminProductRelevantLevelPut>\n */\nexport const adminProductRelevantLevelPut = async (params?: IAdminProductRelevantLevelPut) => {\n\treturn put<OAdminProductRelevantLevelPut>(`/admin/product/relevant/level`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品相关内容等级 buildReqGetOrPostTyped\n * @url /admin/product/relevant/level\n */\nexport interface IAdminProductRelevantLevelPut{\n\tid: number; // 等级ID\n\tlevel: number; // 等级值 需>=0\n\tstatus: number; // 状态 0正常 1禁用\n\ttitle: string; // 标题\n}",
        "resCode": "/**\n * @description 修改产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level\n */\nexport type OAdminProductRelevantLevelPut = {\n}",
        "resValueCode": "/**\n * @description 修改产品相关内容等级 buildResAnyTyped\n * @url /admin/product/relevant/level\n */\nexport const OAdminProductRelevantLevelPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/news",
        "url": "/admin/product/relevant/news",
        "pureUrl": "/admin/product/relevant/news",
        "pathReqUrl": "/admin/product/relevant/news",
        "method": "get",
        "apiName": "查询产品相关内容-新闻",
        "key": "AdminProductRelevantNewsGet",
        "fnName": "adminProductRelevantNewsGet",
        "requestBaseName": "IAdminProductRelevantNewsGet",
        "requestName": [
            "IAdminProductRelevantNewsGet"
        ],
        "responseBaseName": "OAdminProductRelevantNewsGet",
        "responseName": [
            "OAdminProductRelevantNewsGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantNewsGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "3FgaRYolEc",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "产品ID",
                    "type": "number",
                    "id": "HjVJcogShr",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品相关内容-新闻 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantNewsGet>\n */\nexport const adminProductRelevantNewsGet = async (params?: IAdminProductRelevantNewsGet) => {\n\treturn get<OAdminProductRelevantNewsGet>(`/admin/product/relevant/news`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品相关内容-新闻 buildReqGetOrPostTyped\n * @url /admin/product/relevant/news\n */\nexport interface IAdminProductRelevantNewsGet{\n\ttitle?: string;\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 查询产品相关内容-新闻 buildResAnyTyped\n * @url /admin/product/relevant/news\n */\nexport type OAdminProductRelevantNewsGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品相关内容-新闻 buildResAnyTyped\n * @url /admin/product/relevant/news\n */\nexport const OAdminProductRelevantNewsGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/news",
        "url": "/admin/product/relevant/news",
        "pureUrl": "/admin/product/relevant/news",
        "pathReqUrl": "/admin/product/relevant/news",
        "method": "post",
        "apiName": "添加产品相关内容-新闻",
        "key": "AdminProductRelevantNewsPost",
        "fnName": "adminProductRelevantNewsPost",
        "requestBaseName": "IAdminProductRelevantNewsPost",
        "requestName": [
            "IAdminProductRelevantNewsPost"
        ],
        "responseBaseName": "OAdminProductRelevantNewsPost",
        "responseName": [
            "OAdminProductRelevantNewsPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantNewsPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "objId": {
                                "type": "integer",
                                "description": "对象ID"
                            },
                            "title": {
                                "type": "string"
                            },
                            "sort": {
                                "type": "integer",
                                "description": "权重 降序"
                            },
                            "url": {
                                "type": "string",
                                "description": "文章封面图"
                            }
                        },
                        "x-apifox-orders": [
                            "objId",
                            "title",
                            "url",
                            "sort"
                        ],
                        "required": [
                            "objId",
                            "title",
                            "sort",
                            "url"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品相关内容-新闻 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantNewsPost>\n */\nexport const adminProductRelevantNewsPost = async (params?: IAdminProductRelevantNewsPost) => {\n\treturn post<OAdminProductRelevantNewsPost>(`/admin/product/relevant/news`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品相关内容-新闻 buildReqGetOrPostTyped\n * @url /admin/product/relevant/news\n */\nexport interface IAdminProductRelevantNewsPost{\n\tdata: any[];\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 添加产品相关内容-新闻 buildResAnyTyped\n * @url /admin/product/relevant/news\n */\nexport type OAdminProductRelevantNewsPost = {\n}",
        "resValueCode": "/**\n * @description 添加产品相关内容-新闻 buildResAnyTyped\n * @url /admin/product/relevant/news\n */\nexport const OAdminProductRelevantNewsPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product/relevant",
        "url": "/admin/product/relevant",
        "pureUrl": "/admin/product/relevant",
        "pathReqUrl": "/admin/product/relevant",
        "method": "put",
        "apiName": "修改产品相关内容",
        "key": "AdminProductRelevantPut",
        "fnName": "adminProductRelevantPut",
        "requestBaseName": "IAdminProductRelevantPut",
        "requestName": [
            "IAdminProductRelevantPut"
        ],
        "responseBaseName": "OAdminProductRelevantPut",
        "responseName": [
            "OAdminProductRelevantPut"
        ],
        "responseValueName": [
            "OAdminProductRelevantPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "coverImg",
                    "type": "string",
                    "description": "视频封面图",
                    "oldType": "string"
                },
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "isFrame",
                    "type": "number",
                    "description": "是否外链 0-否 1-是",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "levelId",
                    "type": "number",
                    "oldType": "number"
                },
                {
                    "name": "sort",
                    "type": "number",
                    "description": "权重 降序",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "url",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改产品相关内容 buildFnGetOrPostCode\n * \n * @param {string} params.coverImg 可选: 视频封面图\n * @param {number} params.id 必填: \n * @param {number} params.isFrame 必填: 是否外链 0-否 1-是\n * @param {number} params.levelId 可选: \n * @param {number} params.sort 必填: 权重 降序\n * @param {string} params.title 必填: \n * @param {string} params.url 必填: \n * @return Promise<OAdminProductRelevantPut>\n */\nexport const adminProductRelevantPut = async (params?: IAdminProductRelevantPut) => {\n\treturn put<OAdminProductRelevantPut>(`/admin/product/relevant`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品相关内容 buildReqGetOrPostTyped\n * @url /admin/product/relevant\n */\nexport interface IAdminProductRelevantPut{\n\tcoverImg?: string; // 视频封面图\n\tid: number;\n\tisFrame: number; // 是否外链 0-否 1-是\n\tlevelId?: number;\n\tsort: number; // 权重 降序\n\ttitle: string;\n\turl: string;\n}",
        "resCode": "/**\n * @description 修改产品相关内容 buildResAnyTyped\n * @url /admin/product/relevant\n */\nexport type OAdminProductRelevantPut = {\n}",
        "resValueCode": "/**\n * @description 修改产品相关内容 buildResAnyTyped\n * @url /admin/product/relevant\n */\nexport const OAdminProductRelevantPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/sort",
        "url": "/admin/product/relevant/sort",
        "pureUrl": "/admin/product/relevant/sort",
        "pathReqUrl": "/admin/product/relevant/sort",
        "method": "post",
        "apiName": "排序相关产品内容",
        "key": "AdminProductRelevantSortPost",
        "fnName": "adminProductRelevantSortPost",
        "requestBaseName": "IAdminProductRelevantSortPost",
        "requestName": [
            "IAdminProductRelevantSortPost"
        ],
        "responseBaseName": "OAdminProductRelevantSortPost",
        "responseName": [
            "OAdminProductRelevantSortPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantSortPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "sort": {
                                "type": "integer",
                                "description": "降序"
                            }
                        },
                        "x-apifox-orders": [
                            "id",
                            "sort"
                        ],
                        "required": [
                            "id",
                            "sort"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 排序相关产品内容 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @return Promise<OAdminProductRelevantSortPost>\n */\nexport const adminProductRelevantSortPost = async (params?: IAdminProductRelevantSortPost) => {\n\treturn post<OAdminProductRelevantSortPost>(`/admin/product/relevant/sort`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 排序相关产品内容 buildReqGetOrPostTyped\n * @url /admin/product/relevant/sort\n */\nexport interface IAdminProductRelevantSortPost{\n\tdata: any[];\n}",
        "resCode": "/**\n * @description 排序相关产品内容 buildResAnyTyped\n * @url /admin/product/relevant/sort\n */\nexport type OAdminProductRelevantSortPost = {\n}",
        "resValueCode": "/**\n * @description 排序相关产品内容 buildResAnyTyped\n * @url /admin/product/relevant/sort\n */\nexport const OAdminProductRelevantSortPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/product/relevant/video",
        "url": "/admin/product/relevant/video",
        "pureUrl": "/admin/product/relevant/video",
        "pathReqUrl": "/admin/product/relevant/video",
        "method": "get",
        "apiName": "查询产品相关内容-视频",
        "key": "AdminProductRelevantVideoGet",
        "fnName": "adminProductRelevantVideoGet",
        "requestBaseName": "IAdminProductRelevantVideoGet",
        "requestName": [
            "IAdminProductRelevantVideoGet"
        ],
        "responseBaseName": "OAdminProductRelevantVideoGet",
        "responseName": [
            "OAdminProductRelevantVideoGet"
        ],
        "responseValueName": [
            "OAdminProductRelevantVideoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "3FgaRYolEc",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "产品ID",
                    "type": "number",
                    "id": "HjVJcogShr",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询产品相关内容-视频 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantVideoGet>\n */\nexport const adminProductRelevantVideoGet = async (params?: IAdminProductRelevantVideoGet) => {\n\treturn get<OAdminProductRelevantVideoGet>(`/admin/product/relevant/video`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询产品相关内容-视频 buildReqGetOrPostTyped\n * @url /admin/product/relevant/video\n */\nexport interface IAdminProductRelevantVideoGet{\n\ttitle?: string;\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 查询产品相关内容-视频 buildResAnyTyped\n * @url /admin/product/relevant/video\n */\nexport type OAdminProductRelevantVideoGet = {\n}",
        "resValueCode": "/**\n * @description 查询产品相关内容-视频 buildResAnyTyped\n * @url /admin/product/relevant/video\n */\nexport const OAdminProductRelevantVideoGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/relevant/video",
        "url": "/admin/product/relevant/video",
        "pureUrl": "/admin/product/relevant/video",
        "pathReqUrl": "/admin/product/relevant/video",
        "method": "post",
        "apiName": "添加产品相关内容-视频",
        "key": "AdminProductRelevantVideoPost",
        "fnName": "adminProductRelevantVideoPost",
        "requestBaseName": "IAdminProductRelevantVideoPost",
        "requestName": [
            "IAdminProductRelevantVideoPost"
        ],
        "responseBaseName": "OAdminProductRelevantVideoPost",
        "responseName": [
            "OAdminProductRelevantVideoPost"
        ],
        "responseValueName": [
            "OAdminProductRelevantVideoPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "data",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "sort": {
                                "type": "integer",
                                "description": "权重 降序"
                            },
                            "url": {
                                "type": "string",
                                "description": "视频地址"
                            },
                            "coverImg": {
                                "type": "string",
                                "description": "视频封面图"
                            },
                            "isFrame": {
                                "type": "integer",
                                "description": "是否外链 0-否 1-是"
                            },
                            "levelId": {
                                "type": "integer"
                            }
                        },
                        "x-apifox-orders": [
                            "title",
                            "url",
                            "sort",
                            "coverImg",
                            "isFrame",
                            "levelId"
                        ],
                        "required": [
                            "title",
                            "sort",
                            "url",
                            "coverImg",
                            "isFrame",
                            "levelId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "productId",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加产品相关内容-视频 buildFnGetOrPostCode\n * \n * @param {any[]} params.data 必填: \n * @param {number} params.productId 必填: 产品ID\n * @return Promise<OAdminProductRelevantVideoPost>\n */\nexport const adminProductRelevantVideoPost = async (params?: IAdminProductRelevantVideoPost) => {\n\treturn post<OAdminProductRelevantVideoPost>(`/admin/product/relevant/video`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加产品相关内容-视频 buildReqGetOrPostTyped\n * @url /admin/product/relevant/video\n */\nexport interface IAdminProductRelevantVideoPost{\n\tdata: any[];\n\tproductId: number; // 产品ID\n}",
        "resCode": "/**\n * @description 添加产品相关内容-视频 buildResAnyTyped\n * @url /admin/product/relevant/video\n */\nexport type OAdminProductRelevantVideoPost = {\n}",
        "resValueCode": "/**\n * @description 添加产品相关内容-视频 buildResAnyTyped\n * @url /admin/product/relevant/video\n */\nexport const OAdminProductRelevantVideoPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/revoke",
        "url": "/admin/product/revoke",
        "pureUrl": "/admin/product/revoke",
        "pathReqUrl": "/admin/product/revoke",
        "method": "post",
        "apiName": "撤销",
        "key": "AdminProductRevokePost",
        "fnName": "adminProductRevokePost",
        "requestBaseName": "IAdminProductRevokePost",
        "requestName": [
            "IAdminProductRevokePost"
        ],
        "responseBaseName": "OAdminProductRevokePost",
        "responseName": [
            "OAdminProductRevokePost"
        ],
        "responseValueName": [
            "OAdminProductRevokePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 撤销 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 产品ID\n * @return Promise<OAdminProductRevokePost>\n */\nexport const adminProductRevokePost = async (params?: IAdminProductRevokePost) => {\n\treturn post<OAdminProductRevokePost>(`/admin/product/revoke`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 撤销 buildReqGetOrPostTyped\n * @url /admin/product/revoke\n */\nexport interface IAdminProductRevokePost{\n\tid: number; // 产品ID\n}",
        "resCode": "/**\n * @description 撤销 buildResAnyTyped\n * @url /admin/product/revoke\n */\nexport type OAdminProductRevokePost = {\n}",
        "resValueCode": "/**\n * @description 撤销 buildResAnyTyped\n * @url /admin/product/revoke\n */\nexport const OAdminProductRevokePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/product/showStatus",
        "url": "/admin/product/showStatus",
        "pureUrl": "/admin/product/showStatus",
        "pathReqUrl": "/admin/product/showStatus",
        "method": "post",
        "apiName": "修改产品显示状态",
        "key": "AdminProductShowStatusPost",
        "fnName": "adminProductShowStatusPost",
        "requestBaseName": "IAdminProductShowStatusPost",
        "requestName": [
            "IAdminProductShowStatusPost"
        ],
        "responseBaseName": "OAdminProductShowStatusPost",
        "responseName": [
            "OAdminProductShowStatusPost"
        ],
        "responseValueName": [
            "OAdminProductShowStatusPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "oldType": "number"
                },
                {
                    "name": "showStatus",
                    "type": "number",
                    "description": "显示状态 0-正常 1-隐藏",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改产品显示状态 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: id\n * @param {number} params.showStatus 可选: 显示状态 0-正常 1-隐藏\n * @return Promise<OAdminProductShowStatusPost>\n */\nexport const adminProductShowStatusPost = async (params?: IAdminProductShowStatusPost) => {\n\treturn post<OAdminProductShowStatusPost>(`/admin/product/showStatus`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品显示状态 buildReqGetOrPostTyped\n * @url /admin/product/showStatus\n */\nexport interface IAdminProductShowStatusPost{\n\tid?: number; // id\n\tshowStatus?: number; // 显示状态 0-正常 1-隐藏\n}",
        "resCode": "/**\n * @description 修改产品显示状态 buildResAnyTyped\n * @url /admin/product/showStatus\n */\nexport type OAdminProductShowStatusPost = {\n}",
        "resValueCode": "/**\n * @description 修改产品显示状态 buildResAnyTyped\n * @url /admin/product/showStatus\n */\nexport const OAdminProductShowStatusPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/product/sort",
        "url": "/admin/product/sort",
        "pureUrl": "/admin/product/sort",
        "pathReqUrl": "/admin/product/sort",
        "method": "put",
        "apiName": "修改产品排序",
        "key": "AdminProductSortPut",
        "fnName": "adminProductSortPut",
        "requestBaseName": "IAdminProductSortPut",
        "requestName": [
            "IAdminProductSortPut"
        ],
        "responseBaseName": "OAdminProductSortPut",
        "responseName": [
            "OAdminProductSortPut"
        ],
        "responseValueName": [
            "OAdminProductSortPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "产品ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "sort",
                    "type": "number",
                    "description": "排序值",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改产品排序 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 产品ID\n * @param {number} params.sort 必填: 排序值\n * @return Promise<OAdminProductSortPut>\n */\nexport const adminProductSortPut = async (params?: IAdminProductSortPut) => {\n\treturn put<OAdminProductSortPut>(`/admin/product/sort`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改产品排序 buildReqGetOrPostTyped\n * @url /admin/product/sort\n */\nexport interface IAdminProductSortPut{\n\tid: number; // 产品ID\n\tsort: number; // 排序值\n}",
        "resCode": "/**\n * @description 修改产品排序 buildResAnyTyped\n * @url /admin/product/sort\n */\nexport type OAdminProductSortPut = {\n}",
        "resValueCode": "/**\n * @description 修改产品排序 buildResAnyTyped\n * @url /admin/product/sort\n */\nexport const OAdminProductSortPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/bankcardinfo",
        "url": "/admin/publish/bankcardinfo",
        "pureUrl": "/admin/publish/bankcardinfo",
        "pathReqUrl": "/admin/publish/bankcardinfo",
        "method": "get",
        "apiName": "根据卡号获取银行信息",
        "key": "AdminPublishBankcardinfoGet",
        "fnName": "adminPublishBankcardinfoGet",
        "requestBaseName": "IAdminPublishBankcardinfoGet",
        "requestName": [
            "IAdminPublishBankcardinfoGet"
        ],
        "responseBaseName": "OAdminPublishBankcardinfoGet",
        "responseName": [
            "OAdminPublishBankcardinfoGet"
        ],
        "responseValueName": [
            "OAdminPublishBankcardinfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "银行卡号",
                    "type": "string",
                    "id": "rUZQup5Fkw",
                    "enable": true,
                    "name": "bankNumber",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 根据卡号获取银行信息 buildFnGetOrPostCode\n * \n * @param {string} params.bankNumber 必填: 银行卡号\n * @return Promise<OAdminPublishBankcardinfoGet>\n */\nexport const adminPublishBankcardinfoGet = async (params?: IAdminPublishBankcardinfoGet) => {\n\treturn get<OAdminPublishBankcardinfoGet>(`/admin/publish/bankcardinfo`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 根据卡号获取银行信息 buildReqGetOrPostTyped\n * @url /admin/publish/bankcardinfo\n */\nexport interface IAdminPublishBankcardinfoGet{\n\tbankNumber: string; // 银行卡号\n}",
        "resCode": "/**\n * @description 根据卡号获取银行信息 buildResAnyTyped\n * @url /admin/publish/bankcardinfo\n */\nexport type OAdminPublishBankcardinfoGet = {\n}",
        "resValueCode": "/**\n * @description 根据卡号获取银行信息 buildResAnyTyped\n * @url /admin/publish/bankcardinfo\n */\nexport const OAdminPublishBankcardinfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/broker/list",
        "url": "/admin/publish/broker/list",
        "pureUrl": "/admin/publish/broker/list",
        "pathReqUrl": "/admin/publish/broker/list",
        "method": "get",
        "apiName": "查询中介列表",
        "key": "AdminPublishBrokerListGet",
        "fnName": "adminPublishBrokerListGet",
        "requestBaseName": "IAdminPublishBrokerListGet",
        "requestName": [
            "IAdminPublishBrokerListGet"
        ],
        "responseBaseName": "OAdminPublishBrokerListGet",
        "responseName": [
            "OAdminPublishBrokerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminPublishBrokerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询中介列表 buildFnArrayCode\n * \n * @return Promise<OAdminPublishBrokerListGetItem>\n */\nexport const adminPublishBrokerListGet = async (params?: IAdminPublishBrokerListGet) => {\n\treturn get<OAdminPublishBrokerListGetItem[]>(`/admin/publish/broker/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询中介列表 buildReqGetOrPostTyped\n * @url /admin/publish/broker/list\n */\nexport interface IAdminPublishBrokerListGet{\n}",
        "deleteResponseName": "OAdminPublishBrokerListGet",
        "resCode": "/**\n * @description 查询中介列表 buildResArrayTyped\n * @url /admin/publish/broker/list\n */\nexport type OAdminPublishBrokerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询中介列表 buildResArrayTyped\n * @url /admin/publish/broker/list\n */\nexport const OAdminPublishBrokerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/contract/component",
        "url": "/admin/publish/contract/component",
        "pureUrl": "/admin/publish/contract/component",
        "pathReqUrl": "/admin/publish/contract/component",
        "method": "get",
        "apiName": "合同组件分类",
        "key": "AdminPublishContractComponentGet",
        "fnName": "adminPublishContractComponentGet",
        "requestBaseName": "IAdminPublishContractComponentGet",
        "requestName": [
            "IAdminPublishContractComponentGet"
        ],
        "responseBaseName": "OAdminPublishContractComponentGet",
        "responseName": [
            "OAdminPublishContractComponentGet"
        ],
        "responseValueName": [
            "OAdminPublishContractComponentGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 合同组件分类 buildFnGetOrPostCode\n * \n * @return Promise<OAdminPublishContractComponentGet>\n */\nexport const adminPublishContractComponentGet = async (params?: IAdminPublishContractComponentGet) => {\n\treturn get<OAdminPublishContractComponentGet>(`/admin/publish/contract/component`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 合同组件分类 buildReqGetOrPostTyped\n * @url /admin/publish/contract/component\n */\nexport interface IAdminPublishContractComponentGet{\n}",
        "resCode": "/**\n * @description 合同组件分类 buildResAnyTyped\n * @url /admin/publish/contract/component\n */\nexport type OAdminPublishContractComponentGet = {\n}",
        "resValueCode": "/**\n * @description 合同组件分类 buildResAnyTyped\n * @url /admin/publish/contract/component\n */\nexport const OAdminPublishContractComponentGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/contract/list",
        "url": "/admin/publish/contract/list",
        "pureUrl": "/admin/publish/contract/list",
        "pathReqUrl": "/admin/publish/contract/list",
        "method": "get",
        "apiName": "合同列表",
        "key": "AdminPublishContractListGet",
        "fnName": "adminPublishContractListGet",
        "requestBaseName": "IAdminPublishContractListGet",
        "requestName": [
            "IAdminPublishContractListGet"
        ],
        "responseBaseName": "OAdminPublishContractListGet",
        "responseName": [
            "OAdminPublishContractListGet"
        ],
        "responseValueName": [
            "OAdminPublishContractListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "合同标题",
                    "type": "string",
                    "id": "IET5T4AF59",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 合同列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 合同标题\n * @return Promise<OAdminPublishContractListGet>\n */\nexport const adminPublishContractListGet = async (params?: IAdminPublishContractListGet) => {\n\treturn get<OAdminPublishContractListGet>(`/admin/publish/contract/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 合同列表 buildReqGetOrPostTyped\n * @url /admin/publish/contract/list\n */\nexport interface IAdminPublishContractListGet{\n\ttitle?: string; // 合同标题\n}",
        "resCode": "/**\n * @description 合同列表 buildResAnyTyped\n * @url /admin/publish/contract/list\n */\nexport type OAdminPublishContractListGet = {\n}",
        "resValueCode": "/**\n * @description 合同列表 buildResAnyTyped\n * @url /admin/publish/contract/list\n */\nexport const OAdminPublishContractListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/copywriting/list",
        "url": "/admin/publish/copywriting/list",
        "pureUrl": "/admin/publish/copywriting/list",
        "pathReqUrl": "/admin/publish/copywriting/list",
        "method": "get",
        "apiName": "查询文案列表",
        "key": "AdminPublishCopywritingListGet",
        "fnName": "adminPublishCopywritingListGet",
        "requestBaseName": "IAdminPublishCopywritingListGet",
        "requestName": [
            "IAdminPublishCopywritingListGet"
        ],
        "responseBaseName": "OAdminPublishCopywritingListGet",
        "responseName": [
            "OAdminPublishCopywritingListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminPublishCopywritingListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询文案列表 buildFnArrayCode\n * \n * @return Promise<OAdminPublishCopywritingListGetItem>\n */\nexport const adminPublishCopywritingListGet = async (params?: IAdminPublishCopywritingListGet) => {\n\treturn get<OAdminPublishCopywritingListGetItem[]>(`/admin/publish/copywriting/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询文案列表 buildReqGetOrPostTyped\n * @url /admin/publish/copywriting/list\n */\nexport interface IAdminPublishCopywritingListGet{\n}",
        "deleteResponseName": "OAdminPublishCopywritingListGet",
        "resCode": "/**\n * @description 查询文案列表 buildResArrayTyped\n * @url /admin/publish/copywriting/list\n */\nexport type OAdminPublishCopywritingListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询文案列表 buildResArrayTyped\n * @url /admin/publish/copywriting/list\n */\nexport const OAdminPublishCopywritingListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/customer/list",
        "url": "/admin/publish/customer/list",
        "pureUrl": "/admin/publish/customer/list",
        "pathReqUrl": "/admin/publish/customer/list",
        "method": "get",
        "apiName": "查询客服列表",
        "key": "AdminPublishCustomerListGet",
        "fnName": "adminPublishCustomerListGet",
        "requestBaseName": "IAdminPublishCustomerListGet",
        "requestName": [
            "IAdminPublishCustomerListGet"
        ],
        "responseBaseName": "OAdminPublishCustomerListGet",
        "responseName": [
            "OAdminPublishCustomerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminPublishCustomerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询客服列表 buildFnArrayCode\n * \n * @return Promise<OAdminPublishCustomerListGetItem>\n */\nexport const adminPublishCustomerListGet = async (params?: IAdminPublishCustomerListGet) => {\n\treturn get<OAdminPublishCustomerListGetItem[]>(`/admin/publish/customer/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询客服列表 buildReqGetOrPostTyped\n * @url /admin/publish/customer/list\n */\nexport interface IAdminPublishCustomerListGet{\n}",
        "deleteResponseName": "OAdminPublishCustomerListGet",
        "resCode": "/**\n * @description 查询客服列表 buildResArrayTyped\n * @url /admin/publish/customer/list\n */\nexport type OAdminPublishCustomerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询客服列表 buildResArrayTyped\n * @url /admin/publish/customer/list\n */\nexport const OAdminPublishCustomerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/dept/list",
        "url": "/admin/publish/dept/list",
        "pureUrl": "/admin/publish/dept/list",
        "pathReqUrl": "/admin/publish/dept/list",
        "method": "get",
        "apiName": "查询部门列表",
        "key": "AdminPublishDeptListGet",
        "fnName": "adminPublishDeptListGet",
        "requestBaseName": "IAdminPublishDeptListGet",
        "requestName": [
            "IAdminPublishDeptListGet"
        ],
        "responseBaseName": "OAdminPublishDeptListGet",
        "responseName": [
            "OAdminPublishDeptListGet"
        ],
        "responseValueName": [
            "OAdminPublishDeptListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "prShEEI7H1",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否查询其他部门  固定值：1",
                    "type": "string",
                    "id": "7RwL8ZmR7u",
                    "enable": true,
                    "name": "otherDept",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "传了的话 则会existMyDeptThread  1-表示该团队下存在线索",
                    "type": "number",
                    "id": "oShUfM54hO",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询部门列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {string} params.otherDept 可选: 是否查询其他部门  固定值：1\n * @param {number} params.investorId 可选: 传了的话 则会existMyDeptThread  1-表示该团队下存在线索\n * @return Promise<OAdminPublishDeptListGet>\n */\nexport const adminPublishDeptListGet = async (params?: IAdminPublishDeptListGet) => {\n\treturn get<OAdminPublishDeptListGet>(`/admin/publish/dept/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询部门列表 buildReqGetOrPostTyped\n * @url /admin/publish/dept/list\n */\nexport interface IAdminPublishDeptListGet{\n\tkeyword?: string;\n\totherDept?: string; // 是否查询其他部门  固定值：1\n\tinvestorId?: number; // 传了的话 则会existMyDeptThread  1-表示该团队下存在线索\n}",
        "resCode": "/**\n * @description 查询部门列表 buildResAnyTyped\n * @url /admin/publish/dept/list\n */\nexport type OAdminPublishDeptListGet = {\n}",
        "resValueCode": "/**\n * @description 查询部门列表 buildResAnyTyped\n * @url /admin/publish/dept/list\n */\nexport const OAdminPublishDeptListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/dept/ownerlist",
        "url": "/admin/publish/dept/ownerlist",
        "pureUrl": "/admin/publish/dept/ownerlist",
        "pathReqUrl": "/admin/publish/dept/ownerlist",
        "method": "get",
        "apiName": "查询部门列表 -我拥有的部门",
        "key": "AdminPublishDeptOwnerlistGet",
        "fnName": "adminPublishDeptOwnerlistGet",
        "requestBaseName": "IAdminPublishDeptOwnerlistGet",
        "requestName": [
            "IAdminPublishDeptOwnerlistGet"
        ],
        "responseBaseName": "OAdminPublishDeptOwnerlistGet",
        "responseName": [
            "OAdminPublishDeptOwnerlistGet"
        ],
        "responseValueName": [
            "OAdminPublishDeptOwnerlistGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "prShEEI7H1",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询部门列表 -我拥有的部门 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @return Promise<OAdminPublishDeptOwnerlistGet>\n */\nexport const adminPublishDeptOwnerlistGet = async (params?: IAdminPublishDeptOwnerlistGet) => {\n\treturn get<OAdminPublishDeptOwnerlistGet>(`/admin/publish/dept/ownerlist`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询部门列表 -我拥有的部门 buildReqGetOrPostTyped\n * @url /admin/publish/dept/ownerlist\n */\nexport interface IAdminPublishDeptOwnerlistGet{\n\tkeyword?: string;\n}",
        "resCode": "/**\n * @description 查询部门列表 -我拥有的部门 buildResAnyTyped\n * @url /admin/publish/dept/ownerlist\n */\nexport type OAdminPublishDeptOwnerlistGet = {\n}",
        "resValueCode": "/**\n * @description 查询部门列表 -我拥有的部门 buildResAnyTyped\n * @url /admin/publish/dept/ownerlist\n */\nexport const OAdminPublishDeptOwnerlistGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/file/signatureUrl",
        "url": "/admin/publish/file/signatureUrl",
        "pureUrl": "/admin/publish/file/signatureUrl",
        "pathReqUrl": "/admin/publish/file/signatureUrl",
        "method": "get",
        "apiName": "获取私有文件签名地址",
        "key": "AdminPublishFileSignatureUrlGet",
        "fnName": "adminPublishFileSignatureUrlGet",
        "requestBaseName": "IAdminPublishFileSignatureUrlGet",
        "requestName": [
            "IAdminPublishFileSignatureUrlGet"
        ],
        "responseBaseName": "OAdminPublishFileSignatureUrlGet",
        "responseName": [
            "OAdminPublishFileSignatureUrlGet"
        ],
        "responseValueName": [
            "OAdminPublishFileSignatureUrlGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "图片地址",
                    "type": "string",
                    "id": "M3rWo9srgQ",
                    "enable": true,
                    "name": "url",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取私有文件签名地址 buildFnGetOrPostCode\n * \n * @param {string} params.url 必填: 图片地址\n * @return Promise<OAdminPublishFileSignatureUrlGet>\n */\nexport const adminPublishFileSignatureUrlGet = async (params?: IAdminPublishFileSignatureUrlGet) => {\n\treturn get<OAdminPublishFileSignatureUrlGet>(`/admin/publish/file/signatureUrl`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取私有文件签名地址 buildReqGetOrPostTyped\n * @url /admin/publish/file/signatureUrl\n */\nexport interface IAdminPublishFileSignatureUrlGet{\n\turl: string; // 图片地址\n}",
        "resCode": "/**\n * @description 获取私有文件签名地址 buildResAnyTyped\n * @url /admin/publish/file/signatureUrl\n */\nexport type OAdminPublishFileSignatureUrlGet = {\n}",
        "resValueCode": "/**\n * @description 获取私有文件签名地址 buildResAnyTyped\n * @url /admin/publish/file/signatureUrl\n */\nexport const OAdminPublishFileSignatureUrlGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/flow/list",
        "url": "/admin/publish/flow/list",
        "pureUrl": "/admin/publish/flow/list",
        "pathReqUrl": "/admin/publish/flow/list",
        "method": "get",
        "apiName": "流程列表",
        "key": "AdminPublishFlowListGet",
        "fnName": "adminPublishFlowListGet",
        "requestBaseName": "IAdminPublishFlowListGet",
        "requestName": [
            "IAdminPublishFlowListGet"
        ],
        "responseBaseName": "OAdminPublishFlowListGet",
        "responseName": [
            "OAdminPublishFlowListGet"
        ],
        "responseValueName": [
            "OAdminPublishFlowListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "cQOjUizv1c",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "GUqF7D3I13",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "IyQBDUKySj",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 流程列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.title 可选: \n * @return Promise<OAdminPublishFlowListGet>\n */\nexport const adminPublishFlowListGet = async (params?: IAdminPublishFlowListGet) => {\n\treturn get<OAdminPublishFlowListGet>(`/admin/publish/flow/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 流程列表 buildReqGetOrPostTyped\n * @url /admin/publish/flow/list\n */\nexport interface IAdminPublishFlowListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\ttitle?: string;\n}",
        "resCode": "/**\n * @description 流程列表 buildResAnyTyped\n * @url /admin/publish/flow/list\n */\nexport type OAdminPublishFlowListGet = {\n}",
        "resValueCode": "/**\n * @description 流程列表 buildResAnyTyped\n * @url /admin/publish/flow/list\n */\nexport const OAdminPublishFlowListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/fund/list",
        "url": "/admin/publish/fund/list",
        "pureUrl": "/admin/publish/fund/list",
        "pathReqUrl": "/admin/publish/fund/list",
        "method": "get",
        "apiName": "基金列表",
        "key": "AdminPublishFundListGet",
        "fnName": "adminPublishFundListGet",
        "requestBaseName": "IAdminPublishFundListGet",
        "requestName": [
            "IAdminPublishFundListGet"
        ],
        "responseBaseName": "OAdminPublishFundListGet",
        "responseName": [
            "OAdminPublishFundListGet"
        ],
        "responseValueName": [
            "OAdminPublishFundListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "rUZQup5Fkw",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "A5c9AAdJDR",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "GXarr27LKg",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 基金列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminPublishFundListGet>\n */\nexport const adminPublishFundListGet = async (params?: IAdminPublishFundListGet) => {\n\treturn get<OAdminPublishFundListGet>(`/admin/publish/fund/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 基金列表 buildReqGetOrPostTyped\n * @url /admin/publish/fund/list\n */\nexport interface IAdminPublishFundListGet{\n\ttitle?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 基金列表 buildResAnyTyped\n * @url /admin/publish/fund/list\n */\nexport type OAdminPublishFundListGet = {\n}",
        "resValueCode": "/**\n * @description 基金列表 buildResAnyTyped\n * @url /admin/publish/fund/list\n */\nexport const OAdminPublishFundListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/investor/list",
        "url": "/admin/publish/investor/list",
        "pureUrl": "/admin/publish/investor/list",
        "pathReqUrl": "/admin/publish/investor/list",
        "method": "get",
        "apiName": "查询投资者列表",
        "key": "AdminPublishInvestorListGet",
        "fnName": "adminPublishInvestorListGet",
        "requestBaseName": "IAdminPublishInvestorListGet",
        "requestName": [
            "IAdminPublishInvestorListGet"
        ],
        "responseBaseName": "OAdminPublishInvestorListGet",
        "responseName": [
            "OAdminPublishInvestorListGet"
        ],
        "responseValueName": [
            "OAdminPublishInvestorListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "ydQQXrYZGl",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Cgpz4l77Io",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "IQumJ09hZH",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询投资者列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminPublishInvestorListGet>\n */\nexport const adminPublishInvestorListGet = async (params?: IAdminPublishInvestorListGet) => {\n\treturn get<OAdminPublishInvestorListGet>(`/admin/publish/investor/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询投资者列表 buildReqGetOrPostTyped\n * @url /admin/publish/investor/list\n */\nexport interface IAdminPublishInvestorListGet{\n\tkeyword?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询投资者列表 buildResAnyTyped\n * @url /admin/publish/investor/list\n */\nexport type OAdminPublishInvestorListGet = {\n}",
        "resValueCode": "/**\n * @description 查询投资者列表 buildResAnyTyped\n * @url /admin/publish/investor/list\n */\nexport const OAdminPublishInvestorListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/lawyer/list",
        "url": "/admin/publish/lawyer/list",
        "pureUrl": "/admin/publish/lawyer/list",
        "pathReqUrl": "/admin/publish/lawyer/list",
        "method": "get",
        "apiName": "查询律师列表",
        "key": "AdminPublishLawyerListGet",
        "fnName": "adminPublishLawyerListGet",
        "requestBaseName": "IAdminPublishLawyerListGet",
        "requestName": [
            "IAdminPublishLawyerListGet"
        ],
        "responseBaseName": "OAdminPublishLawyerListGet",
        "responseName": [
            "OAdminPublishLawyerListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminPublishLawyerListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询律师列表 buildFnArrayCode\n * \n * @return Promise<OAdminPublishLawyerListGetItem>\n */\nexport const adminPublishLawyerListGet = async (params?: IAdminPublishLawyerListGet) => {\n\treturn get<OAdminPublishLawyerListGetItem[]>(`/admin/publish/lawyer/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询律师列表 buildReqGetOrPostTyped\n * @url /admin/publish/lawyer/list\n */\nexport interface IAdminPublishLawyerListGet{\n}",
        "deleteResponseName": "OAdminPublishLawyerListGet",
        "resCode": "/**\n * @description 查询律师列表 buildResArrayTyped\n * @url /admin/publish/lawyer/list\n */\nexport type OAdminPublishLawyerListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询律师列表 buildResArrayTyped\n * @url /admin/publish/lawyer/list\n */\nexport const OAdminPublishLawyerListGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/material/list",
        "url": "/admin/publish/material/list",
        "pureUrl": "/admin/publish/material/list",
        "pathReqUrl": "/admin/publish/material/list",
        "method": "get",
        "apiName": "查询素材列表",
        "key": "AdminPublishMaterialListGet",
        "fnName": "adminPublishMaterialListGet",
        "requestBaseName": "IAdminPublishMaterialListGet",
        "requestName": [
            "IAdminPublishMaterialListGet"
        ],
        "responseBaseName": "OAdminPublishMaterialListGet",
        "responseName": [
            "OAdminPublishMaterialListGet"
        ],
        "responseValueName": [
            "OAdminPublishMaterialListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "名称",
                    "type": "string",
                    "id": "vD2oAW5Dd6",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0: 'img', 1: 'pdf', 2: 'video', 3: 'html', 4: 'txt', 5: 'ppt', 6: 'xls', 7: 'doc', 8: 'zip', 9: 'file'",
                    "type": "any[]",
                    "id": "kRdM2850eZ",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "1是批准书",
                    "type": "number",
                    "id": "uHO6OBzlQu",
                    "enable": true,
                    "name": "category",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Hx9GhhRt3r",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "qZOYM7naNU",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询素材列表 buildFnGetOrPostCode\n * \n * @param {string} params.name 可选: 名称\n * @param {any[]} params.type 可选: 0: 'img', 1: 'pdf', 2: 'video', 3: 'html', 4: 'txt', 5: 'ppt', 6: 'xls', 7: 'doc', 8: 'zip', 9: 'file'\n * @param {number} params.category 可选: 1是批准书\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminPublishMaterialListGet>\n */\nexport const adminPublishMaterialListGet = async (params?: IAdminPublishMaterialListGet) => {\n\treturn get<OAdminPublishMaterialListGet>(`/admin/publish/material/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询素材列表 buildReqGetOrPostTyped\n * @url /admin/publish/material/list\n */\nexport interface IAdminPublishMaterialListGet{\n\tname?: string; // 名称\n\ttype?: any[]; // 0: 'img', 1: 'pdf', 2: 'video', 3: 'html', 4: 'txt', 5: 'ppt', 6: 'xls', 7: 'doc', 8: 'zip', 9: 'file'\n\tcategory?: number; // 1是批准书\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询素材列表 buildResAnyTyped\n * @url /admin/publish/material/list\n */\nexport type OAdminPublishMaterialListGet = {\n}",
        "resValueCode": "/**\n * @description 查询素材列表 buildResAnyTyped\n * @url /admin/publish/material/list\n */\nexport const OAdminPublishMaterialListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/news/list",
        "url": "/admin/publish/news/list",
        "pureUrl": "/admin/publish/news/list",
        "pathReqUrl": "/admin/publish/news/list",
        "method": "get",
        "apiName": "查询文章列表",
        "key": "AdminPublishNewsListGet",
        "fnName": "adminPublishNewsListGet",
        "requestBaseName": "IAdminPublishNewsListGet",
        "requestName": [
            "IAdminPublishNewsListGet"
        ],
        "responseBaseName": "OAdminPublishNewsListGet",
        "responseName": [
            "OAdminPublishNewsListGet"
        ],
        "responseValueName": [
            "OAdminPublishNewsListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "名称",
                    "type": "string",
                    "id": "vD2oAW5Dd6",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "kRdM2850eZ",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "uHO6OBzlQu",
                    "enable": true,
                    "name": "category",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Hx9GhhRt3r",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "qZOYM7naNU",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询文章列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 名称\n * @param {number} params.type 可选: \n * @param {string} params.category 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminPublishNewsListGet>\n */\nexport const adminPublishNewsListGet = async (params?: IAdminPublishNewsListGet) => {\n\treturn get<OAdminPublishNewsListGet>(`/admin/publish/news/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询文章列表 buildReqGetOrPostTyped\n * @url /admin/publish/news/list\n */\nexport interface IAdminPublishNewsListGet{\n\ttitle?: string; // 名称\n\ttype?: number;\n\tcategory?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询文章列表 buildResAnyTyped\n * @url /admin/publish/news/list\n */\nexport type OAdminPublishNewsListGet = {\n}",
        "resValueCode": "/**\n * @description 查询文章列表 buildResAnyTyped\n * @url /admin/publish/news/list\n */\nexport const OAdminPublishNewsListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/operator/list",
        "url": "/admin/publish/operator/list",
        "pureUrl": "/admin/publish/operator/list",
        "pathReqUrl": "/admin/publish/operator/list",
        "method": "get",
        "apiName": "操作人列表",
        "key": "AdminPublishOperatorListGet",
        "fnName": "adminPublishOperatorListGet",
        "requestBaseName": "IAdminPublishOperatorListGet",
        "requestName": [
            "IAdminPublishOperatorListGet"
        ],
        "responseBaseName": "OAdminPublishOperatorListGet",
        "responseName": [
            "OAdminPublishOperatorListGet"
        ],
        "responseValueName": [
            "OAdminPublishOperatorListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "rk3J8VTcmc",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "CDdPeElmnD",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "bu9Ed7ISfF",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 操作人列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.keyword 可选: \n * @return Promise<OAdminPublishOperatorListGet>\n */\nexport const adminPublishOperatorListGet = async (params?: IAdminPublishOperatorListGet) => {\n\treturn get<OAdminPublishOperatorListGet>(`/admin/publish/operator/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 操作人列表 buildReqGetOrPostTyped\n * @url /admin/publish/operator/list\n */\nexport interface IAdminPublishOperatorListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\tkeyword?: string;\n}",
        "resCode": "/**\n * @description 操作人列表 buildResAnyTyped\n * @url /admin/publish/operator/list\n */\nexport type OAdminPublishOperatorListGet = {\n}",
        "resValueCode": "/**\n * @description 操作人列表 buildResAnyTyped\n * @url /admin/publish/operator/list\n */\nexport const OAdminPublishOperatorListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/origin/list",
        "url": "/admin/publish/origin/list",
        "pureUrl": "/admin/publish/origin/list",
        "pathReqUrl": "/admin/publish/origin/list",
        "method": "get",
        "apiName": "查询来源列表",
        "key": "AdminPublishOriginListGet",
        "fnName": "adminPublishOriginListGet",
        "requestBaseName": "IAdminPublishOriginListGet",
        "requestName": [
            "IAdminPublishOriginListGet"
        ],
        "responseBaseName": "OAdminPublishOriginListGet",
        "responseName": [
            "OAdminPublishOriginListGet"
        ],
        "responseValueName": [
            "OAdminPublishOriginListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "公海ID",
                    "type": "number",
                    "id": "vD2oAW5Dd6",
                    "enable": true,
                    "name": "seaId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "来源名称",
                    "type": "string",
                    "id": "9kWEqvnbi9",
                    "enable": true,
                    "name": "name"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询来源列表 buildFnGetOrPostCode\n * \n * @param {number} params.seaId 可选: 公海ID\n * @param {string} params.name 可选: 来源名称\n * @return Promise<OAdminPublishOriginListGet>\n */\nexport const adminPublishOriginListGet = async (params?: IAdminPublishOriginListGet) => {\n\treturn get<OAdminPublishOriginListGet>(`/admin/publish/origin/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询来源列表 buildReqGetOrPostTyped\n * @url /admin/publish/origin/list\n */\nexport interface IAdminPublishOriginListGet{\n\tseaId?: number; // 公海ID\n\tname?: string; // 来源名称\n}",
        "resCode": "/**\n * @description 查询来源列表 buildResAnyTyped\n * @url /admin/publish/origin/list\n */\nexport type OAdminPublishOriginListGet = {\n}",
        "resValueCode": "/**\n * @description 查询来源列表 buildResAnyTyped\n * @url /admin/publish/origin/list\n */\nexport const OAdminPublishOriginListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/phone/code/list",
        "url": "/admin/publish/phone/code/list",
        "pureUrl": "/admin/publish/phone/code/list",
        "pathReqUrl": "/admin/publish/phone/code/list",
        "method": "get",
        "apiName": "获取手机号区号",
        "key": "AdminPublishPhoneCodeListGet",
        "fnName": "adminPublishPhoneCodeListGet",
        "requestBaseName": "IAdminPublishPhoneCodeListGet",
        "requestName": [
            "IAdminPublishPhoneCodeListGet"
        ],
        "responseBaseName": "OAdminPublishPhoneCodeListGet",
        "responseName": [
            "OAdminPublishPhoneCodeListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminPublishPhoneCodeListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "countryZh": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "countryEn": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "countryEnAbbr": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "countryCode": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "countryIcon": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取手机号区号 buildFnArrayCode\n * \n * @return Promise<OAdminPublishPhoneCodeListGetItem>\n */\nexport const adminPublishPhoneCodeListGet = async (params?: IAdminPublishPhoneCodeListGet) => {\n\treturn get<OAdminPublishPhoneCodeListGetItem[]>(`/admin/publish/phone/code/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取手机号区号 buildReqGetOrPostTyped\n * @url /admin/publish/phone/code/list\n */\nexport interface IAdminPublishPhoneCodeListGet{\n}",
        "deleteResponseName": "OAdminPublishPhoneCodeListGet",
        "resCode": "/**\n * @description 获取手机号区号 buildResArrayTyped\n * @url /admin/publish/phone/code/list\n */\nexport type OAdminPublishPhoneCodeListGetItem = {\n\tcountryCode: string;\n\tcountryEn: string;\n\tcountryEnAbbr: string;\n\tcountryIcon: string;\n\tcountryZh: string;\n\tid: number;  \n}",
        "resValueCode": "/**\n * @description 获取手机号区号 buildResArrayTyped\n * @url /admin/publish/phone/code/list\n */\nexport const OAdminPublishPhoneCodeListGetItemValue = {\n\tcountryCode: '',\n\tcountryEn: '',\n\tcountryEnAbbr: '',\n\tcountryIcon: '',\n\tcountryZh: '',\n\tid: -1,\n}"
    },
    {
        "bodyKey": "get_/admin/publish/product/list",
        "url": "/admin/publish/product/list",
        "pureUrl": "/admin/publish/product/list",
        "pathReqUrl": "/admin/publish/product/list",
        "method": "get",
        "apiName": "产品列表",
        "key": "AdminPublishProductListGet",
        "fnName": "adminPublishProductListGet",
        "requestBaseName": "IAdminPublishProductListGet",
        "requestName": [
            "IAdminPublishProductListGet"
        ],
        "responseBaseName": "OAdminPublishProductListGet",
        "responseName": [
            "OAdminPublishProductListGet"
        ],
        "responseValueName": [
            "OAdminPublishProductListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品名称",
                    "type": "string",
                    "id": "kRa07IY5kZ",
                    "enable": true,
                    "name": "productName",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 产品列表 buildFnGetOrPostCode\n * \n * @param {string} params.productName 可选: 产品名称\n * @return Promise<OAdminPublishProductListGet>\n */\nexport const adminPublishProductListGet = async (params?: IAdminPublishProductListGet) => {\n\treturn get<OAdminPublishProductListGet>(`/admin/publish/product/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 产品列表 buildReqGetOrPostTyped\n * @url /admin/publish/product/list\n */\nexport interface IAdminPublishProductListGet{\n\tproductName?: string; // 产品名称\n}",
        "resCode": "/**\n * @description 产品列表 buildResAnyTyped\n * @url /admin/publish/product/list\n */\nexport type OAdminPublishProductListGet = {\n}",
        "resValueCode": "/**\n * @description 产品列表 buildResAnyTyped\n * @url /admin/publish/product/list\n */\nexport const OAdminPublishProductListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/product/sale/list",
        "url": "/admin/publish/product/sale/list",
        "pureUrl": "/admin/publish/product/sale/list",
        "pathReqUrl": "/admin/publish/product/sale/list",
        "method": "get",
        "apiName": "在售产品列表",
        "key": "AdminPublishProductSaleListGet",
        "fnName": "adminPublishProductSaleListGet",
        "requestBaseName": "IAdminPublishProductSaleListGet",
        "requestName": [
            "IAdminPublishProductSaleListGet"
        ],
        "responseBaseName": "OAdminPublishProductSaleListGet",
        "responseName": [
            "OAdminPublishProductSaleListGet"
        ],
        "responseValueName": [
            "OAdminPublishProductSaleListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品名称",
                    "type": "string",
                    "id": "kRa07IY5kZ",
                    "enable": true,
                    "name": "productName",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 在售产品列表 buildFnGetOrPostCode\n * \n * @param {string} params.productName 可选: 产品名称\n * @return Promise<OAdminPublishProductSaleListGet>\n */\nexport const adminPublishProductSaleListGet = async (params?: IAdminPublishProductSaleListGet) => {\n\treturn get<OAdminPublishProductSaleListGet>(`/admin/publish/product/sale/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 在售产品列表 buildReqGetOrPostTyped\n * @url /admin/publish/product/sale/list\n */\nexport interface IAdminPublishProductSaleListGet{\n\tproductName?: string; // 产品名称\n}",
        "resCode": "/**\n * @description 在售产品列表 buildResAnyTyped\n * @url /admin/publish/product/sale/list\n */\nexport type OAdminPublishProductSaleListGet = {\n}",
        "resValueCode": "/**\n * @description 在售产品列表 buildResAnyTyped\n * @url /admin/publish/product/sale/list\n */\nexport const OAdminPublishProductSaleListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/product/type/list",
        "url": "/admin/publish/product/type/list",
        "pureUrl": "/admin/publish/product/type/list",
        "pathReqUrl": "/admin/publish/product/type/list",
        "method": "get",
        "apiName": "产品类型列表",
        "key": "AdminPublishProductTypeListGet",
        "fnName": "adminPublishProductTypeListGet",
        "requestBaseName": "IAdminPublishProductTypeListGet",
        "requestName": [
            "IAdminPublishProductTypeListGet"
        ],
        "responseBaseName": "OAdminPublishProductTypeListGet",
        "responseName": [
            "OAdminPublishProductTypeListGet"
        ],
        "responseValueName": [
            "OAdminPublishProductTypeListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 产品类型列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminPublishProductTypeListGet>\n */\nexport const adminPublishProductTypeListGet = async (params?: IAdminPublishProductTypeListGet) => {\n\treturn get<OAdminPublishProductTypeListGet>(`/admin/publish/product/type/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 产品类型列表 buildReqGetOrPostTyped\n * @url /admin/publish/product/type/list\n */\nexport interface IAdminPublishProductTypeListGet{\n}",
        "resCode": "/**\n * @description 产品类型列表 buildResAnyTyped\n * @url /admin/publish/product/type/list\n */\nexport type OAdminPublishProductTypeListGet = {\n}",
        "resValueCode": "/**\n * @description 产品类型列表 buildResAnyTyped\n * @url /admin/publish/product/type/list\n */\nexport const OAdminPublishProductTypeListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/publish/sysUser/city/list",
        "url": "/admin/publish/publish/sysUser/city/list",
        "pureUrl": "/admin/publish/publish/sysUser/city/list",
        "pathReqUrl": "/admin/publish/publish/sysUser/city/list",
        "method": "get",
        "apiName": "获取员工归属地",
        "key": "AdminPublishPublishSysUserCityListGet",
        "fnName": "adminPublishPublishSysUserCityListGet",
        "requestBaseName": "IAdminPublishPublishSysUserCityListGet",
        "requestName": [
            "IAdminPublishPublishSysUserCityListGet"
        ],
        "responseBaseName": "OAdminPublishPublishSysUserCityListGet",
        "responseName": [
            "OAdminPublishPublishSysUserCityListGet"
        ],
        "responseValueName": [
            "OAdminPublishPublishSysUserCityListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "条件搜索",
                    "type": "string",
                    "id": "7UdgmN6Fc0",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取员工归属地 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: 条件搜索\n * @return Promise<OAdminPublishPublishSysUserCityListGet>\n */\nexport const adminPublishPublishSysUserCityListGet = async (params?: IAdminPublishPublishSysUserCityListGet) => {\n\treturn get<OAdminPublishPublishSysUserCityListGet>(`/admin/publish/publish/sysUser/city/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取员工归属地 buildReqGetOrPostTyped\n * @url /admin/publish/publish/sysUser/city/list\n */\nexport interface IAdminPublishPublishSysUserCityListGet{\n\tkeyword?: string; // 条件搜索\n}",
        "resCode": "/**\n * @description 获取员工归属地 buildResAnyTyped\n * @url /admin/publish/publish/sysUser/city/list\n */\nexport type OAdminPublishPublishSysUserCityListGet = {\n}",
        "resValueCode": "/**\n * @description 获取员工归属地 buildResAnyTyped\n * @url /admin/publish/publish/sysUser/city/list\n */\nexport const OAdminPublishPublishSysUserCityListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/reason/list/{x}",
        "url": "/admin/publish/reason/list/{type}",
        "pureUrl": "/admin/publish/reason/list/{x}",
        "pathReqUrl": "/admin/publish/reason/list/${type}",
        "method": "get",
        "apiName": "放弃/删除列表",
        "key": "AdminPublishReasonListTypeGet",
        "fnName": "adminPublishReasonListTypeGet",
        "requestBaseName": "IAdminPublishReasonListTypeGet",
        "requestName": [
            "IAdminPublishReasonListTypeGet"
        ],
        "responseBaseName": "OAdminPublishReasonListTypeGet",
        "responseName": [
            "OAdminPublishReasonListTypeGet"
        ],
        "responseValueName": [
            "OAdminPublishReasonListTypeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "type#0",
                    "name": "type",
                    "required": true,
                    "description": "类型 0-放弃 1-删除",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 放弃/删除列表 buildFnPathCode\n * @path {number type 必填: 类型 0-放弃 1-删除}\n * @return Promise<OAdminPublishReasonListTypeGet>\n */\nexport const adminPublishReasonListTypeGet = async (type: number) => {\n\treturn get<OAdminPublishReasonListTypeGet>(`/admin/publish/reason/list/${type}`)\n}",
        "reqCode": "/**\n * @description 放弃/删除列表 buildReqGetOrPostTyped\n * @url /admin/publish/reason/list/{type}\n */\nexport interface IAdminPublishReasonListTypeGet{\n}",
        "resCode": "/**\n * @description 放弃/删除列表 buildResAnyTyped\n * @url /admin/publish/reason/list/{x}\n */\nexport type OAdminPublishReasonListTypeGet = {\n}",
        "resValueCode": "/**\n * @description 放弃/删除列表 buildResAnyTyped\n * @url /admin/publish/reason/list/{x}\n */\nexport const OAdminPublishReasonListTypeGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/sea/list",
        "url": "/admin/publish/sea/list",
        "pureUrl": "/admin/publish/sea/list",
        "pathReqUrl": "/admin/publish/sea/list",
        "method": "get",
        "apiName": "查询公海列表",
        "key": "AdminPublishSeaListGet",
        "fnName": "adminPublishSeaListGet",
        "requestBaseName": "IAdminPublishSeaListGet",
        "requestName": [
            "IAdminPublishSeaListGet"
        ],
        "responseBaseName": "OAdminPublishSeaListGet",
        "responseName": [
            "OAdminPublishSeaListGet"
        ],
        "responseValueName": [
            "OAdminPublishSeaListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "标题",
                    "type": "string",
                    "id": "vD2oAW5Dd6",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询公海列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: 标题\n * @return Promise<OAdminPublishSeaListGet>\n */\nexport const adminPublishSeaListGet = async (params?: IAdminPublishSeaListGet) => {\n\treturn get<OAdminPublishSeaListGet>(`/admin/publish/sea/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询公海列表 buildReqGetOrPostTyped\n * @url /admin/publish/sea/list\n */\nexport interface IAdminPublishSeaListGet{\n\ttitle?: string; // 标题\n}",
        "resCode": "/**\n * @description 查询公海列表 buildResAnyTyped\n * @url /admin/publish/sea/list\n */\nexport type OAdminPublishSeaListGet = {\n}",
        "resValueCode": "/**\n * @description 查询公海列表 buildResAnyTyped\n * @url /admin/publish/sea/list\n */\nexport const OAdminPublishSeaListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/sysChannel/list",
        "url": "/admin/publish/sysChannel/list",
        "pureUrl": "/admin/publish/sysChannel/list",
        "pathReqUrl": "/admin/publish/sysChannel/list",
        "method": "get",
        "apiName": "获取渠道列表",
        "key": "AdminPublishSysChannelListGet",
        "fnName": "adminPublishSysChannelListGet",
        "requestBaseName": "IAdminPublishSysChannelListGet",
        "requestName": [
            "IAdminPublishSysChannelListGet"
        ],
        "responseBaseName": "OAdminPublishSysChannelListGet",
        "responseName": [
            "OAdminPublishSysChannelListGet"
        ],
        "responseValueName": [
            "OAdminPublishSysChannelListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取渠道列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminPublishSysChannelListGet>\n */\nexport const adminPublishSysChannelListGet = async (params?: IAdminPublishSysChannelListGet) => {\n\treturn get<OAdminPublishSysChannelListGet>(`/admin/publish/sysChannel/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取渠道列表 buildReqGetOrPostTyped\n * @url /admin/publish/sysChannel/list\n */\nexport interface IAdminPublishSysChannelListGet{\n}",
        "resCode": "/**\n * @description 获取渠道列表 buildResAnyTyped\n * @url /admin/publish/sysChannel/list\n */\nexport type OAdminPublishSysChannelListGet = {\n}",
        "resValueCode": "/**\n * @description 获取渠道列表 buildResAnyTyped\n * @url /admin/publish/sysChannel/list\n */\nexport const OAdminPublishSysChannelListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/sysUser/list/byLoginUser",
        "url": "/admin/publish/sysUser/list/byLoginUser",
        "pureUrl": "/admin/publish/sysUser/list/byLoginUser",
        "pathReqUrl": "/admin/publish/sysUser/list/byLoginUser",
        "method": "get",
        "apiName": "获取员工列表（一般用于线索里分配至员工）",
        "key": "AdminPublishSysUserListByLoginUserGet",
        "fnName": "adminPublishSysUserListByLoginUserGet",
        "requestBaseName": "IAdminPublishSysUserListByLoginUserGet",
        "requestName": [
            "IAdminPublishSysUserListByLoginUserGet"
        ],
        "responseBaseName": "OAdminPublishSysUserListByLoginUserGet",
        "responseName": [
            "OAdminPublishSysUserListByLoginUserGet"
        ],
        "responseValueName": [
            "OAdminPublishSysUserListByLoginUserGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "团队ID",
                    "type": "number",
                    "id": "7U1M90HNMv",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取员工列表（一般用于线索里分配至员工） buildFnGetOrPostCode\n * \n * @param {number} params.deptId 可选: 团队ID\n * @return Promise<OAdminPublishSysUserListByLoginUserGet>\n */\nexport const adminPublishSysUserListByLoginUserGet = async (params?: IAdminPublishSysUserListByLoginUserGet) => {\n\treturn get<OAdminPublishSysUserListByLoginUserGet>(`/admin/publish/sysUser/list/byLoginUser`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取员工列表（一般用于线索里分配至员工） buildReqGetOrPostTyped\n * @url /admin/publish/sysUser/list/byLoginUser\n */\nexport interface IAdminPublishSysUserListByLoginUserGet{\n\tdeptId?: number; // 团队ID\n}",
        "resCode": "/**\n * @description 获取员工列表（一般用于线索里分配至员工） buildResAnyTyped\n * @url /admin/publish/sysUser/list/byLoginUser\n */\nexport type OAdminPublishSysUserListByLoginUserGet = {\n}",
        "resValueCode": "/**\n * @description 获取员工列表（一般用于线索里分配至员工） buildResAnyTyped\n * @url /admin/publish/sysUser/list/byLoginUser\n */\nexport const OAdminPublishSysUserListByLoginUserGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/tag/list",
        "url": "/admin/publish/tag/list",
        "pureUrl": "/admin/publish/tag/list",
        "pathReqUrl": "/admin/publish/tag/list",
        "method": "get",
        "apiName": "查询所有标签",
        "key": "AdminPublishTagListGet",
        "fnName": "adminPublishTagListGet",
        "requestBaseName": "IAdminPublishTagListGet",
        "requestName": [
            "IAdminPublishTagListGet"
        ],
        "responseBaseName": "OAdminPublishTagListGet",
        "responseName": [
            "OAdminPublishTagListGet"
        ],
        "responseValueName": [
            "OAdminPublishTagListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询所有标签 buildFnGetOrPostCode\n * \n * @return Promise<OAdminPublishTagListGet>\n */\nexport const adminPublishTagListGet = async (params?: IAdminPublishTagListGet) => {\n\treturn get<OAdminPublishTagListGet>(`/admin/publish/tag/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询所有标签 buildReqGetOrPostTyped\n * @url /admin/publish/tag/list\n */\nexport interface IAdminPublishTagListGet{\n}",
        "resCode": "/**\n * @description 查询所有标签 buildResAnyTyped\n * @url /admin/publish/tag/list\n */\nexport type OAdminPublishTagListGet = {\n}",
        "resValueCode": "/**\n * @description 查询所有标签 buildResAnyTyped\n * @url /admin/publish/tag/list\n */\nexport const OAdminPublishTagListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/thread/list/byLoginUser",
        "url": "/admin/publish/thread/list/byLoginUser",
        "pureUrl": "/admin/publish/thread/list/byLoginUser",
        "pathReqUrl": "/admin/publish/thread/list/byLoginUser",
        "method": "get",
        "apiName": "查询我能看到的线索",
        "key": "AdminPublishThreadListByLoginUserGet",
        "fnName": "adminPublishThreadListByLoginUserGet",
        "requestBaseName": "IAdminPublishThreadListByLoginUserGet",
        "requestName": [
            "IAdminPublishThreadListByLoginUserGet"
        ],
        "responseBaseName": "OAdminPublishThreadListByLoginUserGet",
        "responseName": [
            "OAdminPublishThreadListByLoginUserGet"
        ],
        "responseValueName": [
            "OAdminPublishThreadListByLoginUserGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "2YtYL57iim",
                    "enable": true,
                    "name": "pageSize"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "CmjNMxX0EW",
                    "enable": true,
                    "name": "pageNum"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "L4lcA4IFYC",
                    "enable": true,
                    "name": "keyword"
                },
                {
                    "required": false,
                    "description": "线索ids 多个以英文逗号分隔",
                    "type": "string",
                    "id": "qcXEwpUecK",
                    "enable": true,
                    "name": "investorIds"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询我能看到的线索 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.keyword 可选: \n * @param {string} params.investorIds 可选: 线索ids 多个以英文逗号分隔\n * @return Promise<OAdminPublishThreadListByLoginUserGet>\n */\nexport const adminPublishThreadListByLoginUserGet = async (params?: IAdminPublishThreadListByLoginUserGet) => {\n\treturn get<OAdminPublishThreadListByLoginUserGet>(`/admin/publish/thread/list/byLoginUser`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询我能看到的线索 buildReqGetOrPostTyped\n * @url /admin/publish/thread/list/byLoginUser\n */\nexport interface IAdminPublishThreadListByLoginUserGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tkeyword?: string;\n\tinvestorIds?: string; // 线索ids 多个以英文逗号分隔\n}",
        "resCode": "/**\n * @description 查询我能看到的线索 buildResAnyTyped\n * @url /admin/publish/thread/list/byLoginUser\n */\nexport type OAdminPublishThreadListByLoginUserGet = {\n}",
        "resValueCode": "/**\n * @description 查询我能看到的线索 buildResAnyTyped\n * @url /admin/publish/thread/list/byLoginUser\n */\nexport const OAdminPublishThreadListByLoginUserGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/thread/list",
        "url": "/admin/publish/thread/list",
        "pureUrl": "/admin/publish/thread/list",
        "pathReqUrl": "/admin/publish/thread/list",
        "method": "get",
        "apiName": "查询所有线索",
        "key": "AdminPublishThreadListGet",
        "fnName": "adminPublishThreadListGet",
        "requestBaseName": "IAdminPublishThreadListGet",
        "requestName": [
            "IAdminPublishThreadListGet"
        ],
        "responseBaseName": "OAdminPublishThreadListGet",
        "responseName": [
            "OAdminPublishThreadListGet"
        ],
        "responseValueName": [
            "OAdminPublishThreadListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "S2Dmz3DLPH",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "sGdyZkLGre",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "fc2C02VUwi",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询所有线索 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminPublishThreadListGet>\n */\nexport const adminPublishThreadListGet = async (params?: IAdminPublishThreadListGet) => {\n\treturn get<OAdminPublishThreadListGet>(`/admin/publish/thread/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询所有线索 buildReqGetOrPostTyped\n * @url /admin/publish/thread/list\n */\nexport interface IAdminPublishThreadListGet{\n\tkeyword?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询所有线索 buildResAnyTyped\n * @url /admin/publish/thread/list\n */\nexport type OAdminPublishThreadListGet = {\n}",
        "resValueCode": "/**\n * @description 查询所有线索 buildResAnyTyped\n * @url /admin/publish/thread/list\n */\nexport const OAdminPublishThreadListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/publish/todo/category/list",
        "url": "/admin/publish/todo/category/list",
        "pureUrl": "/admin/publish/todo/category/list",
        "pathReqUrl": "/admin/publish/todo/category/list",
        "method": "get",
        "apiName": "查询待办事项类别列表",
        "key": "AdminPublishTodoCategoryListGet",
        "fnName": "adminPublishTodoCategoryListGet",
        "requestBaseName": "IAdminPublishTodoCategoryListGet",
        "requestName": [
            "IAdminPublishTodoCategoryListGet"
        ],
        "responseBaseName": "OAdminPublishTodoCategoryListGet",
        "responseName": [
            "OAdminPublishTodoCategoryListGet"
        ],
        "responseValueName": [
            "OAdminPublishTodoCategoryListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询待办事项类别列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminPublishTodoCategoryListGet>\n */\nexport const adminPublishTodoCategoryListGet = async (params?: IAdminPublishTodoCategoryListGet) => {\n\treturn get<OAdminPublishTodoCategoryListGet>(`/admin/publish/todo/category/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询待办事项类别列表 buildReqGetOrPostTyped\n * @url /admin/publish/todo/category/list\n */\nexport interface IAdminPublishTodoCategoryListGet{\n}",
        "resCode": "/**\n * @description 查询待办事项类别列表 buildResAnyTyped\n * @url /admin/publish/todo/category/list\n */\nexport type OAdminPublishTodoCategoryListGet = {\n}",
        "resValueCode": "/**\n * @description 查询待办事项类别列表 buildResAnyTyped\n * @url /admin/publish/todo/category/list\n */\nexport const OAdminPublishTodoCategoryListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/publish/upload/file",
        "url": "/admin/publish/upload/file",
        "pureUrl": "/admin/publish/upload/file",
        "pathReqUrl": "/admin/publish/upload/file",
        "method": "post",
        "apiName": "上传文件-公共",
        "key": "AdminPublishUploadFilePost",
        "fnName": "adminPublishUploadFilePost",
        "requestBaseName": "IAdminPublishUploadFilePost",
        "requestName": [
            "IAdminPublishUploadFilePostFormData"
        ],
        "responseBaseName": "OAdminPublishUploadFilePost",
        "responseName": [
            "OAdminPublishUploadFilePost"
        ],
        "responseValueName": [
            "OAdminPublishUploadFilePostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "files",
                    "type": "file",
                    "id": "FBmsMtqJu9",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 上传文件-公共 buildFnFileCode\n * \n * @param {file} params.files 必填: \n * @return Promise<OAdminPublishUploadFilePost>\n */\nexport const adminPublishUploadFilePost = async (params?: IAdminPublishUploadFilePostFormData) => {\n\treturn post<OAdminPublishUploadFilePost>(`/admin/publish/upload/file`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IAdminPublishUploadFilePost",
        "reqCode": "/**\n * @description 上传文件-公共 buildReqFileTyped\n * @url /admin/publish/upload/file\n */\nexport interface IAdminPublishUploadFilePostFormData extends FormData{\n\tappend: (name: 'files', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 上传文件-公共 buildResAnyTyped\n * @url /admin/publish/upload/file\n */\nexport type OAdminPublishUploadFilePost = {\n}",
        "resValueCode": "/**\n * @description 上传文件-公共 buildResAnyTyped\n * @url /admin/publish/upload/file\n */\nexport const OAdminPublishUploadFilePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/publish/upload/private/file",
        "url": "/admin/publish/upload/private/file",
        "pureUrl": "/admin/publish/upload/private/file",
        "pathReqUrl": "/admin/publish/upload/private/file",
        "method": "post",
        "apiName": "上传文件-私有",
        "key": "AdminPublishUploadPrivateFilePost",
        "fnName": "adminPublishUploadPrivateFilePost",
        "requestBaseName": "IAdminPublishUploadPrivateFilePost",
        "requestName": [
            "IAdminPublishUploadPrivateFilePostFormData"
        ],
        "responseBaseName": "OAdminPublishUploadPrivateFilePost",
        "responseName": [
            "OAdminPublishUploadPrivateFilePost"
        ],
        "responseValueName": [
            "OAdminPublishUploadPrivateFilePostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "files",
                    "type": "file",
                    "id": "FBmsMtqJu9",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 上传文件-私有 buildFnFileCode\n * \n * @param {file} params.files 必填: \n * @return Promise<OAdminPublishUploadPrivateFilePost>\n */\nexport const adminPublishUploadPrivateFilePost = async (params?: IAdminPublishUploadPrivateFilePostFormData) => {\n\treturn post<OAdminPublishUploadPrivateFilePost>(`/admin/publish/upload/private/file`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IAdminPublishUploadPrivateFilePost",
        "reqCode": "/**\n * @description 上传文件-私有 buildReqFileTyped\n * @url /admin/publish/upload/private/file\n */\nexport interface IAdminPublishUploadPrivateFilePostFormData extends FormData{\n\tappend: (name: 'files', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 上传文件-私有 buildResAnyTyped\n * @url /admin/publish/upload/private/file\n */\nexport type OAdminPublishUploadPrivateFilePost = {\n}",
        "resValueCode": "/**\n * @description 上传文件-私有 buildResAnyTyped\n * @url /admin/publish/upload/private/file\n */\nexport const OAdminPublishUploadPrivateFilePostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/reason/{x}",
        "url": "/admin/reason/{id}",
        "pureUrl": "/admin/reason/{x}",
        "pathReqUrl": "/admin/reason/${id}",
        "method": "delete",
        "apiName": "删除原因",
        "key": "AdminReasonIdDelete",
        "fnName": "adminReasonIdDelete",
        "requestBaseName": "IAdminReasonIdDelete",
        "requestName": [
            "IAdminReasonIdDelete"
        ],
        "responseBaseName": "OAdminReasonIdDelete",
        "responseName": [
            "OAdminReasonIdDelete"
        ],
        "responseValueName": [
            "OAdminReasonIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除原因 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminReasonIdDelete>\n */\nexport const adminReasonIdDelete = async (id: number) => {\n\treturn del<OAdminReasonIdDelete>(`/admin/reason/${id}`)\n}",
        "reqCode": "/**\n * @description 删除原因 buildReqGetOrPostTyped\n * @url /admin/reason/{id}\n */\nexport interface IAdminReasonIdDelete{\n}",
        "resCode": "/**\n * @description 删除原因 buildResAnyTyped\n * @url /admin/reason/{x}\n */\nexport type OAdminReasonIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除原因 buildResAnyTyped\n * @url /admin/reason/{x}\n */\nexport const OAdminReasonIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/reason/{x}",
        "url": "/admin/reason/{id}",
        "pureUrl": "/admin/reason/{x}",
        "pathReqUrl": "/admin/reason/${id}",
        "method": "get",
        "apiName": "查询放弃/删除详情",
        "key": "AdminReasonIdGet",
        "fnName": "adminReasonIdGet",
        "requestBaseName": "IAdminReasonIdGet",
        "requestName": [
            "IAdminReasonIdGet"
        ],
        "responseBaseName": "OAdminReasonIdGet",
        "responseName": [
            "OAdminReasonIdGet"
        ],
        "responseValueName": [
            "OAdminReasonIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询放弃/删除详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminReasonIdGet>\n */\nexport const adminReasonIdGet = async (id: number) => {\n\treturn get<OAdminReasonIdGet>(`/admin/reason/${id}`)\n}",
        "reqCode": "/**\n * @description 查询放弃/删除详情 buildReqGetOrPostTyped\n * @url /admin/reason/{id}\n */\nexport interface IAdminReasonIdGet{\n}",
        "resCode": "/**\n * @description 查询放弃/删除详情 buildResAnyTyped\n * @url /admin/reason/{x}\n */\nexport type OAdminReasonIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询放弃/删除详情 buildResAnyTyped\n * @url /admin/reason/{x}\n */\nexport const OAdminReasonIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/reason/list/{x}",
        "url": "/admin/reason/list/{type}",
        "pureUrl": "/admin/reason/list/{x}",
        "pathReqUrl": "/admin/reason/list/${type}",
        "method": "get",
        "apiName": "查询放弃/删除列表",
        "key": "AdminReasonListTypeGet",
        "fnName": "adminReasonListTypeGet",
        "requestBaseName": "IAdminReasonListTypeGet",
        "requestName": [
            "IAdminReasonListTypeGet",
            "IAdminReasonListTypeGetGroup"
        ],
        "responseBaseName": "OAdminReasonListTypeGet",
        "responseName": [
            "OAdminReasonListTypeGet"
        ],
        "responseValueName": [
            "OAdminReasonListTypeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "5Vb0SraO7A",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "WJM5whjEff",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [
                {
                    "id": "type#0",
                    "name": "type",
                    "required": true,
                    "description": "类型 0-放弃 1-删除",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询放弃/删除列表 buildFnPathCode\n * @path {number type 必填: 类型 0-放弃 1-删除}\n * @query {number} pageNum 可选: \n * @query {number} pageSize 可选: \n * @return Promise<OAdminReasonListTypeGet>\n */\nexport const adminReasonListTypeGet = async ({path, params}: IAdminReasonListTypeGetGroup) => {\n\treturn get<OAdminReasonListTypeGet>(`/admin/reason/list/${path.type}`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询放弃/删除列表 buildReqGetOrPostTyped\n * @url /admin/reason/list/{type}\n */\nexport interface IAdminReasonListTypeGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}/**\n * @description 查询放弃/删除列表 buildReqGetOrPostTyped\n * @url /admin/reason/list/{type}\n */\nexport interface IAdminReasonListTypeGetGroup {\n  path: {\n\t\ttype: number; // 类型 0-放弃 1-删除\n\t};\n  params: IAdminReasonListTypeGet;\n}",
        "resCode": "/**\n * @description 查询放弃/删除列表 buildResAnyTyped\n * @url /admin/reason/list/{x}\n */\nexport type OAdminReasonListTypeGet = {\n}",
        "resValueCode": "/**\n * @description 查询放弃/删除列表 buildResAnyTyped\n * @url /admin/reason/list/{x}\n */\nexport const OAdminReasonListTypeGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/reason",
        "url": "/admin/reason",
        "pureUrl": "/admin/reason",
        "pathReqUrl": "/admin/reason",
        "method": "post",
        "apiName": "添加放弃/删除原因",
        "key": "AdminReasonPost",
        "fnName": "adminReasonPost",
        "requestBaseName": "IAdminReasonPost",
        "requestName": [
            "IAdminReasonPost"
        ],
        "responseBaseName": "OAdminReasonPost",
        "responseName": [
            "OAdminReasonPost"
        ],
        "responseValueName": [
            "OAdminReasonPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "reason",
                    "type": "string",
                    "description": "内容",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "type",
                    "type": "number",
                    "description": "类型 0-放弃 1-删除",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加放弃/删除原因 buildFnGetOrPostCode\n * \n * @param {string} params.reason 必填: 内容\n * @param {number} params.type 必填: 类型 0-放弃 1-删除\n * @return Promise<OAdminReasonPost>\n */\nexport const adminReasonPost = async (params?: IAdminReasonPost) => {\n\treturn post<OAdminReasonPost>(`/admin/reason`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加放弃/删除原因 buildReqGetOrPostTyped\n * @url /admin/reason\n */\nexport interface IAdminReasonPost{\n\treason: string; // 内容\n\ttype: number; // 类型 0-放弃 1-删除\n}",
        "resCode": "/**\n * @description 添加放弃/删除原因 buildResAnyTyped\n * @url /admin/reason\n */\nexport type OAdminReasonPost = {\n}",
        "resValueCode": "/**\n * @description 添加放弃/删除原因 buildResAnyTyped\n * @url /admin/reason\n */\nexport const OAdminReasonPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/reason",
        "url": "/admin/reason",
        "pureUrl": "/admin/reason",
        "pathReqUrl": "/admin/reason",
        "method": "put",
        "apiName": "编辑放弃/删除原因",
        "key": "AdminReasonPut",
        "fnName": "adminReasonPut",
        "requestBaseName": "IAdminReasonPut",
        "requestName": [
            "IAdminReasonPut"
        ],
        "responseBaseName": "OAdminReasonPut",
        "responseName": [
            "OAdminReasonPut"
        ],
        "responseValueName": [
            "OAdminReasonPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "reason",
                    "type": "string",
                    "description": "内容",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑放弃/删除原因 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: ID\n * @param {string} params.reason 必填: 内容\n * @return Promise<OAdminReasonPut>\n */\nexport const adminReasonPut = async (params?: IAdminReasonPut) => {\n\treturn put<OAdminReasonPut>(`/admin/reason`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑放弃/删除原因 buildReqGetOrPostTyped\n * @url /admin/reason\n */\nexport interface IAdminReasonPut{\n\tid: number; // ID\n\treason: string; // 内容\n}",
        "resCode": "/**\n * @description 编辑放弃/删除原因 buildResAnyTyped\n * @url /admin/reason\n */\nexport type OAdminReasonPut = {\n}",
        "resValueCode": "/**\n * @description 编辑放弃/删除原因 buildResAnyTyped\n * @url /admin/reason\n */\nexport const OAdminReasonPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/reason/status",
        "url": "/admin/reason/status",
        "pureUrl": "/admin/reason/status",
        "pathReqUrl": "/admin/reason/status",
        "method": "put",
        "apiName": "编辑放弃/删除原因状态",
        "key": "AdminReasonStatusPut",
        "fnName": "adminReasonStatusPut",
        "requestBaseName": "IAdminReasonStatusPut",
        "requestName": [
            "IAdminReasonStatusPut"
        ],
        "responseBaseName": "OAdminReasonStatusPut",
        "responseName": [
            "OAdminReasonStatusPut"
        ],
        "responseValueName": [
            "OAdminReasonStatusPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑放弃/删除原因状态 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: ID\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @return Promise<OAdminReasonStatusPut>\n */\nexport const adminReasonStatusPut = async (params?: IAdminReasonStatusPut) => {\n\treturn put<OAdminReasonStatusPut>(`/admin/reason/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑放弃/删除原因状态 buildReqGetOrPostTyped\n * @url /admin/reason/status\n */\nexport interface IAdminReasonStatusPut{\n\tid: number; // ID\n\tstatus: number; // 状态 0-正常 1-禁用\n}",
        "resCode": "/**\n * @description 编辑放弃/删除原因状态 buildResAnyTyped\n * @url /admin/reason/status\n */\nexport type OAdminReasonStatusPut = {\n}",
        "resValueCode": "/**\n * @description 编辑放弃/删除原因状态 buildResAnyTyped\n * @url /admin/reason/status\n */\nexport const OAdminReasonStatusPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/rebate/list",
        "url": "/admin/rebate/list",
        "pureUrl": "/admin/rebate/list",
        "pathReqUrl": "/admin/rebate/list",
        "method": "get",
        "apiName": "查询佣金记录",
        "key": "AdminRebateListGet",
        "fnName": "adminRebateListGet",
        "requestBaseName": "IAdminRebateListGet",
        "requestName": [
            "IAdminRebateListGet"
        ],
        "responseBaseName": "OAdminRebateListGet",
        "responseName": [
            "OAdminRebateListGet"
        ],
        "responseValueName": [
            "OAdminRebateListGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "id": "UCQQE1OHi4",
                    "name": "id",
                    "required": false,
                    "description": "投资者ID",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "jGx4WIYiMM",
                    "name": "pageNum",
                    "required": false,
                    "description": "页码",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "fnxUSNrVez",
                    "name": "pageSize",
                    "required": false,
                    "description": "条数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "8Txf4ctwmj",
                    "name": "rebateNo",
                    "required": false,
                    "description": "佣金流水号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者编号",
                    "type": "string",
                    "id": "e88FUJ12v5",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者邮箱",
                    "type": "string",
                    "id": "naWa9cAIVW",
                    "enable": true,
                    "name": "investorEmail",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者手机",
                    "type": "string",
                    "id": "3FMPYsy7Gi",
                    "enable": true,
                    "name": "investorPhone",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "投资者名称",
                    "type": "string",
                    "id": "fjrKZZorn7",
                    "enable": true,
                    "name": "investorName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "操作人ID",
                    "type": "number",
                    "id": "fV5CazFlLl",
                    "enable": true,
                    "name": "createById",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值时间",
                    "type": "string",
                    "id": "hqEbEIi9sr",
                    "enable": true,
                    "name": "beginTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值时间",
                    "type": "string",
                    "id": "SqUZKKPclo",
                    "enable": true,
                    "name": "endTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值金额",
                    "type": "number",
                    "id": "3i6DOlxX84",
                    "enable": true,
                    "name": "minAmount",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "充值金额",
                    "type": "number",
                    "id": "tI8NpK3RfX",
                    "enable": true,
                    "name": "maxAmount",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询佣金记录 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: 投资者ID\n * @param {number} params.pageNum 可选: 页码\n * @param {number} params.pageSize 可选: 条数\n * @param {string} params.rebateNo 可选: 佣金流水号\n * @param {string} params.investorNo 可选: 投资者编号\n * @param {string} params.investorEmail 可选: 投资者邮箱\n * @param {string} params.investorPhone 可选: 投资者手机\n * @param {string} params.investorName 可选: 投资者名称\n * @param {number} params.createById 可选: 操作人ID\n * @param {string} params.beginTime 可选: 充值时间\n * @param {string} params.endTime 可选: 充值时间\n * @param {number} params.minAmount 可选: 充值金额\n * @param {number} params.maxAmount 可选: 充值金额\n * @return Promise<OAdminRebateListGet>\n */\nexport const adminRebateListGet = async (params?: IAdminRebateListGet) => {\n\treturn get<OAdminRebateListGet>(`/admin/rebate/list`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 查询佣金记录 buildReqGetOrPostTyped\n * @url /admin/rebate/list\n */\nexport interface IAdminRebateListGet{\n\tid?: number; // 投资者ID\n\tpageNum?: number; // 页码\n\tpageSize?: number; // 条数\n\trebateNo?: string; // 佣金流水号\n\tinvestorNo?: string; // 投资者编号\n\tinvestorEmail?: string; // 投资者邮箱\n\tinvestorPhone?: string; // 投资者手机\n\tinvestorName?: string; // 投资者名称\n\tcreateById?: number; // 操作人ID\n\tbeginTime?: string; // 充值时间\n\tendTime?: string; // 充值时间\n\tminAmount?: number; // 充值金额\n\tmaxAmount?: number; // 充值金额\n}",
        "resCode": "/**\n * @description 查询佣金记录 buildResAnyTyped\n * @url /admin/rebate/list\n */\nexport type OAdminRebateListGet = {\n}",
        "resValueCode": "/**\n * @description 查询佣金记录 buildResAnyTyped\n * @url /admin/rebate/list\n */\nexport const OAdminRebateListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/rebate",
        "url": "/admin/rebate",
        "pureUrl": "/admin/rebate",
        "pathReqUrl": "/admin/rebate",
        "method": "post",
        "apiName": "添加佣金",
        "key": "AdminRebatePost",
        "fnName": "adminRebatePost",
        "requestBaseName": "IAdminRebatePost",
        "requestName": [
            "IAdminRebatePost"
        ],
        "responseBaseName": "OAdminRebatePost",
        "responseName": [
            "OAdminRebatePost"
        ],
        "responseValueName": [
            "OAdminRebatePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "amount",
                    "type": "number",
                    "description": "金额",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "bankAccountId",
                    "type": "number",
                    "description": "银行卡账户ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加佣金 buildFnGetOrPostCode\n * \n * @param {number} params.amount 必填: 金额\n * @param {number} params.bankAccountId 必填: 银行卡账户ID\n * @param {number} params.investorId 必填: 投资者ID\n * @param {string} params.remark 可选: 备注\n * @return Promise<OAdminRebatePost>\n */\nexport const adminRebatePost = async (params?: IAdminRebatePost) => {\n\treturn post<OAdminRebatePost>(`/admin/rebate`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加佣金 buildReqGetOrPostTyped\n * @url /admin/rebate\n */\nexport interface IAdminRebatePost{\n\tamount: number; // 金额\n\tbankAccountId: number; // 银行卡账户ID\n\tinvestorId: number; // 投资者ID\n\tremark?: string; // 备注\n}",
        "resCode": "/**\n * @description 添加佣金 buildResAnyTyped\n * @url /admin/rebate\n */\nexport type OAdminRebatePost = {\n}",
        "resValueCode": "/**\n * @description 添加佣金 buildResAnyTyped\n * @url /admin/rebate\n */\nexport const OAdminRebatePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/reserve/audit",
        "url": "/admin/reserve/audit",
        "pureUrl": "/admin/reserve/audit",
        "pathReqUrl": "/admin/reserve/audit",
        "method": "post",
        "apiName": "预约审核",
        "key": "AdminReserveAuditPost",
        "fnName": "adminReserveAuditPost",
        "requestBaseName": "IAdminReserveAuditPost",
        "requestName": [
            "IAdminReserveAuditPost"
        ],
        "responseBaseName": "OAdminReserveAuditPost",
        "responseName": [
            "OAdminReserveAuditPost"
        ],
        "responseValueName": [
            "OAdminReserveAuditPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "预定ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "reason",
                    "type": "string",
                    "description": "拒绝原因",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-通过 2-拒绝",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 预约审核 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 预定ID\n * @param {string} params.reason 可选: 拒绝原因\n * @param {number} params.status 必填: 1-通过 2-拒绝\n * @return Promise<OAdminReserveAuditPost>\n */\nexport const adminReserveAuditPost = async (params?: IAdminReserveAuditPost) => {\n\treturn post<OAdminReserveAuditPost>(`/admin/reserve/audit`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 预约审核 buildReqGetOrPostTyped\n * @url /admin/reserve/audit\n */\nexport interface IAdminReserveAuditPost{\n\tid: number; // 预定ID\n\treason?: string; // 拒绝原因\n\tstatus: number; // 1-通过 2-拒绝\n}",
        "resCode": "/**\n * @description 预约审核 buildResAnyTyped\n * @url /admin/reserve/audit\n */\nexport type OAdminReserveAuditPost = {\n}",
        "resValueCode": "/**\n * @description 预约审核 buildResAnyTyped\n * @url /admin/reserve/audit\n */\nexport const OAdminReserveAuditPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/reserve/list",
        "url": "/admin/reserve/list",
        "pureUrl": "/admin/reserve/list",
        "pathReqUrl": "/admin/reserve/list",
        "method": "get",
        "apiName": "预定列表",
        "key": "AdminReserveListGet",
        "fnName": "adminReserveListGet",
        "requestBaseName": "IAdminReserveListGet",
        "requestName": [
            "IAdminReserveListGet"
        ],
        "responseBaseName": "OAdminReserveListGet",
        "responseName": [
            "OAdminReserveListGet"
        ],
        "responseValueName": [
            "OAdminReserveListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0未处理 1已处理",
                    "type": "number",
                    "id": "YzvRV3PED4",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "1Yl3mq4Kaw",
                    "enable": true,
                    "name": "investorNo",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "IUc7vxNIsm",
                    "enable": true,
                    "name": "investorName",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "r2L89egYvZ",
                    "enable": true,
                    "name": "investorEmail",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "B00GI8pi0R",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "LA9QPVbYzL",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 预定列表 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0未处理 1已处理\n * @param {string} params.investorNo 可选: \n * @param {string} params.investorName 可选: \n * @param {string} params.investorEmail 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminReserveListGet>\n */\nexport const adminReserveListGet = async (params?: IAdminReserveListGet) => {\n\treturn get<OAdminReserveListGet>(`/admin/reserve/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 预定列表 buildReqGetOrPostTyped\n * @url /admin/reserve/list\n */\nexport interface IAdminReserveListGet{\n\tstatus?: number; // 状态 0未处理 1已处理\n\tinvestorNo?: string;\n\tinvestorName?: string;\n\tinvestorEmail?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 预定列表 buildResAnyTyped\n * @url /admin/reserve/list\n */\nexport type OAdminReserveListGet = {\n}",
        "resValueCode": "/**\n * @description 预定列表 buildResAnyTyped\n * @url /admin/reserve/list\n */\nexport const OAdminReserveListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/role/list/all",
        "url": "/admin/role/list/all",
        "pureUrl": "/admin/role/list/all",
        "pathReqUrl": "/admin/role/list/all",
        "method": "get",
        "apiName": "查询所有可用角色",
        "key": "AdminRoleListAllGet",
        "fnName": "adminRoleListAllGet",
        "requestBaseName": "IAdminRoleListAllGet",
        "requestName": [
            "IAdminRoleListAllGet"
        ],
        "responseBaseName": "OAdminRoleListAllGet",
        "responseName": [
            "OAdminRoleListAllGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminRoleListAllGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询所有可用角色 buildFnArrayCode\n * \n * @return Promise<OAdminRoleListAllGetItem>\n */\nexport const adminRoleListAllGet = async (params?: IAdminRoleListAllGet) => {\n\treturn get<OAdminRoleListAllGetItem[]>(`/admin/role/list/all`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询所有可用角色 buildReqGetOrPostTyped\n * @url /admin/role/list/all\n */\nexport interface IAdminRoleListAllGet{\n}",
        "deleteResponseName": "OAdminRoleListAllGet",
        "resCode": "/**\n * @description 查询所有可用角色 buildResArrayTyped\n * @url /admin/role/list/all\n */\nexport type OAdminRoleListAllGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询所有可用角色 buildResArrayTyped\n * @url /admin/role/list/all\n */\nexport const OAdminRoleListAllGetItemValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/role/list",
        "url": "/admin/role/list",
        "pureUrl": "/admin/role/list",
        "pathReqUrl": "/admin/role/list",
        "method": "get",
        "apiName": "查询角色列表",
        "key": "AdminRoleListGet",
        "fnName": "adminRoleListGet",
        "requestBaseName": "IAdminRoleListGet",
        "requestName": [
            "IAdminRoleListGet"
        ],
        "responseBaseName": "OAdminRoleListGet",
        "responseName": [
            "OAdminRoleListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "4IfxDwCfe3",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "sampleValue": ""
                },
                {
                    "id": "UTEDON8zIS",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "sampleValue": ""
                },
                {
                    "id": "qk5hh9nf6J",
                    "name": "roleName",
                    "required": false,
                    "description": "角色名称",
                    "type": "string",
                    "sampleValue": ""
                },
                {
                    "id": "5I2URSuZK5",
                    "name": "status",
                    "required": false,
                    "description": "角色状态 0-正常 1-停用",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminRoleListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询角色列表 buildFnArrayCode\n * \n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {string} params.roleName 可选: 角色名称\n * @param {number} params.status 可选: 角色状态 0-正常 1-停用}\n * @return Promise<OAdminRoleListGetItem>\n */\nexport const adminRoleListGet = async (params?: IAdminRoleListGet) => {\n\treturn get<OAdminRoleListGetItem[]>(`/admin/role/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询角色列表 buildReqGetOrPostTyped\n * @url /admin/role/list\n */\nexport interface IAdminRoleListGet{\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\troleName?: string; // 角色名称\n\tstatus?: number; // 角色状态 0-正常 1-停用\n}",
        "deleteResponseName": "OAdminRoleListGet",
        "resCode": "/**\n * @description 查询角色列表 buildResArrayTyped\n * @url /admin/role/list\n */\nexport type OAdminRoleListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询角色列表 buildResArrayTyped\n * @url /admin/role/list\n */\nexport const OAdminRoleListGetItemValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/role/perms",
        "url": "/admin/role/perms",
        "pureUrl": "/admin/role/perms",
        "pathReqUrl": "/admin/role/perms",
        "method": "put",
        "apiName": "修改角色权限",
        "key": "AdminRolePermsPut",
        "fnName": "adminRolePermsPut",
        "requestBaseName": "IAdminRolePermsPut",
        "requestName": [
            "IAdminRolePermsPut"
        ],
        "responseBaseName": "OAdminRolePermsPut",
        "responseName": [
            "OAdminRolePermsPut"
        ],
        "responseValueName": [
            "OAdminRolePermsPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "menuIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "菜单/接口ID集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "menuType",
                    "type": "string",
                    "description": "C-菜单 F-接口",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "roleId",
                    "type": "number",
                    "description": "角色ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改角色权限 buildFnGetOrPostCode\n * \n * @param {any[]} params.menuIds 必填: 菜单/接口ID集合\n * @param {string} params.menuType 必填: C-菜单 F-接口\n * @param {number} params.roleId 必填: 角色ID\n * @return Promise<OAdminRolePermsPut>\n */\nexport const adminRolePermsPut = async (params?: IAdminRolePermsPut) => {\n\treturn put<OAdminRolePermsPut>(`/admin/role/perms`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改角色权限 buildReqGetOrPostTyped\n * @url /admin/role/perms\n */\nexport interface IAdminRolePermsPut{\n\tmenuIds: any[]; // 菜单/接口ID集合\n\tmenuType: string; // C-菜单 F-接口\n\troleId: number; // 角色ID\n}",
        "resCode": "/**\n * @description 修改角色权限 buildResAnyTyped\n * @url /admin/role/perms\n */\nexport type OAdminRolePermsPut = {\n}",
        "resValueCode": "/**\n * @description 修改角色权限 buildResAnyTyped\n * @url /admin/role/perms\n */\nexport const OAdminRolePermsPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/role",
        "url": "/admin/role",
        "pureUrl": "/admin/role",
        "pathReqUrl": "/admin/role",
        "method": "post",
        "apiName": "新增角色",
        "key": "AdminRolePost",
        "fnName": "adminRolePost",
        "requestBaseName": "IAdminRolePost",
        "requestName": [
            "IAdminRolePost"
        ],
        "responseBaseName": "OAdminRolePost",
        "responseName": [
            "OAdminRolePost"
        ],
        "responseValueName": [
            "OAdminRolePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "menuIds",
                    "type": "any[]",
                    "description": "菜单id列表",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "roleId",
                    "type": "number",
                    "description": "角色id",
                    "oldType": "number"
                },
                {
                    "name": "roleKey",
                    "type": "string",
                    "description": "角色key",
                    "oldType": "string"
                },
                {
                    "name": "roleName",
                    "type": "string",
                    "description": "角色名称",
                    "oldType": "string"
                },
                {
                    "name": "roleSort",
                    "type": "number",
                    "description": "角色排序",
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "角色状态 0-正常 1-停用",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 新增角色 buildFnGetOrPostCode\n * \n * @param {any[]} params.menuIds 可选: 菜单id列表\n * @param {string} params.remark 可选: 备注\n * @param {number} params.roleId 可选: 角色id\n * @param {string} params.roleKey 可选: 角色key\n * @param {string} params.roleName 可选: 角色名称\n * @param {number} params.roleSort 可选: 角色排序\n * @param {number} params.status 可选: 角色状态 0-正常 1-停用\n * @return Promise<OAdminRolePost>\n */\nexport const adminRolePost = async (params?: IAdminRolePost) => {\n\treturn post<OAdminRolePost>(`/admin/role`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增角色 buildReqGetOrPostTyped\n * @url /admin/role\n */\nexport interface IAdminRolePost{\n\tmenuIds?: any[]; // 菜单id列表\n\tremark?: string; // 备注\n\troleId?: number; // 角色id\n\troleKey?: string; // 角色key\n\troleName?: string; // 角色名称\n\troleSort?: number; // 角色排序\n\tstatus?: number; // 角色状态 0-正常 1-停用\n}",
        "resCode": "/**\n * @description 新增角色 buildResAnyTyped\n * @url /admin/role\n */\nexport type OAdminRolePost = {\n}",
        "resValueCode": "/**\n * @description 新增角色 buildResAnyTyped\n * @url /admin/role\n */\nexport const OAdminRolePostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/role",
        "url": "/admin/role",
        "pureUrl": "/admin/role",
        "pathReqUrl": "/admin/role",
        "method": "put",
        "apiName": "修改角色",
        "key": "AdminRolePut",
        "fnName": "adminRolePut",
        "requestBaseName": "IAdminRolePut",
        "requestName": [
            "IAdminRolePut"
        ],
        "responseBaseName": "OAdminRolePut",
        "responseName": [
            "OAdminRolePut"
        ],
        "responseValueName": [
            "OAdminRolePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "menuIds",
                    "type": "any[]",
                    "description": "菜单id列表",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "roleId",
                    "type": "number",
                    "description": "角色id",
                    "oldType": "number"
                },
                {
                    "name": "roleKey",
                    "type": "string",
                    "description": "角色key",
                    "oldType": "string"
                },
                {
                    "name": "roleName",
                    "type": "string",
                    "description": "角色名称",
                    "oldType": "string"
                },
                {
                    "name": "roleSort",
                    "type": "number",
                    "description": "角色排序",
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "角色状态 0-正常 1-停用",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改角色 buildFnGetOrPostCode\n * \n * @param {any[]} params.menuIds 可选: 菜单id列表\n * @param {string} params.remark 可选: 备注\n * @param {number} params.roleId 可选: 角色id\n * @param {string} params.roleKey 可选: 角色key\n * @param {string} params.roleName 可选: 角色名称\n * @param {number} params.roleSort 可选: 角色排序\n * @param {number} params.status 可选: 角色状态 0-正常 1-停用\n * @return Promise<OAdminRolePut>\n */\nexport const adminRolePut = async (params?: IAdminRolePut) => {\n\treturn put<OAdminRolePut>(`/admin/role`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改角色 buildReqGetOrPostTyped\n * @url /admin/role\n */\nexport interface IAdminRolePut{\n\tmenuIds?: any[]; // 菜单id列表\n\tremark?: string; // 备注\n\troleId?: number; // 角色id\n\troleKey?: string; // 角色key\n\troleName?: string; // 角色名称\n\troleSort?: number; // 角色排序\n\tstatus?: number; // 角色状态 0-正常 1-停用\n}",
        "resCode": "/**\n * @description 修改角色 buildResAnyTyped\n * @url /admin/role\n */\nexport type OAdminRolePut = {\n}",
        "resValueCode": "/**\n * @description 修改角色 buildResAnyTyped\n * @url /admin/role\n */\nexport const OAdminRolePutValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/role/{x}",
        "url": "/admin/role/{roleId}",
        "pureUrl": "/admin/role/{x}",
        "pathReqUrl": "/admin/role/${roleId}",
        "method": "delete",
        "apiName": "删除角色",
        "key": "AdminRoleRoleIdDelete",
        "fnName": "adminRoleRoleIdDelete",
        "requestBaseName": "IAdminRoleRoleIdDelete",
        "requestName": [
            "IAdminRoleRoleIdDelete"
        ],
        "responseBaseName": "OAdminRoleRoleIdDelete",
        "responseName": [
            "OAdminRoleRoleIdDelete"
        ],
        "responseValueName": [
            "OAdminRoleRoleIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "roleId#0",
                    "name": "roleId",
                    "required": true,
                    "description": "roleId",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 删除角色 buildFnPathCode\n * @path {number roleId 必填: }\n * @return Promise<OAdminRoleRoleIdDelete>\n */\nexport const adminRoleRoleIdDelete = async (roleId: number) => {\n\treturn del<OAdminRoleRoleIdDelete>(`/admin/role/${roleId}`)\n}",
        "reqCode": "/**\n * @description 删除角色 buildReqGetOrPostTyped\n * @url /admin/role/{roleId}\n */\nexport interface IAdminRoleRoleIdDelete{\n}",
        "resCode": "/**\n * @description 删除角色 buildResAnyTyped\n * @url /admin/role/{x}\n */\nexport type OAdminRoleRoleIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除角色 buildResAnyTyped\n * @url /admin/role/{x}\n */\nexport const OAdminRoleRoleIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/role/{x}",
        "url": "/admin/role/{roleId}",
        "pureUrl": "/admin/role/{x}",
        "pathReqUrl": "/admin/role/${roleId}",
        "method": "get",
        "apiName": "查询角色详情",
        "key": "AdminRoleRoleIdGet",
        "fnName": "adminRoleRoleIdGet",
        "requestBaseName": "IAdminRoleRoleIdGet",
        "requestName": [
            "IAdminRoleRoleIdGet"
        ],
        "responseBaseName": "OAdminRoleRoleIdGet",
        "responseName": [
            "OAdminRoleRoleIdGet"
        ],
        "responseValueName": [
            "OAdminRoleRoleIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "roleId#0",
                    "name": "roleId",
                    "required": true,
                    "description": "roleId",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询角色详情 buildFnPathCode\n * @path {number roleId 必填: }\n * @return Promise<OAdminRoleRoleIdGet>\n */\nexport const adminRoleRoleIdGet = async (roleId: number) => {\n\treturn get<OAdminRoleRoleIdGet>(`/admin/role/${roleId}`)\n}",
        "reqCode": "/**\n * @description 查询角色详情 buildReqGetOrPostTyped\n * @url /admin/role/{roleId}\n */\nexport interface IAdminRoleRoleIdGet{\n}",
        "resCode": "/**\n * @description 查询角色详情 buildResAnyTyped\n * @url /admin/role/{x}\n */\nexport type OAdminRoleRoleIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询角色详情 buildResAnyTyped\n * @url /admin/role/{x}\n */\nexport const OAdminRoleRoleIdGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/sea/{x}",
        "url": "/admin/sea/{id}",
        "pureUrl": "/admin/sea/{x}",
        "pathReqUrl": "/admin/sea/${id}",
        "method": "delete",
        "apiName": "删除公海",
        "key": "AdminSeaIdDelete",
        "fnName": "adminSeaIdDelete",
        "requestBaseName": "IAdminSeaIdDelete",
        "requestName": [
            "IAdminSeaIdDelete"
        ],
        "responseBaseName": "OAdminSeaIdDelete",
        "responseName": [
            "OAdminSeaIdDelete"
        ],
        "responseValueName": [
            "OAdminSeaIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除公海 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminSeaIdDelete>\n */\nexport const adminSeaIdDelete = async (id: number) => {\n\treturn del<OAdminSeaIdDelete>(`/admin/sea/${id}`)\n}",
        "reqCode": "/**\n * @description 删除公海 buildReqGetOrPostTyped\n * @url /admin/sea/{id}\n */\nexport interface IAdminSeaIdDelete{\n}",
        "resCode": "/**\n * @description 删除公海 buildResAnyTyped\n * @url /admin/sea/{x}\n */\nexport type OAdminSeaIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除公海 buildResAnyTyped\n * @url /admin/sea/{x}\n */\nexport const OAdminSeaIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/sea/{x}",
        "url": "/admin/sea/{id}",
        "pureUrl": "/admin/sea/{x}",
        "pathReqUrl": "/admin/sea/${id}",
        "method": "get",
        "apiName": "公海详情",
        "key": "AdminSeaIdGet",
        "fnName": "adminSeaIdGet",
        "requestBaseName": "IAdminSeaIdGet",
        "requestName": [
            "IAdminSeaIdGet"
        ],
        "responseBaseName": "OAdminSeaIdGet",
        "responseName": [
            "OAdminSeaIdGet"
        ],
        "responseValueName": [
            "OAdminSeaIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 公海详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminSeaIdGet>\n */\nexport const adminSeaIdGet = async (id: number) => {\n\treturn get<OAdminSeaIdGet>(`/admin/sea/${id}`)\n}",
        "reqCode": "/**\n * @description 公海详情 buildReqGetOrPostTyped\n * @url /admin/sea/{id}\n */\nexport interface IAdminSeaIdGet{\n}",
        "resCode": "/**\n * @description 公海详情 buildResAnyTyped\n * @url /admin/sea/{x}\n */\nexport type OAdminSeaIdGet = {\n}",
        "resValueCode": "/**\n * @description 公海详情 buildResAnyTyped\n * @url /admin/sea/{x}\n */\nexport const OAdminSeaIdGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/sea/join/user/{x}",
        "url": "/admin/sea/join/user/{joinId}",
        "pureUrl": "/admin/sea/join/user/{x}",
        "pathReqUrl": "/admin/sea/join/user/${joinId}",
        "method": "delete",
        "apiName": "删除公海参与人",
        "key": "AdminSeaJoinUserJoinIdDelete",
        "fnName": "adminSeaJoinUserJoinIdDelete",
        "requestBaseName": "IAdminSeaJoinUserJoinIdDelete",
        "requestName": [
            "IAdminSeaJoinUserJoinIdDelete"
        ],
        "responseBaseName": "OAdminSeaJoinUserJoinIdDelete",
        "responseName": [
            "OAdminSeaJoinUserJoinIdDelete"
        ],
        "responseValueName": [
            "OAdminSeaJoinUserJoinIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "joinId#0",
                    "name": "joinId",
                    "required": true,
                    "description": "参与ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除公海参与人 buildFnPathCode\n * @path {number joinId 必填: 参与ID}\n * @return Promise<OAdminSeaJoinUserJoinIdDelete>\n */\nexport const adminSeaJoinUserJoinIdDelete = async (joinId: number) => {\n\treturn del<OAdminSeaJoinUserJoinIdDelete>(`/admin/sea/join/user/${joinId}`)\n}",
        "reqCode": "/**\n * @description 删除公海参与人 buildReqGetOrPostTyped\n * @url /admin/sea/join/user/{joinId}\n */\nexport interface IAdminSeaJoinUserJoinIdDelete{\n}",
        "resCode": "/**\n * @description 删除公海参与人 buildResAnyTyped\n * @url /admin/sea/join/user/{x}\n */\nexport type OAdminSeaJoinUserJoinIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除公海参与人 buildResAnyTyped\n * @url /admin/sea/join/user/{x}\n */\nexport const OAdminSeaJoinUserJoinIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/sea/join/user/list",
        "url": "/admin/sea/join/user/list",
        "pureUrl": "/admin/sea/join/user/list",
        "pathReqUrl": "/admin/sea/join/user/list",
        "method": "get",
        "apiName": "获取公海参与人列表",
        "key": "AdminSeaJoinUserListGet",
        "fnName": "adminSeaJoinUserListGet",
        "requestBaseName": "IAdminSeaJoinUserListGet",
        "requestName": [
            "IAdminSeaJoinUserListGet"
        ],
        "responseBaseName": "OAdminSeaJoinUserListGet",
        "responseName": [
            "OAdminSeaJoinUserListGet"
        ],
        "responseValueName": [
            "OAdminSeaJoinUserListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "公海ID",
                    "type": "number",
                    "id": "6GmaTepkgX",
                    "enable": true,
                    "name": "seaId"
                },
                {
                    "required": false,
                    "description": "用户名",
                    "type": "string",
                    "id": "VGYBrcnmtk",
                    "enable": true,
                    "name": "userName"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取公海参与人列表 buildFnGetOrPostCode\n * \n * @param {number} params.seaId 必填: 公海ID\n * @param {string} params.userName 可选: 用户名\n * @return Promise<OAdminSeaJoinUserListGet>\n */\nexport const adminSeaJoinUserListGet = async (params?: IAdminSeaJoinUserListGet) => {\n\treturn get<OAdminSeaJoinUserListGet>(`/admin/sea/join/user/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取公海参与人列表 buildReqGetOrPostTyped\n * @url /admin/sea/join/user/list\n */\nexport interface IAdminSeaJoinUserListGet{\n\tseaId: number; // 公海ID\n\tuserName?: string; // 用户名\n}",
        "resCode": "/**\n * @description 获取公海参与人列表 buildResAnyTyped\n * @url /admin/sea/join/user/list\n */\nexport type OAdminSeaJoinUserListGet = {\n}",
        "resValueCode": "/**\n * @description 获取公海参与人列表 buildResAnyTyped\n * @url /admin/sea/join/user/list\n */\nexport const OAdminSeaJoinUserListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/sea/join/user",
        "url": "/admin/sea/join/user",
        "pureUrl": "/admin/sea/join/user",
        "pathReqUrl": "/admin/sea/join/user",
        "method": "post",
        "apiName": "添加公海参与人",
        "key": "AdminSeaJoinUserPost",
        "fnName": "adminSeaJoinUserPost",
        "requestBaseName": "IAdminSeaJoinUserPost",
        "requestName": [
            "IAdminSeaJoinUserPost"
        ],
        "responseBaseName": "OAdminSeaJoinUserPost",
        "responseName": [
            "OAdminSeaJoinUserPost"
        ],
        "responseValueName": [
            "OAdminSeaJoinUserPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "seaId",
                    "type": "number",
                    "description": "公海ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "员工ids",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加公海参与人 buildFnGetOrPostCode\n * \n * @param {number} params.seaId 必填: 公海ID\n * @param {any[]} params.userIds 必填: 员工ids\n * @return Promise<OAdminSeaJoinUserPost>\n */\nexport const adminSeaJoinUserPost = async (params?: IAdminSeaJoinUserPost) => {\n\treturn post<OAdminSeaJoinUserPost>(`/admin/sea/join/user`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加公海参与人 buildReqGetOrPostTyped\n * @url /admin/sea/join/user\n */\nexport interface IAdminSeaJoinUserPost{\n\tseaId: number; // 公海ID\n\tuserIds: any[]; // 员工ids\n}",
        "resCode": "/**\n * @description 添加公海参与人 buildResAnyTyped\n * @url /admin/sea/join/user\n */\nexport type OAdminSeaJoinUserPost = {\n}",
        "resValueCode": "/**\n * @description 添加公海参与人 buildResAnyTyped\n * @url /admin/sea/join/user\n */\nexport const OAdminSeaJoinUserPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/sea/list",
        "url": "/admin/sea/list",
        "pureUrl": "/admin/sea/list",
        "pathReqUrl": "/admin/sea/list",
        "method": "get",
        "apiName": "公海列表",
        "key": "AdminSeaListGet",
        "fnName": "adminSeaListGet",
        "requestBaseName": "IAdminSeaListGet",
        "requestName": [
            "IAdminSeaListGet"
        ],
        "responseBaseName": "OAdminSeaListGet",
        "responseName": [
            "OAdminSeaListGet"
        ],
        "responseValueName": [
            "OAdminSeaListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "MxYFC4OBql",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "XTK6BnvsNt",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "EQ054g4HmU",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 公海列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminSeaListGet>\n */\nexport const adminSeaListGet = async (params?: IAdminSeaListGet) => {\n\treturn get<OAdminSeaListGet>(`/admin/sea/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 公海列表 buildReqGetOrPostTyped\n * @url /admin/sea/list\n */\nexport interface IAdminSeaListGet{\n\ttitle?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 公海列表 buildResAnyTyped\n * @url /admin/sea/list\n */\nexport type OAdminSeaListGet = {\n}",
        "resValueCode": "/**\n * @description 公海列表 buildResAnyTyped\n * @url /admin/sea/list\n */\nexport const OAdminSeaListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/sea",
        "url": "/admin/sea",
        "pureUrl": "/admin/sea",
        "pathReqUrl": "/admin/sea",
        "method": "post",
        "apiName": "添加公海",
        "key": "AdminSeaPost",
        "fnName": "adminSeaPost",
        "requestBaseName": "IAdminSeaPost",
        "requestName": [
            "IAdminSeaPost"
        ],
        "responseBaseName": "OAdminSeaPost",
        "responseName": [
            "OAdminSeaPost"
        ],
        "responseValueName": [
            "OAdminSeaPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "allocationStatus",
                    "type": "number",
                    "description": "分配状态 0-手动 1-自动",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "autoAllocation",
                    "type": "number",
                    "description": "自动分配 0-按员工ID 1-安权重",
                    "oldType": "number"
                },
                {
                    "name": "autoSwitch",
                    "type": "number",
                    "description": "自动规则开关 0-关闭 1-打开",
                    "oldType": "number"
                },
                {
                    "name": "autoTimeRule",
                    "type": "any[]",
                    "items": {
                        "type": "string",
                        "description": "如：09:00:00,23:00:00 数组第一位是开始时间 第二位是结束时间"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "autoWeekRule",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "0,1,2,3,4,5,6"
                    },
                    "description": "自动规则时间-周",
                    "oldType": "any[]"
                },
                {
                    "name": "choiceUserType",
                    "type": "number",
                    "description": "选择员工类型 0-全部 1-自定义",
                    "oldType": "number"
                },
                {
                    "name": "msgNotify",
                    "type": "number",
                    "description": "消息提醒 0-不提醒 1-提醒",
                    "oldType": "number"
                },
                {
                    "name": "seaDepts",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "weightVal": {
                                "type": "number",
                                "description": "权重值"
                            },
                            "deptId": {
                                "type": "integer",
                                "description": "部门ID"
                            }
                        },
                        "x-apifox-orders": [
                            "deptId",
                            "weightVal"
                        ],
                        "required": [
                            "deptId",
                            "weightVal"
                        ]
                    },
                    "description": "员工列表",
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加公海 buildFnGetOrPostCode\n * \n * @param {number} params.allocationStatus 必填: 分配状态 0-手动 1-自动\n * @param {number} params.autoAllocation 可选: 自动分配 0-按员工ID 1-安权重\n * @param {number} params.autoSwitch 可选: 自动规则开关 0-关闭 1-打开\n * @param {any[]} params.autoTimeRule 可选: \n * @param {any[]} params.autoWeekRule 可选: 自动规则时间-周\n * @param {number} params.choiceUserType 可选: 选择员工类型 0-全部 1-自定义\n * @param {number} params.msgNotify 可选: 消息提醒 0-不提醒 1-提醒\n * @param {any[]} params.seaDepts 可选: 员工列表\n * @param {string} params.title 必填: 标题\n * @return Promise<OAdminSeaPost>\n */\nexport const adminSeaPost = async (params?: IAdminSeaPost) => {\n\treturn post<OAdminSeaPost>(`/admin/sea`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加公海 buildReqGetOrPostTyped\n * @url /admin/sea\n */\nexport interface IAdminSeaPost{\n\tallocationStatus: number; // 分配状态 0-手动 1-自动\n\tautoAllocation?: number; // 自动分配 0-按员工ID 1-安权重\n\tautoSwitch?: number; // 自动规则开关 0-关闭 1-打开\n\tautoTimeRule?: any[];\n\tautoWeekRule?: any[]; // 自动规则时间-周\n\tchoiceUserType?: number; // 选择员工类型 0-全部 1-自定义\n\tmsgNotify?: number; // 消息提醒 0-不提醒 1-提醒\n\tseaDepts?: any[]; // 员工列表\n\ttitle: string; // 标题\n}",
        "resCode": "/**\n * @description 添加公海 buildResAnyTyped\n * @url /admin/sea\n */\nexport type OAdminSeaPost = {\n}",
        "resValueCode": "/**\n * @description 添加公海 buildResAnyTyped\n * @url /admin/sea\n */\nexport const OAdminSeaPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/sea",
        "url": "/admin/sea",
        "pureUrl": "/admin/sea",
        "pathReqUrl": "/admin/sea",
        "method": "put",
        "apiName": "编辑公海",
        "key": "AdminSeaPut",
        "fnName": "adminSeaPut",
        "requestBaseName": "IAdminSeaPut",
        "requestName": [
            "IAdminSeaPut"
        ],
        "responseBaseName": "OAdminSeaPut",
        "responseName": [
            "OAdminSeaPut"
        ],
        "responseValueName": [
            "OAdminSeaPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "allocationStatus",
                    "type": "number",
                    "description": "分配状态 0-手动 1-自动",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "autoAllocation",
                    "type": "number",
                    "description": "自动分配 0-按员工ID 1-安权重",
                    "oldType": "number"
                },
                {
                    "name": "autoSwitch",
                    "type": "number",
                    "description": "自动规则开关 0-关闭 1-打开",
                    "oldType": "number"
                },
                {
                    "name": "autoTimeRule",
                    "type": "any[]",
                    "items": {
                        "type": "string",
                        "description": "如：09:00:00,23:00:00 数组第一位是开始时间 第二位是结束时间"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "autoWeekRule",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "0,1,2,3,4,5,6"
                    },
                    "description": "自动规则时间-周",
                    "oldType": "any[]"
                },
                {
                    "name": "choiceUserType",
                    "type": "number",
                    "description": "选择员工类型 0-全部 1-自定义",
                    "oldType": "number"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "msgNotify",
                    "type": "number",
                    "description": "消息提醒 0-不提醒 1-提醒",
                    "oldType": "number"
                },
                {
                    "name": "seaDepts",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "weightVal": {
                                "type": "number",
                                "description": "权重值"
                            },
                            "deptId": {
                                "type": "integer",
                                "description": "部门ID"
                            }
                        },
                        "x-apifox-orders": [
                            "deptId",
                            "weightVal"
                        ],
                        "required": [
                            "deptId",
                            "weightVal"
                        ]
                    },
                    "description": "员工列表",
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑公海 buildFnGetOrPostCode\n * \n * @param {number} params.allocationStatus 必填: 分配状态 0-手动 1-自动\n * @param {number} params.autoAllocation 可选: 自动分配 0-按员工ID 1-安权重\n * @param {number} params.autoSwitch 可选: 自动规则开关 0-关闭 1-打开\n * @param {any[]} params.autoTimeRule 可选: \n * @param {any[]} params.autoWeekRule 可选: 自动规则时间-周\n * @param {number} params.choiceUserType 可选: 选择员工类型 0-全部 1-自定义\n * @param {number} params.id 必填: id\n * @param {number} params.msgNotify 可选: 消息提醒 0-不提醒 1-提醒\n * @param {any[]} params.seaDepts 可选: 员工列表\n * @param {string} params.title 必填: 标题\n * @return Promise<OAdminSeaPut>\n */\nexport const adminSeaPut = async (params?: IAdminSeaPut) => {\n\treturn put<OAdminSeaPut>(`/admin/sea`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑公海 buildReqGetOrPostTyped\n * @url /admin/sea\n */\nexport interface IAdminSeaPut{\n\tallocationStatus: number; // 分配状态 0-手动 1-自动\n\tautoAllocation?: number; // 自动分配 0-按员工ID 1-安权重\n\tautoSwitch?: number; // 自动规则开关 0-关闭 1-打开\n\tautoTimeRule?: any[];\n\tautoWeekRule?: any[]; // 自动规则时间-周\n\tchoiceUserType?: number; // 选择员工类型 0-全部 1-自定义\n\tid: number; // id\n\tmsgNotify?: number; // 消息提醒 0-不提醒 1-提醒\n\tseaDepts?: any[]; // 员工列表\n\ttitle: string; // 标题\n}",
        "resCode": "/**\n * @description 编辑公海 buildResAnyTyped\n * @url /admin/sea\n */\nexport type OAdminSeaPut = {\n}",
        "resValueCode": "/**\n * @description 编辑公海 buildResAnyTyped\n * @url /admin/sea\n */\nexport const OAdminSeaPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/tag/group/choice",
        "url": "/admin/tag/group/choice",
        "pureUrl": "/admin/tag/group/choice",
        "pathReqUrl": "/admin/tag/group/choice",
        "method": "put",
        "apiName": "编辑标签组选择范围",
        "key": "AdminTagGroupChoicePut",
        "fnName": "adminTagGroupChoicePut",
        "requestBaseName": "IAdminTagGroupChoicePut",
        "requestName": [
            "IAdminTagGroupChoicePut"
        ],
        "responseBaseName": "OAdminTagGroupChoicePut",
        "responseName": [
            "OAdminTagGroupChoicePut"
        ],
        "responseValueName": [
            "OAdminTagGroupChoicePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "choice",
                    "type": "number",
                    "description": "选择范围 0-单选 1-多选",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "groupId",
                    "type": "number",
                    "description": "groupId",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签组选择范围 buildFnGetOrPostCode\n * \n * @param {number} params.choice 必填: 选择范围 0-单选 1-多选\n * @param {number} params.groupId 可选: groupId\n * @return Promise<OAdminTagGroupChoicePut>\n */\nexport const adminTagGroupChoicePut = async (params?: IAdminTagGroupChoicePut) => {\n\treturn put<OAdminTagGroupChoicePut>(`/admin/tag/group/choice`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签组选择范围 buildReqGetOrPostTyped\n * @url /admin/tag/group/choice\n */\nexport interface IAdminTagGroupChoicePut{\n\tchoice: number; // 选择范围 0-单选 1-多选\n\tgroupId?: number; // groupId\n}",
        "resCode": "/**\n * @description 编辑标签组选择范围 buildResAnyTyped\n * @url /admin/tag/group/choice\n */\nexport type OAdminTagGroupChoicePut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签组选择范围 buildResAnyTyped\n * @url /admin/tag/group/choice\n */\nexport const OAdminTagGroupChoicePutValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/tag/group/{x}",
        "url": "/admin/tag/group/{groupId}",
        "pureUrl": "/admin/tag/group/{x}",
        "pathReqUrl": "/admin/tag/group/${groupId}",
        "method": "delete",
        "apiName": "删除标签组",
        "key": "AdminTagGroupGroupIdDelete",
        "fnName": "adminTagGroupGroupIdDelete",
        "requestBaseName": "IAdminTagGroupGroupIdDelete",
        "requestName": [
            "IAdminTagGroupGroupIdDelete"
        ],
        "responseBaseName": "OAdminTagGroupGroupIdDelete",
        "responseName": [
            "OAdminTagGroupGroupIdDelete"
        ],
        "responseValueName": [
            "OAdminTagGroupGroupIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "groupId#0",
                    "name": "groupId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除标签组 buildFnPathCode\n * @path {number groupId 必填: }\n * @return Promise<OAdminTagGroupGroupIdDelete>\n */\nexport const adminTagGroupGroupIdDelete = async (groupId: number) => {\n\treturn del<OAdminTagGroupGroupIdDelete>(`/admin/tag/group/${groupId}`)\n}",
        "reqCode": "/**\n * @description 删除标签组 buildReqGetOrPostTyped\n * @url /admin/tag/group/{groupId}\n */\nexport interface IAdminTagGroupGroupIdDelete{\n}",
        "resCode": "/**\n * @description 删除标签组 buildResAnyTyped\n * @url /admin/tag/group/{x}\n */\nexport type OAdminTagGroupGroupIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除标签组 buildResAnyTyped\n * @url /admin/tag/group/{x}\n */\nexport const OAdminTagGroupGroupIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/tag/group/list",
        "url": "/admin/tag/group/list",
        "pureUrl": "/admin/tag/group/list",
        "pathReqUrl": "/admin/tag/group/list",
        "method": "get",
        "apiName": "查询标签组列表",
        "key": "AdminTagGroupListGet",
        "fnName": "adminTagGroupListGet",
        "requestBaseName": "IAdminTagGroupListGet",
        "requestName": [
            "IAdminTagGroupListGet"
        ],
        "responseBaseName": "OAdminTagGroupListGet",
        "responseName": [
            "OAdminTagGroupListGet"
        ],
        "responseValueName": [
            "OAdminTagGroupListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询标签组列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminTagGroupListGet>\n */\nexport const adminTagGroupListGet = async (params?: IAdminTagGroupListGet) => {\n\treturn get<OAdminTagGroupListGet>(`/admin/tag/group/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询标签组列表 buildReqGetOrPostTyped\n * @url /admin/tag/group/list\n */\nexport interface IAdminTagGroupListGet{\n}",
        "resCode": "/**\n * @description 查询标签组列表 buildResAnyTyped\n * @url /admin/tag/group/list\n */\nexport type OAdminTagGroupListGet = {\n}",
        "resValueCode": "/**\n * @description 查询标签组列表 buildResAnyTyped\n * @url /admin/tag/group/list\n */\nexport const OAdminTagGroupListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/tag/group",
        "url": "/admin/tag/group",
        "pureUrl": "/admin/tag/group",
        "pathReqUrl": "/admin/tag/group",
        "method": "post",
        "apiName": "添加标签组",
        "key": "AdminTagGroupPost",
        "fnName": "adminTagGroupPost",
        "requestBaseName": "IAdminTagGroupPost",
        "requestName": [
            "IAdminTagGroupPost"
        ],
        "responseBaseName": "OAdminTagGroupPost",
        "responseName": [
            "OAdminTagGroupPost"
        ],
        "responseValueName": [
            "OAdminTagGroupPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "choice",
                    "type": "number",
                    "description": "选择范围 0-单选 1-多选",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加标签组 buildFnGetOrPostCode\n * \n * @param {number} params.choice 必填: 选择范围 0-单选 1-多选\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @param {string} params.title 必填: \n * @return Promise<OAdminTagGroupPost>\n */\nexport const adminTagGroupPost = async (params?: IAdminTagGroupPost) => {\n\treturn post<OAdminTagGroupPost>(`/admin/tag/group`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加标签组 buildReqGetOrPostTyped\n * @url /admin/tag/group\n */\nexport interface IAdminTagGroupPost{\n\tchoice: number; // 选择范围 0-单选 1-多选\n\tstatus: number; // 状态 0-正常 1-禁用\n\ttitle: string;\n}",
        "resCode": "/**\n * @description 添加标签组 buildResAnyTyped\n * @url /admin/tag/group\n */\nexport type OAdminTagGroupPost = {\n}",
        "resValueCode": "/**\n * @description 添加标签组 buildResAnyTyped\n * @url /admin/tag/group\n */\nexport const OAdminTagGroupPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/tag/group",
        "url": "/admin/tag/group",
        "pureUrl": "/admin/tag/group",
        "pathReqUrl": "/admin/tag/group",
        "method": "put",
        "apiName": "编辑标签组",
        "key": "AdminTagGroupPut",
        "fnName": "adminTagGroupPut",
        "requestBaseName": "IAdminTagGroupPut",
        "requestName": [
            "IAdminTagGroupPut"
        ],
        "responseBaseName": "OAdminTagGroupPut",
        "responseName": [
            "OAdminTagGroupPut"
        ],
        "responseValueName": [
            "OAdminTagGroupPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "choice",
                    "type": "number",
                    "description": "选择范围 0-单选 1-多选",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "groupId",
                    "type": "number",
                    "description": "groupId",
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签组 buildFnGetOrPostCode\n * \n * @param {number} params.choice 必填: 选择范围 0-单选 1-多选\n * @param {number} params.groupId 可选: groupId\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @param {string} params.title 必填: \n * @return Promise<OAdminTagGroupPut>\n */\nexport const adminTagGroupPut = async (params?: IAdminTagGroupPut) => {\n\treturn put<OAdminTagGroupPut>(`/admin/tag/group`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签组 buildReqGetOrPostTyped\n * @url /admin/tag/group\n */\nexport interface IAdminTagGroupPut{\n\tchoice: number; // 选择范围 0-单选 1-多选\n\tgroupId?: number; // groupId\n\tstatus: number; // 状态 0-正常 1-禁用\n\ttitle: string;\n}",
        "resCode": "/**\n * @description 编辑标签组 buildResAnyTyped\n * @url /admin/tag/group\n */\nexport type OAdminTagGroupPut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签组 buildResAnyTyped\n * @url /admin/tag/group\n */\nexport const OAdminTagGroupPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/tag/group/status",
        "url": "/admin/tag/group/status",
        "pureUrl": "/admin/tag/group/status",
        "pathReqUrl": "/admin/tag/group/status",
        "method": "put",
        "apiName": "编辑标签组状态",
        "key": "AdminTagGroupStatusPut",
        "fnName": "adminTagGroupStatusPut",
        "requestBaseName": "IAdminTagGroupStatusPut",
        "requestName": [
            "IAdminTagGroupStatusPut"
        ],
        "responseBaseName": "OAdminTagGroupStatusPut",
        "responseName": [
            "OAdminTagGroupStatusPut"
        ],
        "responseValueName": [
            "OAdminTagGroupStatusPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "groupId",
                    "type": "number",
                    "description": "groupId",
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签组状态 buildFnGetOrPostCode\n * \n * @param {number} params.groupId 可选: groupId\n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @return Promise<OAdminTagGroupStatusPut>\n */\nexport const adminTagGroupStatusPut = async (params?: IAdminTagGroupStatusPut) => {\n\treturn put<OAdminTagGroupStatusPut>(`/admin/tag/group/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签组状态 buildReqGetOrPostTyped\n * @url /admin/tag/group/status\n */\nexport interface IAdminTagGroupStatusPut{\n\tgroupId?: number; // groupId\n\tstatus: number; // 状态 0-正常 1-禁用\n}",
        "resCode": "/**\n * @description 编辑标签组状态 buildResAnyTyped\n * @url /admin/tag/group/status\n */\nexport type OAdminTagGroupStatusPut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签组状态 buildResAnyTyped\n * @url /admin/tag/group/status\n */\nexport const OAdminTagGroupStatusPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/tag/list/byGroupId",
        "url": "/admin/tag/list/byGroupId",
        "pureUrl": "/admin/tag/list/byGroupId",
        "pathReqUrl": "/admin/tag/list/byGroupId",
        "method": "get",
        "apiName": "查询标签列表-根据标签组ID",
        "key": "AdminTagListByGroupIdGet",
        "fnName": "adminTagListByGroupIdGet",
        "requestBaseName": "IAdminTagListByGroupIdGet",
        "requestName": [
            "IAdminTagListByGroupIdGet"
        ],
        "responseBaseName": "OAdminTagListByGroupIdGet",
        "responseName": [
            "OAdminTagListByGroupIdGet"
        ],
        "responseValueName": [
            "OAdminTagListByGroupIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "标签组ID",
                    "type": "number",
                    "id": "EPAb8eynbp",
                    "enable": true,
                    "name": "groupId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "xz0yUEwHLo",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "0qsx2pp8sa",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询标签列表-根据标签组ID buildFnGetOrPostCode\n * \n * @param {number} params.groupId 可选: 标签组ID\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminTagListByGroupIdGet>\n */\nexport const adminTagListByGroupIdGet = async (params?: IAdminTagListByGroupIdGet) => {\n\treturn get<OAdminTagListByGroupIdGet>(`/admin/tag/list/byGroupId`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询标签列表-根据标签组ID buildReqGetOrPostTyped\n * @url /admin/tag/list/byGroupId\n */\nexport interface IAdminTagListByGroupIdGet{\n\tgroupId?: number; // 标签组ID\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询标签列表-根据标签组ID buildResAnyTyped\n * @url /admin/tag/list/byGroupId\n */\nexport type OAdminTagListByGroupIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询标签列表-根据标签组ID buildResAnyTyped\n * @url /admin/tag/list/byGroupId\n */\nexport const OAdminTagListByGroupIdGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/tag",
        "url": "/admin/tag",
        "pureUrl": "/admin/tag",
        "pathReqUrl": "/admin/tag",
        "method": "post",
        "apiName": "添加标签",
        "key": "AdminTagPost",
        "fnName": "adminTagPost",
        "requestBaseName": "IAdminTagPost",
        "requestName": [
            "IAdminTagPost"
        ],
        "responseBaseName": "OAdminTagPost",
        "responseName": [
            "OAdminTagPost"
        ],
        "responseValueName": [
            "OAdminTagPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "groupId",
                    "type": "number",
                    "description": "标签ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "tags",
                    "type": "any[]",
                    "items": {
                        "type": "string",
                        "description": "标签名"
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加标签 buildFnGetOrPostCode\n * \n * @param {number} params.groupId 必填: 标签ID\n * @param {any[]} params.tags 必填: \n * @return Promise<OAdminTagPost>\n */\nexport const adminTagPost = async (params?: IAdminTagPost) => {\n\treturn post<OAdminTagPost>(`/admin/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加标签 buildReqGetOrPostTyped\n * @url /admin/tag\n */\nexport interface IAdminTagPost{\n\tgroupId: number; // 标签ID\n\ttags: any[];\n}",
        "resCode": "/**\n * @description 添加标签 buildResAnyTyped\n * @url /admin/tag\n */\nexport type OAdminTagPost = {\n}",
        "resValueCode": "/**\n * @description 添加标签 buildResAnyTyped\n * @url /admin/tag\n */\nexport const OAdminTagPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/tag",
        "url": "/admin/tag",
        "pureUrl": "/admin/tag",
        "pathReqUrl": "/admin/tag",
        "method": "put",
        "apiName": "编辑标签",
        "key": "AdminTagPut",
        "fnName": "adminTagPut",
        "requestBaseName": "IAdminTagPut",
        "requestName": [
            "IAdminTagPut"
        ],
        "responseBaseName": "OAdminTagPut",
        "responseName": [
            "OAdminTagPut"
        ],
        "responseValueName": [
            "OAdminTagPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "tagId",
                    "type": "number",
                    "description": "标签ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标签名",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签 buildFnGetOrPostCode\n * \n * @param {number} params.tagId 必填: 标签ID\n * @param {string} params.title 必填: 标签名\n * @return Promise<OAdminTagPut>\n */\nexport const adminTagPut = async (params?: IAdminTagPut) => {\n\treturn put<OAdminTagPut>(`/admin/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签 buildReqGetOrPostTyped\n * @url /admin/tag\n */\nexport interface IAdminTagPut{\n\ttagId: number; // 标签ID\n\ttitle: string; // 标签名\n}",
        "resCode": "/**\n * @description 编辑标签 buildResAnyTyped\n * @url /admin/tag\n */\nexport type OAdminTagPut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签 buildResAnyTyped\n * @url /admin/tag\n */\nexport const OAdminTagPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/tag/status",
        "url": "/admin/tag/status",
        "pureUrl": "/admin/tag/status",
        "pathReqUrl": "/admin/tag/status",
        "method": "put",
        "apiName": "编辑标签状态",
        "key": "AdminTagStatusPut",
        "fnName": "adminTagStatusPut",
        "requestBaseName": "IAdminTagStatusPut",
        "requestName": [
            "IAdminTagStatusPut"
        ],
        "responseBaseName": "OAdminTagStatusPut",
        "responseName": [
            "OAdminTagStatusPut"
        ],
        "responseValueName": [
            "OAdminTagStatusPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "status",
                    "type": "number",
                    "description": "状态 0-正常 1-禁用",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "tagId",
                    "type": "number",
                    "description": "标签ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑标签状态 buildFnGetOrPostCode\n * \n * @param {number} params.status 必填: 状态 0-正常 1-禁用\n * @param {number} params.tagId 必填: 标签ID\n * @return Promise<OAdminTagStatusPut>\n */\nexport const adminTagStatusPut = async (params?: IAdminTagStatusPut) => {\n\treturn put<OAdminTagStatusPut>(`/admin/tag/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑标签状态 buildReqGetOrPostTyped\n * @url /admin/tag/status\n */\nexport interface IAdminTagStatusPut{\n\tstatus: number; // 状态 0-正常 1-禁用\n\ttagId: number; // 标签ID\n}",
        "resCode": "/**\n * @description 编辑标签状态 buildResAnyTyped\n * @url /admin/tag/status\n */\nexport type OAdminTagStatusPut = {\n}",
        "resValueCode": "/**\n * @description 编辑标签状态 buildResAnyTyped\n * @url /admin/tag/status\n */\nexport const OAdminTagStatusPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/tag/sync",
        "url": "/admin/tag/sync",
        "pureUrl": "/admin/tag/sync",
        "pathReqUrl": "/admin/tag/sync",
        "method": "post",
        "apiName": "同步企业微信标签",
        "key": "AdminTagSyncPost",
        "fnName": "adminTagSyncPost",
        "requestBaseName": "IAdminTagSyncPost",
        "requestName": [
            "IAdminTagSyncPost"
        ],
        "responseBaseName": "OAdminTagSyncPost",
        "responseName": [
            "OAdminTagSyncPost"
        ],
        "responseValueName": [
            "OAdminTagSyncPostValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 同步企业微信标签 buildFnGetOrPostCode\n * \n * @return Promise<OAdminTagSyncPost>\n */\nexport const adminTagSyncPost = async (params?: IAdminTagSyncPost) => {\n\treturn post<OAdminTagSyncPost>(`/admin/tag/sync`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 同步企业微信标签 buildReqGetOrPostTyped\n * @url /admin/tag/sync\n */\nexport interface IAdminTagSyncPost{\n}",
        "resCode": "/**\n * @description 同步企业微信标签 buildResAnyTyped\n * @url /admin/tag/sync\n */\nexport type OAdminTagSyncPost = {\n}",
        "resValueCode": "/**\n * @description 同步企业微信标签 buildResAnyTyped\n * @url /admin/tag/sync\n */\nexport const OAdminTagSyncPostValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/tag/{x}",
        "url": "/admin/tag/{tagId}",
        "pureUrl": "/admin/tag/{x}",
        "pathReqUrl": "/admin/tag/${tagId}",
        "method": "delete",
        "apiName": "删除标签",
        "key": "AdminTagTagIdDelete",
        "fnName": "adminTagTagIdDelete",
        "requestBaseName": "IAdminTagTagIdDelete",
        "requestName": [
            "IAdminTagTagIdDelete"
        ],
        "responseBaseName": "OAdminTagTagIdDelete",
        "responseName": [
            "OAdminTagTagIdDelete"
        ],
        "responseValueName": [
            "OAdminTagTagIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "tagId#0",
                    "name": "tagId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除标签 buildFnPathCode\n * @path {number tagId 必填: }\n * @return Promise<OAdminTagTagIdDelete>\n */\nexport const adminTagTagIdDelete = async (tagId: number) => {\n\treturn del<OAdminTagTagIdDelete>(`/admin/tag/${tagId}`)\n}",
        "reqCode": "/**\n * @description 删除标签 buildReqGetOrPostTyped\n * @url /admin/tag/{tagId}\n */\nexport interface IAdminTagTagIdDelete{\n}",
        "resCode": "/**\n * @description 删除标签 buildResAnyTyped\n * @url /admin/tag/{x}\n */\nexport type OAdminTagTagIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除标签 buildResAnyTyped\n * @url /admin/tag/{x}\n */\nexport const OAdminTagTagIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/addDeptToThread",
        "url": "/admin/thread/addDeptToThread",
        "pureUrl": "/admin/thread/addDeptToThread",
        "pathReqUrl": "/admin/thread/addDeptToThread",
        "method": "post",
        "apiName": "用户线索添加跟进团队（线索详情-用户线索添加跟进团队-多团队）",
        "key": "AdminThreadAddDeptToThreadPost",
        "fnName": "adminThreadAddDeptToThreadPost",
        "requestBaseName": "IAdminThreadAddDeptToThreadPost",
        "requestName": [
            "IAdminThreadAddDeptToThreadPost"
        ],
        "responseBaseName": "OAdminThreadAddDeptToThreadPost",
        "responseName": [
            "OAdminThreadAddDeptToThreadPost"
        ],
        "responseValueName": [
            "OAdminThreadAddDeptToThreadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "团队ID集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "线索ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 用户线索添加跟进团队（线索详情-用户线索添加跟进团队-多团队） buildFnGetOrPostCode\n * \n * @param {any[]} params.deptIds 必填: 团队ID集合\n * @param {number} params.investorId 必填: 线索ID\n * @return Promise<OAdminThreadAddDeptToThreadPost>\n */\nexport const adminThreadAddDeptToThreadPost = async (params?: IAdminThreadAddDeptToThreadPost) => {\n\treturn post<OAdminThreadAddDeptToThreadPost>(`/admin/thread/addDeptToThread`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 用户线索添加跟进团队（线索详情-用户线索添加跟进团队-多团队） buildReqGetOrPostTyped\n * @url /admin/thread/addDeptToThread\n */\nexport interface IAdminThreadAddDeptToThreadPost{\n\tdeptIds: any[]; // 团队ID集合\n\tinvestorId: number; // 线索ID\n}",
        "resCode": "/**\n * @description 用户线索添加跟进团队（线索详情-用户线索添加跟进团队-多团队） buildResAnyTyped\n * @url /admin/thread/addDeptToThread\n */\nexport type OAdminThreadAddDeptToThreadPost = {\n}",
        "resValueCode": "/**\n * @description 用户线索添加跟进团队（线索详情-用户线索添加跟进团队-多团队） buildResAnyTyped\n * @url /admin/thread/addDeptToThread\n */\nexport const OAdminThreadAddDeptToThreadPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/addThreadToDept",
        "url": "/admin/thread/addThreadToDept",
        "pureUrl": "/admin/thread/addThreadToDept",
        "pathReqUrl": "/admin/thread/addThreadToDept",
        "method": "post",
        "apiName": "团队添加线索（团队详情-团队添加线索-单团队）",
        "key": "AdminThreadAddThreadToDeptPost",
        "fnName": "adminThreadAddThreadToDeptPost",
        "requestBaseName": "IAdminThreadAddThreadToDeptPost",
        "requestName": [
            "IAdminThreadAddThreadToDeptPost"
        ],
        "responseBaseName": "OAdminThreadAddThreadToDeptPost",
        "responseName": [
            "OAdminThreadAddThreadToDeptPost"
        ],
        "responseValueName": [
            "OAdminThreadAddThreadToDeptPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptId",
                    "type": "number",
                    "description": "团队ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "线索ID集合",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 团队添加线索（团队详情-团队添加线索-单团队） buildFnGetOrPostCode\n * \n * @param {number} params.deptId 必填: 团队ID\n * @param {any[]} params.investorIds 必填: 线索ID集合\n * @return Promise<OAdminThreadAddThreadToDeptPost>\n */\nexport const adminThreadAddThreadToDeptPost = async (params?: IAdminThreadAddThreadToDeptPost) => {\n\treturn post<OAdminThreadAddThreadToDeptPost>(`/admin/thread/addThreadToDept`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 团队添加线索（团队详情-团队添加线索-单团队） buildReqGetOrPostTyped\n * @url /admin/thread/addThreadToDept\n */\nexport interface IAdminThreadAddThreadToDeptPost{\n\tdeptId: number; // 团队ID\n\tinvestorIds: any[]; // 线索ID集合\n}",
        "resCode": "/**\n * @description 团队添加线索（团队详情-团队添加线索-单团队） buildResAnyTyped\n * @url /admin/thread/addThreadToDept\n */\nexport type OAdminThreadAddThreadToDeptPost = {\n}",
        "resValueCode": "/**\n * @description 团队添加线索（团队详情-团队添加线索-单团队） buildResAnyTyped\n * @url /admin/thread/addThreadToDept\n */\nexport const OAdminThreadAddThreadToDeptPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/all/list",
        "url": "/admin/thread/all/list",
        "pureUrl": "/admin/thread/all/list",
        "pathReqUrl": "/admin/thread/all/list",
        "method": "get",
        "apiName": "全部客户列表-一般仅管理员有权限",
        "key": "AdminThreadAllListGet",
        "fnName": "adminThreadAllListGet",
        "requestBaseName": "IAdminThreadAllListGet",
        "requestName": [
            "IAdminThreadAllListGet"
        ],
        "responseBaseName": "OAdminThreadAllListGet",
        "responseName": [
            "OAdminThreadAllListGet"
        ],
        "responseValueName": [
            "OAdminThreadAllListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "搜索查询",
                    "type": "string",
                    "id": "Rk3OUa03YT",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JKnf73fqeC",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "wkkbBS3ZnS",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部",
                    "type": "number",
                    "id": "ou4WJmPvVx",
                    "enable": true,
                    "name": "statusLevel",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "跟进人",
                    "type": "number",
                    "id": "B920wsjI1R",
                    "enable": true,
                    "name": "employeeId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否标记为重点 0-否 1-是",
                    "type": "number",
                    "id": "xLgNYB4Xxe",
                    "enable": true,
                    "name": "important",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "客户状态 0-强意愿 1-有效 2-长期 3-无效",
                    "type": "number",
                    "id": "kFyiRugvER",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "城市",
                    "type": "string",
                    "id": "tmXdnD8rjy",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品id",
                    "type": "number",
                    "id": "ypPhK6vJss",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "新线索 固定值 1",
                    "type": "number",
                    "id": "sslmY0mspF",
                    "enable": true,
                    "name": "newThread",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "员工归属地",
                    "type": "string",
                    "id": "FNz8XxuYkA",
                    "enable": true,
                    "name": "userCity",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID",
                    "type": "number",
                    "id": "5RCVEQ2h6i",
                    "enable": true,
                    "name": "tagId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "团队ID",
                    "type": "number",
                    "id": "LDSZCQ7qBs",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "today yesterday week month",
                    "type": "string",
                    "id": "cvhbRAbRPA",
                    "enable": true,
                    "name": "timeday",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "个人标签",
                    "type": "string",
                    "id": "pUYMAznsLa",
                    "enable": true,
                    "name": "personageTag",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "意向产品类型",
                    "type": "string",
                    "id": "SmE1ZxxOfs",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "成交状态 0-未签约 1-签约 2-复购 9-退出",
                    "type": "number",
                    "id": "DWnT1Sr8ob",
                    "enable": true,
                    "name": "tranStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "线索状态 0-线索 2-有效 8-长期",
                    "type": "number",
                    "id": "Xp17KFiw9c",
                    "enable": true,
                    "name": "followStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "主跟进人ID",
                    "type": "number",
                    "id": "p8ppcDC4Lt",
                    "enable": true,
                    "name": "primaryFollowerId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "省份",
                    "type": "string",
                    "id": "M9Q9GUF76j",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "旅程内容搜索",
                    "type": "string",
                    "id": "DM7Kn0rfMR",
                    "enable": true,
                    "name": "followRecordKeyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 全部客户列表-一般仅管理员有权限 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: 搜索查询\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.statusLevel 可选: 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n * @param {number} params.employeeId 可选: 跟进人\n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 3-无效\n * @param {string} params.city 可选: 城市\n * @param {number} params.productId 可选: 产品id\n * @param {number} params.newThread 可选: 新线索 固定值 1\n * @param {string} params.userCity 可选: 员工归属地\n * @param {number} params.tagId 可选: 标签ID\n * @param {number} params.deptId 可选: 团队ID\n * @param {string} params.timeday 可选: today yesterday week month\n * @param {string} params.personageTag 可选: 个人标签\n * @param {string} params.productType 可选: 意向产品类型\n * @param {number} params.tranStatus 可选: 成交状态 0-未签约 1-签约 2-复购 9-退出\n * @param {number} params.followStatus 可选: 线索状态 0-线索 2-有效 8-长期\n * @param {number} params.primaryFollowerId 可选: 主跟进人ID\n * @param {string} params.province 可选: 省份\n * @param {string} params.followRecordKeyword 可选: 旅程内容搜索\n * @return Promise<OAdminThreadAllListGet>\n */\nexport const adminThreadAllListGet = async (params?: IAdminThreadAllListGet) => {\n\treturn get<OAdminThreadAllListGet>(`/admin/thread/all/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 全部客户列表-一般仅管理员有权限 buildReqGetOrPostTyped\n * @url /admin/thread/all/list\n */\nexport interface IAdminThreadAllListGet{\n\tkeyword?: string; // 搜索查询\n\tpageNum?: number;\n\tpageSize?: number;\n\tstatusLevel?: number; // 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n\temployeeId?: number; // 跟进人\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 3-无效\n\tcity?: string; // 城市\n\tproductId?: number; // 产品id\n\tnewThread?: number; // 新线索 固定值 1\n\tuserCity?: string; // 员工归属地\n\ttagId?: number; // 标签ID\n\tdeptId?: number; // 团队ID\n\ttimeday?: string; // today yesterday week month\n\tpersonageTag?: string; // 个人标签\n\tproductType?: string; // 意向产品类型\n\ttranStatus?: number; // 成交状态 0-未签约 1-签约 2-复购 9-退出\n\tfollowStatus?: number; // 线索状态 0-线索 2-有效 8-长期\n\tprimaryFollowerId?: number; // 主跟进人ID\n\tprovince?: string; // 省份\n\tfollowRecordKeyword?: string; // 旅程内容搜索\n}",
        "resCode": "/**\n * @description 全部客户列表-一般仅管理员有权限 buildResAnyTyped\n * @url /admin/thread/all/list\n */\nexport type OAdminThreadAllListGet = {\n}",
        "resValueCode": "/**\n * @description 全部客户列表-一般仅管理员有权限 buildResAnyTyped\n * @url /admin/thread/all/list\n */\nexport const OAdminThreadAllListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/allocation",
        "url": "/admin/thread/allocation",
        "pureUrl": "/admin/thread/allocation",
        "pathReqUrl": "/admin/thread/allocation",
        "method": "post",
        "apiName": "分配客户（支持分配给多个团队里的多个人）",
        "key": "AdminThreadAllocationPost",
        "fnName": "adminThreadAllocationPost",
        "requestBaseName": "IAdminThreadAllocationPost",
        "requestName": [
            "IAdminThreadAllocationPost"
        ],
        "responseBaseName": "OAdminThreadAllocationPost",
        "responseName": [
            "OAdminThreadAllocationPost"
        ],
        "responseValueName": [
            "OAdminThreadAllocationPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "depts",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deptId": {
                                "type": "integer",
                                "description": "部门ID"
                            },
                            "employeeIds": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "部门里的员工ids"
                            }
                        },
                        "x-apifox-orders": [
                            "deptId",
                            "employeeIds"
                        ],
                        "required": [
                            "deptId",
                            "employeeIds"
                        ],
                        "description": "存在deptId时，employeeIds至少存在一个员工"
                    },
                    "description": "部门集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 分配客户（支持分配给多个团队里的多个人） buildFnGetOrPostCode\n * \n * @param {any[]} params.depts 必填: 部门集合\n * @param {number} params.investorId 必填: \n * @return Promise<OAdminThreadAllocationPost>\n */\nexport const adminThreadAllocationPost = async (params?: IAdminThreadAllocationPost) => {\n\treturn post<OAdminThreadAllocationPost>(`/admin/thread/allocation`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 分配客户（支持分配给多个团队里的多个人） buildReqGetOrPostTyped\n * @url /admin/thread/allocation\n */\nexport interface IAdminThreadAllocationPost{\n\tdepts: any[]; // 部门集合\n\tinvestorId: number;\n}",
        "resCode": "/**\n * @description 分配客户（支持分配给多个团队里的多个人） buildResAnyTyped\n * @url /admin/thread/allocation\n */\nexport type OAdminThreadAllocationPost = {\n}",
        "resValueCode": "/**\n * @description 分配客户（支持分配给多个团队里的多个人） buildResAnyTyped\n * @url /admin/thread/allocation\n */\nexport const OAdminThreadAllocationPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/apply/audit",
        "url": "/admin/thread/apply/audit",
        "pureUrl": "/admin/thread/apply/audit",
        "pathReqUrl": "/admin/thread/apply/audit",
        "method": "post",
        "apiName": "审核申请",
        "key": "AdminThreadApplyAuditPost",
        "fnName": "adminThreadApplyAuditPost",
        "requestBaseName": "IAdminThreadApplyAuditPost",
        "requestName": [
            "IAdminThreadApplyAuditPost"
        ],
        "responseBaseName": "OAdminThreadApplyAuditPost",
        "responseName": [
            "OAdminThreadApplyAuditPost"
        ],
        "responseValueName": [
            "OAdminThreadApplyAuditPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "realDeptId",
                    "type": "number",
                    "description": "团队ID",
                    "oldType": "number"
                },
                {
                    "name": "reason",
                    "type": "string",
                    "description": "驳回原因",
                    "oldType": "string"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-通过 2-驳回",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 审核申请 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: \n * @param {number} params.realDeptId 可选: 团队ID\n * @param {string} params.reason 可选: 驳回原因\n * @param {number} params.status 必填: 1-通过 2-驳回\n * @return Promise<OAdminThreadApplyAuditPost>\n */\nexport const adminThreadApplyAuditPost = async (params?: IAdminThreadApplyAuditPost) => {\n\treturn post<OAdminThreadApplyAuditPost>(`/admin/thread/apply/audit`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 审核申请 buildReqGetOrPostTyped\n * @url /admin/thread/apply/audit\n */\nexport interface IAdminThreadApplyAuditPost{\n\tid: number;\n\trealDeptId?: number; // 团队ID\n\treason?: string; // 驳回原因\n\tstatus: number; // 1-通过 2-驳回\n}",
        "resCode": "/**\n * @description 审核申请 buildResAnyTyped\n * @url /admin/thread/apply/audit\n */\nexport type OAdminThreadApplyAuditPost = {\n}",
        "resValueCode": "/**\n * @description 审核申请 buildResAnyTyped\n * @url /admin/thread/apply/audit\n */\nexport const OAdminThreadApplyAuditPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/apply",
        "url": "/admin/thread/apply",
        "pureUrl": "/admin/thread/apply",
        "pathReqUrl": "/admin/thread/apply",
        "method": "post",
        "apiName": "线索申请至团队",
        "key": "AdminThreadApplyPost",
        "fnName": "adminThreadApplyPost",
        "requestBaseName": "IAdminThreadApplyPost",
        "requestName": [
            "IAdminThreadApplyPost"
        ],
        "responseBaseName": "OAdminThreadApplyPost",
        "responseName": [
            "OAdminThreadApplyPost"
        ],
        "responseValueName": [
            "OAdminThreadApplyPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "线索ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注信息",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 线索申请至团队 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 线索ID\n * @param {string} params.remark 必填: 备注信息\n * @return Promise<OAdminThreadApplyPost>\n */\nexport const adminThreadApplyPost = async (params?: IAdminThreadApplyPost) => {\n\treturn post<OAdminThreadApplyPost>(`/admin/thread/apply`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 线索申请至团队 buildReqGetOrPostTyped\n * @url /admin/thread/apply\n */\nexport interface IAdminThreadApplyPost{\n\tinvestorId: number; // 线索ID\n\tremark: string; // 备注信息\n}",
        "resCode": "/**\n * @description 线索申请至团队 buildResAnyTyped\n * @url /admin/thread/apply\n */\nexport type OAdminThreadApplyPost = {\n}",
        "resValueCode": "/**\n * @description 线索申请至团队 buildResAnyTyped\n * @url /admin/thread/apply\n */\nexport const OAdminThreadApplyPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/audit/detail/{x}",
        "url": "/admin/thread/audit/detail/{id}",
        "pureUrl": "/admin/thread/audit/detail/{x}",
        "pathReqUrl": "/admin/thread/audit/detail/${id}",
        "method": "get",
        "apiName": "放弃/删除审核详情",
        "key": "AdminThreadAuditDetailIdGet",
        "fnName": "adminThreadAuditDetailIdGet",
        "requestBaseName": "IAdminThreadAuditDetailIdGet",
        "requestName": [
            "IAdminThreadAuditDetailIdGet"
        ],
        "responseBaseName": "OAdminThreadAuditDetailIdGet",
        "responseName": [
            "OAdminThreadAuditDetailIdGet"
        ],
        "responseValueName": [
            "OAdminThreadAuditDetailIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 放弃/删除审核详情 buildFnPathCode\n * @path {string id 必填: }\n * @return Promise<OAdminThreadAuditDetailIdGet>\n */\nexport const adminThreadAuditDetailIdGet = async (id: string) => {\n\treturn get<OAdminThreadAuditDetailIdGet>(`/admin/thread/audit/detail/${id}`)\n}",
        "reqCode": "/**\n * @description 放弃/删除审核详情 buildReqGetOrPostTyped\n * @url /admin/thread/audit/detail/{id}\n */\nexport interface IAdminThreadAuditDetailIdGet{\n}",
        "resCode": "/**\n * @description 放弃/删除审核详情 buildResAnyTyped\n * @url /admin/thread/audit/detail/{x}\n */\nexport type OAdminThreadAuditDetailIdGet = {\n}",
        "resValueCode": "/**\n * @description 放弃/删除审核详情 buildResAnyTyped\n * @url /admin/thread/audit/detail/{x}\n */\nexport const OAdminThreadAuditDetailIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/audit/list/{x}",
        "url": "/admin/thread/audit/list/{type}",
        "pureUrl": "/admin/thread/audit/list/{x}",
        "pathReqUrl": "/admin/thread/audit/list/${type}",
        "method": "get",
        "apiName": "放弃/删除审核列表",
        "key": "AdminThreadAuditListTypeGet",
        "fnName": "adminThreadAuditListTypeGet",
        "requestBaseName": "IAdminThreadAuditListTypeGet",
        "requestName": [
            "IAdminThreadAuditListTypeGet",
            "IAdminThreadAuditListTypeGetGroup"
        ],
        "responseBaseName": "OAdminThreadAuditListTypeGet",
        "responseName": [
            "OAdminThreadAuditListTypeGet"
        ],
        "responseValueName": [
            "OAdminThreadAuditListTypeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "7OTKL1UN4E",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "状态 0-待审核 1-审核通过 2-审核不通过 3-删除客户/放弃客户 9-已撤销",
                    "type": "number",
                    "id": "aohw47YVS9",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "团队ID",
                    "type": "number",
                    "id": "h1VWUpSZkX",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                }
            ],
            "path": [
                {
                    "id": "type#0",
                    "name": "type",
                    "required": true,
                    "description": "类型 0-放弃 1-删除 2-转让 3-申请 4-意向等级 5-成交状态 -1全部",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 放弃/删除审核列表 buildFnPathCode\n * @path {number type 必填: 类型 0-放弃 1-删除 2-转让 3-申请 4-意向等级 5-成交状态 -1全部}\n * @query {string} keyword 可选: \n * @query {number} status 可选: 状态 0-待审核 1-审核通过 2-审核不通过 3-删除客户/放弃客户 9-已撤销\n * @query {number} deptId 可选: 团队ID\n * @return Promise<OAdminThreadAuditListTypeGet>\n */\nexport const adminThreadAuditListTypeGet = async ({path, params}: IAdminThreadAuditListTypeGetGroup) => {\n\treturn get<OAdminThreadAuditListTypeGet>(`/admin/thread/audit/list/${path.type}`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 放弃/删除审核列表 buildReqGetOrPostTyped\n * @url /admin/thread/audit/list/{type}\n */\nexport interface IAdminThreadAuditListTypeGet{\n\tkeyword?: string;\n\tstatus?: number; // 状态 0-待审核 1-审核通过 2-审核不通过 3-删除客户/放弃客户 9-已撤销\n\tdeptId?: number; // 团队ID\n}/**\n * @description 放弃/删除审核列表 buildReqGetOrPostTyped\n * @url /admin/thread/audit/list/{type}\n */\nexport interface IAdminThreadAuditListTypeGetGroup {\n  path: {\n\t\ttype: number; // 类型 0-放弃 1-删除 2-转让 3-申请 4-意向等级 5-成交状态 -1全部\n\t};\n  params: IAdminThreadAuditListTypeGet;\n}",
        "resCode": "/**\n * @description 放弃/删除审核列表 buildResAnyTyped\n * @url /admin/thread/audit/list/{x}\n */\nexport type OAdminThreadAuditListTypeGet = {\n}",
        "resValueCode": "/**\n * @description 放弃/删除审核列表 buildResAnyTyped\n * @url /admin/thread/audit/list/{x}\n */\nexport const OAdminThreadAuditListTypeGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/audit",
        "url": "/admin/thread/audit",
        "pureUrl": "/admin/thread/audit",
        "pathReqUrl": "/admin/thread/audit",
        "method": "post",
        "apiName": "审核 放弃/删除审核",
        "key": "AdminThreadAuditPost",
        "fnName": "adminThreadAuditPost",
        "requestBaseName": "IAdminThreadAuditPost",
        "requestName": [
            "IAdminThreadAuditPost"
        ],
        "responseBaseName": "OAdminThreadAuditPost",
        "responseName": [
            "OAdminThreadAuditPost"
        ],
        "responseValueName": [
            "OAdminThreadAuditPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "ids",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "realDeptId",
                    "type": "number",
                    "description": "团队ID",
                    "oldType": "number"
                },
                {
                    "name": "reason",
                    "type": "string",
                    "description": "驳回理由",
                    "oldType": "string"
                },
                {
                    "name": "seaId",
                    "type": "number",
                    "description": "公海ID 放弃-通过时",
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-通过 2-不通过",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 审核 放弃/删除审核 buildFnGetOrPostCode\n * \n * @param {any[]} params.ids 必填: \n * @param {number} params.realDeptId 可选: 团队ID\n * @param {string} params.reason 可选: 驳回理由\n * @param {number} params.seaId 可选: 公海ID 放弃-通过时\n * @param {number} params.status 必填: 1-通过 2-不通过\n * @return Promise<OAdminThreadAuditPost>\n */\nexport const adminThreadAuditPost = async (params?: IAdminThreadAuditPost) => {\n\treturn post<OAdminThreadAuditPost>(`/admin/thread/audit`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 审核 放弃/删除审核 buildReqGetOrPostTyped\n * @url /admin/thread/audit\n */\nexport interface IAdminThreadAuditPost{\n\tids: any[];\n\trealDeptId?: number; // 团队ID\n\treason?: string; // 驳回理由\n\tseaId?: number; // 公海ID 放弃-通过时\n\tstatus: number; // 1-通过 2-不通过\n}",
        "resCode": "/**\n * @description 审核 放弃/删除审核 buildResAnyTyped\n * @url /admin/thread/audit\n */\nexport type OAdminThreadAuditPost = {\n}",
        "resValueCode": "/**\n * @description 审核 放弃/删除审核 buildResAnyTyped\n * @url /admin/thread/audit\n */\nexport const OAdminThreadAuditPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/batchAddDeptToThread",
        "url": "/admin/thread/batchAddDeptToThread",
        "pureUrl": "/admin/thread/batchAddDeptToThread",
        "pathReqUrl": "/admin/thread/batchAddDeptToThread",
        "method": "post",
        "apiName": "批量添加跟进部门",
        "key": "AdminThreadBatchAddDeptToThreadPost",
        "fnName": "adminThreadBatchAddDeptToThreadPost",
        "requestBaseName": "IAdminThreadBatchAddDeptToThreadPost",
        "requestName": [
            "IAdminThreadBatchAddDeptToThreadPost"
        ],
        "responseBaseName": "OAdminThreadBatchAddDeptToThreadPost",
        "responseName": [
            "OAdminThreadBatchAddDeptToThreadPost"
        ],
        "responseValueName": [
            "OAdminThreadBatchAddDeptToThreadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "团队ID集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "investorIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "线索IDs",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 批量添加跟进部门 buildFnGetOrPostCode\n * \n * @param {any[]} params.deptIds 必填: 团队ID集合\n * @param {any[]} params.investorIds 必填: 线索IDs\n * @return Promise<OAdminThreadBatchAddDeptToThreadPost>\n */\nexport const adminThreadBatchAddDeptToThreadPost = async (params?: IAdminThreadBatchAddDeptToThreadPost) => {\n\treturn post<OAdminThreadBatchAddDeptToThreadPost>(`/admin/thread/batchAddDeptToThread`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 批量添加跟进部门 buildReqGetOrPostTyped\n * @url /admin/thread/batchAddDeptToThread\n */\nexport interface IAdminThreadBatchAddDeptToThreadPost{\n\tdeptIds: any[]; // 团队ID集合\n\tinvestorIds: any[]; // 线索IDs\n}",
        "resCode": "/**\n * @description 批量添加跟进部门 buildResAnyTyped\n * @url /admin/thread/batchAddDeptToThread\n */\nexport type OAdminThreadBatchAddDeptToThreadPost = {\n}",
        "resValueCode": "/**\n * @description 批量添加跟进部门 buildResAnyTyped\n * @url /admin/thread/batchAddDeptToThread\n */\nexport const OAdminThreadBatchAddDeptToThreadPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/batchAllocation",
        "url": "/admin/thread/batchAllocation",
        "pureUrl": "/admin/thread/batchAllocation",
        "pathReqUrl": "/admin/thread/batchAllocation",
        "method": "post",
        "apiName": "批量添加跟进人",
        "key": "AdminThreadBatchAllocationPost",
        "fnName": "adminThreadBatchAllocationPost",
        "requestBaseName": "IAdminThreadBatchAllocationPost",
        "requestName": [
            "IAdminThreadBatchAllocationPost"
        ],
        "responseBaseName": "OAdminThreadBatchAllocationPost",
        "responseName": [
            "OAdminThreadBatchAllocationPost"
        ],
        "responseValueName": [
            "OAdminThreadBatchAllocationPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "depts",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deptId": {
                                "type": "integer",
                                "description": "部门ID"
                            },
                            "employeeIds": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "部门里的员工ids"
                            }
                        },
                        "x-apifox-orders": [
                            "deptId",
                            "employeeIds"
                        ],
                        "required": [
                            "deptId",
                            "employeeIds"
                        ],
                        "description": "存在deptId时，employeeIds至少存在一个员工"
                    },
                    "description": "部门集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "investorIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "线索ids",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 批量添加跟进人 buildFnGetOrPostCode\n * \n * @param {any[]} params.depts 必填: 部门集合\n * @param {any[]} params.investorIds 必填: 线索ids\n * @return Promise<OAdminThreadBatchAllocationPost>\n */\nexport const adminThreadBatchAllocationPost = async (params?: IAdminThreadBatchAllocationPost) => {\n\treturn post<OAdminThreadBatchAllocationPost>(`/admin/thread/batchAllocation`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 批量添加跟进人 buildReqGetOrPostTyped\n * @url /admin/thread/batchAllocation\n */\nexport interface IAdminThreadBatchAllocationPost{\n\tdepts: any[]; // 部门集合\n\tinvestorIds: any[]; // 线索ids\n}",
        "resCode": "/**\n * @description 批量添加跟进人 buildResAnyTyped\n * @url /admin/thread/batchAllocation\n */\nexport type OAdminThreadBatchAllocationPost = {\n}",
        "resValueCode": "/**\n * @description 批量添加跟进人 buildResAnyTyped\n * @url /admin/thread/batchAllocation\n */\nexport const OAdminThreadBatchAllocationPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/call/phone",
        "url": "/admin/thread/call/phone",
        "pureUrl": "/admin/thread/call/phone",
        "pathReqUrl": "/admin/thread/call/phone",
        "method": "post",
        "apiName": "拨号",
        "key": "AdminThreadCallPhonePost",
        "fnName": "adminThreadCallPhonePost",
        "requestBaseName": "IAdminThreadCallPhonePost",
        "requestName": [
            "IAdminThreadCallPhonePost"
        ],
        "responseBaseName": "OAdminThreadCallPhonePost",
        "responseName": [
            "OAdminThreadCallPhonePost"
        ],
        "responseValueName": [
            "OAdminThreadCallPhonePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "phoneId",
                    "type": "string",
                    "description": "手机号id",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 拨号 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {string} params.phoneId 必填: 手机号id\n * @return Promise<OAdminThreadCallPhonePost>\n */\nexport const adminThreadCallPhonePost = async (params?: IAdminThreadCallPhonePost) => {\n\treturn post<OAdminThreadCallPhonePost>(`/admin/thread/call/phone`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 拨号 buildReqGetOrPostTyped\n * @url /admin/thread/call/phone\n */\nexport interface IAdminThreadCallPhonePost{\n\tinvestorId: number;\n\tphoneId: string; // 手机号id\n}",
        "resCode": "/**\n * @description 拨号 buildResAnyTyped\n * @url /admin/thread/call/phone\n */\nexport type OAdminThreadCallPhonePost = {\n}",
        "resValueCode": "/**\n * @description 拨号 buildResAnyTyped\n * @url /admin/thread/call/phone\n */\nexport const OAdminThreadCallPhonePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/check/dxLogin",
        "url": "/admin/thread/check/dxLogin",
        "pureUrl": "/admin/thread/check/dxLogin",
        "pathReqUrl": "/admin/thread/check/dxLogin",
        "method": "post",
        "apiName": "检查电销手机是否登录",
        "key": "AdminThreadCheckDxLoginPost",
        "fnName": "adminThreadCheckDxLoginPost",
        "requestBaseName": "IAdminThreadCheckDxLoginPost",
        "requestName": [
            "IAdminThreadCheckDxLoginPost"
        ],
        "responseBaseName": "OAdminThreadCheckDxLoginPost",
        "responseName": [
            "OAdminThreadCheckDxLoginPost"
        ],
        "responseValueName": [
            "OAdminThreadCheckDxLoginPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "number",
            "description": "登录状态值 1-已登录 0-未登录",
            "oldType": "integer"
        },
        "fnCode": "/**\n * @description 检查电销手机是否登录 buildFnGetOrPostCode\n * \n * @return Promise<number>\n */\nexport const adminThreadCheckDxLoginPost = async (params?: IAdminThreadCheckDxLoginPost) => {\n\treturn post<number>(`/admin/thread/check/dxLogin`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 检查电销手机是否登录 buildReqGetOrPostTyped\n * @url /admin/thread/check/dxLogin\n */\nexport interface IAdminThreadCheckDxLoginPost{\n}",
        "resCode": "/**\n * @description 检查电销手机是否登录 buildRes\n * @url /admin/thread/check/dxLogin\n */\nexport type OAdminThreadCheckDxLoginPost =number",
        "resValueCode": "/**\n * @description 检查电销手机是否登录 buildRes\n * @url /admin/thread/check/dxLogin\n */\nexport const OAdminThreadCheckDxLoginPostValue =\n-1"
    },
    {
        "bodyKey": "post_/admin/thread/customer/product",
        "url": "/admin/thread/customer/product",
        "pureUrl": "/admin/thread/customer/product",
        "pathReqUrl": "/admin/thread/customer/product",
        "method": "post",
        "apiName": "更改客户意向项目",
        "key": "AdminThreadCustomerProductPost",
        "fnName": "adminThreadCustomerProductPost",
        "requestBaseName": "IAdminThreadCustomerProductPost",
        "requestName": [
            "IAdminThreadCustomerProductPost"
        ],
        "responseBaseName": "OAdminThreadCustomerProductPost",
        "responseName": [
            "OAdminThreadCustomerProductPost"
        ],
        "responseValueName": [
            "OAdminThreadCustomerProductPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "productTypes",
                    "type": "any[]",
                    "items": {
                        "type": "string"
                    },
                    "description": "产品类型",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 更改客户意向项目 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者ID\n * @param {any[]} params.productTypes 必填: 产品类型\n * @return Promise<OAdminThreadCustomerProductPost>\n */\nexport const adminThreadCustomerProductPost = async (params?: IAdminThreadCustomerProductPost) => {\n\treturn post<OAdminThreadCustomerProductPost>(`/admin/thread/customer/product`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 更改客户意向项目 buildReqGetOrPostTyped\n * @url /admin/thread/customer/product\n */\nexport interface IAdminThreadCustomerProductPost{\n\tinvestorId: number; // 投资者ID\n\tproductTypes: any[]; // 产品类型\n}",
        "resCode": "/**\n * @description 更改客户意向项目 buildResAnyTyped\n * @url /admin/thread/customer/product\n */\nexport type OAdminThreadCustomerProductPost = {\n}",
        "resValueCode": "/**\n * @description 更改客户意向项目 buildResAnyTyped\n * @url /admin/thread/customer/product\n */\nexport const OAdminThreadCustomerProductPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/customer/status",
        "url": "/admin/thread/customer/status",
        "pureUrl": "/admin/thread/customer/status",
        "pathReqUrl": "/admin/thread/customer/status",
        "method": "post",
        "apiName": "更改客户意向状态",
        "key": "AdminThreadCustomerStatusPost",
        "fnName": "adminThreadCustomerStatusPost",
        "requestBaseName": "IAdminThreadCustomerStatusPost",
        "requestName": [
            "IAdminThreadCustomerStatusPost"
        ],
        "responseBaseName": "OAdminThreadCustomerStatusPost",
        "responseName": [
            "OAdminThreadCustomerStatusPost"
        ],
        "responseValueName": [
            "OAdminThreadCustomerStatusPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "customerStatus",
                    "type": "number",
                    "description": "客户状态 0-强意愿 1-有效 2-长期 9-无效",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "isAudit",
                    "type": "number",
                    "description": "是否需要审核 1-审核",
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 更改客户意向状态 buildFnGetOrPostCode\n * \n * @param {number} params.customerStatus 必填: 客户状态 0-强意愿 1-有效 2-长期 9-无效\n * @param {number} params.investorId 必填: 投资者ID\n * @param {number} params.isAudit 可选: 是否需要审核 1-审核\n * @param {string} params.remark 可选: \n * @return Promise<OAdminThreadCustomerStatusPost>\n */\nexport const adminThreadCustomerStatusPost = async (params?: IAdminThreadCustomerStatusPost) => {\n\treturn post<OAdminThreadCustomerStatusPost>(`/admin/thread/customer/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 更改客户意向状态 buildReqGetOrPostTyped\n * @url /admin/thread/customer/status\n */\nexport interface IAdminThreadCustomerStatusPost{\n\tcustomerStatus: number; // 客户状态 0-强意愿 1-有效 2-长期 9-无效\n\tinvestorId: number; // 投资者ID\n\tisAudit?: number; // 是否需要审核 1-审核\n\tremark?: string;\n}",
        "resCode": "/**\n * @description 更改客户意向状态 buildResAnyTyped\n * @url /admin/thread/customer/status\n */\nexport type OAdminThreadCustomerStatusPost = {\n}",
        "resValueCode": "/**\n * @description 更改客户意向状态 buildResAnyTyped\n * @url /admin/thread/customer/status\n */\nexport const OAdminThreadCustomerStatusPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/delete",
        "url": "/admin/thread/delete",
        "pureUrl": "/admin/thread/delete",
        "pathReqUrl": "/admin/thread/delete",
        "method": "post",
        "apiName": "删除",
        "key": "AdminThreadDeletePost",
        "fnName": "adminThreadDeletePost",
        "requestBaseName": "IAdminThreadDeletePost",
        "requestName": [
            "IAdminThreadDeletePost"
        ],
        "responseBaseName": "OAdminThreadDeletePost",
        "responseName": [
            "OAdminThreadDeletePost"
        ],
        "responseValueName": [
            "OAdminThreadDeletePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资人ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "reasonId",
                    "type": "number",
                    "description": "原因ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资人ID\n * @param {number} params.reasonId 必填: 原因ID\n * @param {string} params.remark 可选: 备注\n * @return Promise<OAdminThreadDeletePost>\n */\nexport const adminThreadDeletePost = async (params?: IAdminThreadDeletePost) => {\n\treturn post<OAdminThreadDeletePost>(`/admin/thread/delete`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 删除 buildReqGetOrPostTyped\n * @url /admin/thread/delete\n */\nexport interface IAdminThreadDeletePost{\n\tinvestorId: number; // 投资人ID\n\treasonId: number; // 原因ID\n\tremark?: string; // 备注\n}",
        "resCode": "/**\n * @description 删除 buildResAnyTyped\n * @url /admin/thread/delete\n */\nexport type OAdminThreadDeletePost = {\n}",
        "resValueCode": "/**\n * @description 删除 buildResAnyTyped\n * @url /admin/thread/delete\n */\nexport const OAdminThreadDeletePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/delThreadForDept",
        "url": "/admin/thread/delThreadForDept",
        "pureUrl": "/admin/thread/delThreadForDept",
        "pathReqUrl": "/admin/thread/delThreadForDept",
        "method": "post",
        "apiName": "团队移除线索",
        "key": "AdminThreadDelThreadForDeptPost",
        "fnName": "adminThreadDelThreadForDeptPost",
        "requestBaseName": "IAdminThreadDelThreadForDeptPost",
        "requestName": [
            "IAdminThreadDelThreadForDeptPost"
        ],
        "responseBaseName": "OAdminThreadDelThreadForDeptPost",
        "responseName": [
            "OAdminThreadDelThreadForDeptPost"
        ],
        "responseValueName": [
            "OAdminThreadDelThreadForDeptPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptId",
                    "type": "number",
                    "description": "部门ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "线索ID集合",
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 团队移除线索 buildFnGetOrPostCode\n * \n * @param {number} params.deptId 必填: 部门ID\n * @param {any[]} params.investorIds 必填: 线索ID集合\n * @return Promise<OAdminThreadDelThreadForDeptPost>\n */\nexport const adminThreadDelThreadForDeptPost = async (params?: IAdminThreadDelThreadForDeptPost) => {\n\treturn post<OAdminThreadDelThreadForDeptPost>(`/admin/thread/delThreadForDept`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 团队移除线索 buildReqGetOrPostTyped\n * @url /admin/thread/delThreadForDept\n */\nexport interface IAdminThreadDelThreadForDeptPost{\n\tdeptId: number; // 部门ID\n\tinvestorIds: any[]; // 线索ID集合\n}",
        "resCode": "/**\n * @description 团队移除线索 buildResAnyTyped\n * @url /admin/thread/delThreadForDept\n */\nexport type OAdminThreadDelThreadForDeptPost = {\n}",
        "resValueCode": "/**\n * @description 团队移除线索 buildResAnyTyped\n * @url /admin/thread/delThreadForDept\n */\nexport const OAdminThreadDelThreadForDeptPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/dept/list",
        "url": "/admin/thread/dept/list",
        "pureUrl": "/admin/thread/dept/list",
        "pathReqUrl": "/admin/thread/dept/list",
        "method": "get",
        "apiName": "团队客户列表-一般仅管理员和负责人有权限",
        "key": "AdminThreadDeptListGet",
        "fnName": "adminThreadDeptListGet",
        "requestBaseName": "IAdminThreadDeptListGet",
        "requestName": [
            "IAdminThreadDeptListGet"
        ],
        "responseBaseName": "OAdminThreadDeptListGet",
        "responseName": [
            "OAdminThreadDeptListGet"
        ],
        "responseValueName": [
            "OAdminThreadDeptListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "搜索查询",
                    "type": "string",
                    "id": "Rk3OUa03YT",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JKnf73fqeC",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "wkkbBS3ZnS",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部",
                    "type": "number",
                    "id": "ou4WJmPvVx",
                    "enable": true,
                    "name": "statusLevel",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "跟进人",
                    "type": "number",
                    "id": "B920wsjI1R",
                    "enable": true,
                    "name": "employeeId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否标记为重点 0-否 1-是",
                    "type": "number",
                    "id": "xLgNYB4Xxe",
                    "enable": true,
                    "name": "important",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "客户状态 0-强意愿 1-有效 2-长期 3-无效",
                    "type": "number",
                    "id": "kFyiRugvER",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "城市",
                    "type": "string",
                    "id": "tmXdnD8rjy",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品id",
                    "type": "number",
                    "id": "ypPhK6vJss",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "新线索 固定值 1",
                    "type": "number",
                    "id": "sslmY0mspF",
                    "enable": true,
                    "name": "newThread",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "员工归属地",
                    "type": "string",
                    "id": "FNz8XxuYkA",
                    "enable": true,
                    "name": "userCity",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID 多个以英文逗号隔开",
                    "type": "string",
                    "id": "5RCVEQ2h6i",
                    "enable": true,
                    "name": "tagIds",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "团队ID",
                    "type": "number",
                    "id": "LDSZCQ7qBs",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "today yesterday week month",
                    "type": "string",
                    "id": "eHjlMGDxwj",
                    "enable": true,
                    "name": "timeday",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "个人标签",
                    "type": "string",
                    "id": "f6NYv4L5uH",
                    "enable": true,
                    "name": "personageTag",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "意向产品类型",
                    "type": "string",
                    "id": "5eu3Icshux",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "成交状态 0-未签约 1-签约 2-复购 9-退出",
                    "type": "number",
                    "id": "KUisbK87Ku",
                    "enable": true,
                    "name": "tranStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "线索状态 0-线索 2-有效 8-长期",
                    "type": "number",
                    "id": "yMrPyXIa2B",
                    "enable": true,
                    "name": "followStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "主跟进人ID",
                    "type": "number",
                    "id": "WZjnlKDv3j",
                    "enable": true,
                    "name": "primaryFollowerId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "省份",
                    "type": "string",
                    "id": "uaeSYGT4G0",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "开始时间",
                    "type": "string",
                    "id": "gFQZnfRlZB",
                    "enable": true,
                    "name": "startTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "结束时间",
                    "type": "string",
                    "id": "Kv0Xwe1TME",
                    "enable": true,
                    "name": "endTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "旅程内容搜索",
                    "type": "string",
                    "id": "H7EbOg5nFT",
                    "enable": true,
                    "name": "followRecordKeyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序",
                    "type": "string",
                    "id": "dHa03guXfa",
                    "enable": true,
                    "name": "sortField"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "zrPEUtqJZd",
                    "enable": true,
                    "name": "originId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 团队客户列表-一般仅管理员和负责人有权限 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: 搜索查询\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.statusLevel 可选: 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n * @param {number} params.employeeId 可选: 跟进人\n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 3-无效\n * @param {string} params.city 可选: 城市\n * @param {number} params.productId 可选: 产品id\n * @param {number} params.newThread 可选: 新线索 固定值 1\n * @param {string} params.userCity 可选: 员工归属地\n * @param {string} params.tagIds 可选: 标签ID 多个以英文逗号隔开\n * @param {number} params.deptId 可选: 团队ID\n * @param {string} params.timeday 可选: today yesterday week month\n * @param {string} params.personageTag 可选: 个人标签\n * @param {string} params.productType 可选: 意向产品类型\n * @param {number} params.tranStatus 可选: 成交状态 0-未签约 1-签约 2-复购 9-退出\n * @param {number} params.followStatus 可选: 线索状态 0-线索 2-有效 8-长期\n * @param {number} params.primaryFollowerId 可选: 主跟进人ID\n * @param {string} params.province 可选: 省份\n * @param {string} params.startTime 可选: 开始时间\n * @param {string} params.endTime 可选: 结束时间\n * @param {string} params.followRecordKeyword 可选: 旅程内容搜索\n * @param {string} params.sortField 可选: 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n * @param {number} params.originId 可选: \n * @return Promise<OAdminThreadDeptListGet>\n */\nexport const adminThreadDeptListGet = async (params?: IAdminThreadDeptListGet) => {\n\treturn get<OAdminThreadDeptListGet>(`/admin/thread/dept/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 团队客户列表-一般仅管理员和负责人有权限 buildReqGetOrPostTyped\n * @url /admin/thread/dept/list\n */\nexport interface IAdminThreadDeptListGet{\n\tkeyword?: string; // 搜索查询\n\tpageNum?: number;\n\tpageSize?: number;\n\tstatusLevel?: number; // 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n\temployeeId?: number; // 跟进人\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 3-无效\n\tcity?: string; // 城市\n\tproductId?: number; // 产品id\n\tnewThread?: number; // 新线索 固定值 1\n\tuserCity?: string; // 员工归属地\n\ttagIds?: string; // 标签ID 多个以英文逗号隔开\n\tdeptId?: number; // 团队ID\n\ttimeday?: string; // today yesterday week month\n\tpersonageTag?: string; // 个人标签\n\tproductType?: string; // 意向产品类型\n\ttranStatus?: number; // 成交状态 0-未签约 1-签约 2-复购 9-退出\n\tfollowStatus?: number; // 线索状态 0-线索 2-有效 8-长期\n\tprimaryFollowerId?: number; // 主跟进人ID\n\tprovince?: string; // 省份\n\tstartTime?: string; // 开始时间\n\tendTime?: string; // 结束时间\n\tfollowRecordKeyword?: string; // 旅程内容搜索\n\tsortField?: string; // 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n\toriginId?: number;\n}",
        "resCode": "/**\n * @description 团队客户列表-一般仅管理员和负责人有权限 buildResAnyTyped\n * @url /admin/thread/dept/list\n */\nexport type OAdminThreadDeptListGet = {\n}",
        "resValueCode": "/**\n * @description 团队客户列表-一般仅管理员和负责人有权限 buildResAnyTyped\n * @url /admin/thread/dept/list\n */\nexport const OAdminThreadDeptListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/download",
        "url": "/admin/thread/download",
        "pureUrl": "/admin/thread/download",
        "pathReqUrl": "/admin/thread/download",
        "method": "post",
        "apiName": "下载导出",
        "key": "AdminThreadDownloadPost",
        "fnName": "adminThreadDownloadPost",
        "requestBaseName": "IAdminThreadDownloadPost",
        "requestName": [
            "IAdminThreadDownloadPost"
        ],
        "responseBaseName": "OAdminThreadDownloadPost",
        "responseName": [
            "OAdminThreadDownloadPost"
        ],
        "responseValueName": [
            "OAdminThreadDownloadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 下载导出 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: \n * @return Promise<OAdminThreadDownloadPost>\n */\nexport const adminThreadDownloadPost = async (params?: IAdminThreadDownloadPost) => {\n\treturn post<OAdminThreadDownloadPost>(`/admin/thread/download`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 下载导出 buildReqGetOrPostTyped\n * @url /admin/thread/download\n */\nexport interface IAdminThreadDownloadPost{\n\tid: number;\n}",
        "resCode": "/**\n * @description 下载导出 buildResAnyTyped\n * @url /admin/thread/download\n */\nexport type OAdminThreadDownloadPost = {\n}",
        "resValueCode": "/**\n * @description 下载导出 buildResAnyTyped\n * @url /admin/thread/download\n */\nexport const OAdminThreadDownloadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/employee/conclude/detail",
        "url": "/admin/thread/employee/conclude/detail",
        "pureUrl": "/admin/thread/employee/conclude/detail",
        "pathReqUrl": "/admin/thread/employee/conclude/detail",
        "method": "get",
        "apiName": "查询签约详情",
        "key": "AdminThreadEmployeeConcludeDetailGet",
        "fnName": "adminThreadEmployeeConcludeDetailGet",
        "requestBaseName": "IAdminThreadEmployeeConcludeDetailGet",
        "requestName": [
            "IAdminThreadEmployeeConcludeDetailGet"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludeDetailGet",
        "responseName": [
            "OAdminThreadEmployeeConcludeDetailGet"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludeDetailGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "oq7Q1A30w2",
                    "enable": true,
                    "name": "id",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询签约详情 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: \n * @return Promise<OAdminThreadEmployeeConcludeDetailGet>\n */\nexport const adminThreadEmployeeConcludeDetailGet = async (params?: IAdminThreadEmployeeConcludeDetailGet) => {\n\treturn get<OAdminThreadEmployeeConcludeDetailGet>(`/admin/thread/employee/conclude/detail`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询签约详情 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude/detail\n */\nexport interface IAdminThreadEmployeeConcludeDetailGet{\n\tid?: number;\n}",
        "resCode": "/**\n * @description 查询签约详情 buildResAnyTyped\n * @url /admin/thread/employee/conclude/detail\n */\nexport type OAdminThreadEmployeeConcludeDetailGet = {\n}",
        "resValueCode": "/**\n * @description 查询签约详情 buildResAnyTyped\n * @url /admin/thread/employee/conclude/detail\n */\nexport const OAdminThreadEmployeeConcludeDetailGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/thread/employee/conclude/{x}",
        "url": "/admin/thread/employee/conclude/{id}",
        "pureUrl": "/admin/thread/employee/conclude/{x}",
        "pathReqUrl": "/admin/thread/employee/conclude/${id}",
        "method": "delete",
        "apiName": "删除签约",
        "key": "AdminThreadEmployeeConcludeIdDelete",
        "fnName": "adminThreadEmployeeConcludeIdDelete",
        "requestBaseName": "IAdminThreadEmployeeConcludeIdDelete",
        "requestName": [
            "IAdminThreadEmployeeConcludeIdDelete"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludeIdDelete",
        "responseName": [
            "OAdminThreadEmployeeConcludeIdDelete"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludeIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "主键ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除签约 buildFnPathCode\n * @path {number id 必填: 主键ID}\n * @return Promise<OAdminThreadEmployeeConcludeIdDelete>\n */\nexport const adminThreadEmployeeConcludeIdDelete = async (id: number) => {\n\treturn del<OAdminThreadEmployeeConcludeIdDelete>(`/admin/thread/employee/conclude/${id}`)\n}",
        "reqCode": "/**\n * @description 删除签约 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude/{id}\n */\nexport interface IAdminThreadEmployeeConcludeIdDelete{\n}",
        "resCode": "/**\n * @description 删除签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude/{x}\n */\nexport type OAdminThreadEmployeeConcludeIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude/{x}\n */\nexport const OAdminThreadEmployeeConcludeIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/employee/conclude/list",
        "url": "/admin/thread/employee/conclude/list",
        "pureUrl": "/admin/thread/employee/conclude/list",
        "pathReqUrl": "/admin/thread/employee/conclude/list",
        "method": "get",
        "apiName": "查询签约列表",
        "key": "AdminThreadEmployeeConcludeListGet",
        "fnName": "adminThreadEmployeeConcludeListGet",
        "requestBaseName": "IAdminThreadEmployeeConcludeListGet",
        "requestName": [
            "IAdminThreadEmployeeConcludeListGet"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludeListGet",
        "responseName": [
            "OAdminThreadEmployeeConcludeListGet"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludeListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "oq7Q1A30w2",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "V1Mp9EB1Nu",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询签约列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminThreadEmployeeConcludeListGet>\n */\nexport const adminThreadEmployeeConcludeListGet = async (params?: IAdminThreadEmployeeConcludeListGet) => {\n\treturn get<OAdminThreadEmployeeConcludeListGet>(`/admin/thread/employee/conclude/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询签约列表 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude/list\n */\nexport interface IAdminThreadEmployeeConcludeListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询签约列表 buildResAnyTyped\n * @url /admin/thread/employee/conclude/list\n */\nexport type OAdminThreadEmployeeConcludeListGet = {\n}",
        "resValueCode": "/**\n * @description 查询签约列表 buildResAnyTyped\n * @url /admin/thread/employee/conclude/list\n */\nexport const OAdminThreadEmployeeConcludeListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/employee/conclude",
        "url": "/admin/thread/employee/conclude",
        "pureUrl": "/admin/thread/employee/conclude",
        "pathReqUrl": "/admin/thread/employee/conclude",
        "method": "post",
        "apiName": "新增签约",
        "key": "AdminThreadEmployeeConcludePost",
        "fnName": "adminThreadEmployeeConcludePost",
        "requestBaseName": "IAdminThreadEmployeeConcludePost",
        "requestName": [
            "IAdminThreadEmployeeConcludePost"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludePost",
        "responseName": [
            "OAdminThreadEmployeeConcludePost"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "concludeTime",
                    "type": "string",
                    "description": "签单时间",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "employeeData",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "employeeId": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "number",
                                "description": "分量值 比如0.3"
                            }
                        },
                        "x-apifox-orders": [
                            "employeeId",
                            "weight"
                        ],
                        "required": [
                            "employeeId",
                            "weight"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "线索ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注描述",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增签约 buildFnGetOrPostCode\n * \n * @param {string} params.concludeTime 必填: 签单时间\n * @param {any[]} params.employeeData 必填: \n * @param {number} params.investorId 必填: 线索ID\n * @param {string} params.remark 可选: 备注描述\n * @return Promise<OAdminThreadEmployeeConcludePost>\n */\nexport const adminThreadEmployeeConcludePost = async (params?: IAdminThreadEmployeeConcludePost) => {\n\treturn post<OAdminThreadEmployeeConcludePost>(`/admin/thread/employee/conclude`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增签约 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude\n */\nexport interface IAdminThreadEmployeeConcludePost{\n\tconcludeTime: string; // 签单时间\n\temployeeData: any[];\n\tinvestorId: number; // 线索ID\n\tremark?: string; // 备注描述\n}",
        "resCode": "/**\n * @description 新增签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude\n */\nexport type OAdminThreadEmployeeConcludePost = {\n}",
        "resValueCode": "/**\n * @description 新增签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude\n */\nexport const OAdminThreadEmployeeConcludePostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/thread/employee/conclude",
        "url": "/admin/thread/employee/conclude",
        "pureUrl": "/admin/thread/employee/conclude",
        "pathReqUrl": "/admin/thread/employee/conclude",
        "method": "put",
        "apiName": "修改签约",
        "key": "AdminThreadEmployeeConcludePut",
        "fnName": "adminThreadEmployeeConcludePut",
        "requestBaseName": "IAdminThreadEmployeeConcludePut",
        "requestName": [
            "IAdminThreadEmployeeConcludePut"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludePut",
        "responseName": [
            "OAdminThreadEmployeeConcludePut"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "concludeTime",
                    "type": "string",
                    "description": "签单时间",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "employeeData",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "employeeId": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "number",
                                "description": "分量值 比如0.3"
                            }
                        },
                        "x-apifox-orders": [
                            "employeeId",
                            "weight"
                        ],
                        "required": [
                            "employeeId",
                            "weight"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "主键ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注描述",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改签约 buildFnGetOrPostCode\n * \n * @param {string} params.concludeTime 必填: 签单时间\n * @param {any[]} params.employeeData 必填: \n * @param {number} params.id 必填: 主键ID\n * @param {string} params.remark 可选: 备注描述\n * @return Promise<OAdminThreadEmployeeConcludePut>\n */\nexport const adminThreadEmployeeConcludePut = async (params?: IAdminThreadEmployeeConcludePut) => {\n\treturn put<OAdminThreadEmployeeConcludePut>(`/admin/thread/employee/conclude`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改签约 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude\n */\nexport interface IAdminThreadEmployeeConcludePut{\n\tconcludeTime: string; // 签单时间\n\temployeeData: any[];\n\tid: number; // 主键ID\n\tremark?: string; // 备注描述\n}",
        "resCode": "/**\n * @description 修改签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude\n */\nexport type OAdminThreadEmployeeConcludePut = {\n}",
        "resValueCode": "/**\n * @description 修改签约 buildResAnyTyped\n * @url /admin/thread/employee/conclude\n */\nexport const OAdminThreadEmployeeConcludePutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/employee/conclude/rank/{x}",
        "url": "/admin/thread/employee/conclude/rank/{type}",
        "pureUrl": "/admin/thread/employee/conclude/rank/{x}",
        "pathReqUrl": "/admin/thread/employee/conclude/rank/${type}",
        "method": "get",
        "apiName": "查询签约排行榜",
        "key": "AdminThreadEmployeeConcludeRankTypeGet",
        "fnName": "adminThreadEmployeeConcludeRankTypeGet",
        "requestBaseName": "IAdminThreadEmployeeConcludeRankTypeGet",
        "requestName": [
            "IAdminThreadEmployeeConcludeRankTypeGet"
        ],
        "responseBaseName": "OAdminThreadEmployeeConcludeRankTypeGet",
        "responseName": [
            "OAdminThreadEmployeeConcludeRankTypeGet"
        ],
        "responseValueName": [
            "OAdminThreadEmployeeConcludeRankTypeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "type#0",
                    "name": "type",
                    "required": true,
                    "description": "all-总排行 curMonth-当月 preMonth-上月 threeMonth-近3月",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询签约排行榜 buildFnPathCode\n * @path {string type 必填: all-总排行 curMonth-当月 preMonth-上月 threeMonth-近3月}\n * @return Promise<OAdminThreadEmployeeConcludeRankTypeGet>\n */\nexport const adminThreadEmployeeConcludeRankTypeGet = async (type: string) => {\n\treturn get<OAdminThreadEmployeeConcludeRankTypeGet>(`/admin/thread/employee/conclude/rank/${type}`)\n}",
        "reqCode": "/**\n * @description 查询签约排行榜 buildReqGetOrPostTyped\n * @url /admin/thread/employee/conclude/rank/{type}\n */\nexport interface IAdminThreadEmployeeConcludeRankTypeGet{\n}",
        "resCode": "/**\n * @description 查询签约排行榜 buildResAnyTyped\n * @url /admin/thread/employee/conclude/rank/{x}\n */\nexport type OAdminThreadEmployeeConcludeRankTypeGet = {\n}",
        "resValueCode": "/**\n * @description 查询签约排行榜 buildResAnyTyped\n * @url /admin/thread/employee/conclude/rank/{x}\n */\nexport const OAdminThreadEmployeeConcludeRankTypeGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/export/list",
        "url": "/admin/thread/export/list",
        "pureUrl": "/admin/thread/export/list",
        "pathReqUrl": "/admin/thread/export/list",
        "method": "get",
        "apiName": "获取导出列表",
        "key": "AdminThreadExportListGet",
        "fnName": "adminThreadExportListGet",
        "requestBaseName": "IAdminThreadExportListGet",
        "requestName": [
            "IAdminThreadExportListGet"
        ],
        "responseBaseName": "OAdminThreadExportListGet",
        "responseName": [
            "OAdminThreadExportListGet"
        ],
        "responseValueName": [
            "OAdminThreadExportListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "zpFNi2l6rX",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "0h4D1vJVTJ",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "位置 sea team mine",
                    "type": "string",
                    "id": "qAqHwfE0Uj",
                    "enable": true,
                    "name": "position",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "状态 0-打包中 1-打包完成 2-打包失败",
                    "type": "number",
                    "id": "qi9aCEx6UZ",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "下载人ID",
                    "type": "number",
                    "id": "Bj1tBmQ4yq",
                    "enable": true,
                    "name": "createById",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取导出列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.position 可选: 位置 sea team mine\n * @param {number} params.status 可选: 状态 0-打包中 1-打包完成 2-打包失败\n * @param {number} params.createById 可选: 下载人ID\n * @return Promise<OAdminThreadExportListGet>\n */\nexport const adminThreadExportListGet = async (params?: IAdminThreadExportListGet) => {\n\treturn get<OAdminThreadExportListGet>(`/admin/thread/export/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取导出列表 buildReqGetOrPostTyped\n * @url /admin/thread/export/list\n */\nexport interface IAdminThreadExportListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\tposition?: string; // 位置 sea team mine\n\tstatus?: number; // 状态 0-打包中 1-打包完成 2-打包失败\n\tcreateById?: number; // 下载人ID\n}",
        "resCode": "/**\n * @description 获取导出列表 buildResAnyTyped\n * @url /admin/thread/export/list\n */\nexport type OAdminThreadExportListGet = {\n}",
        "resValueCode": "/**\n * @description 获取导出列表 buildResAnyTyped\n * @url /admin/thread/export/list\n */\nexport const OAdminThreadExportListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/export",
        "url": "/admin/thread/export",
        "pureUrl": "/admin/thread/export",
        "pathReqUrl": "/admin/thread/export",
        "method": "post",
        "apiName": "数据导出",
        "key": "AdminThreadExportPost",
        "fnName": "adminThreadExportPost",
        "requestBaseName": "IAdminThreadExportPost",
        "requestName": [
            "IAdminThreadExportPost"
        ],
        "responseBaseName": "OAdminThreadExportPost",
        "responseName": [
            "OAdminThreadExportPost"
        ],
        "responseValueName": [
            "OAdminThreadExportPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "position",
                    "type": "string",
                    "description": "位置 'sea','team','mine'",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "queryParams",
                    "type": "any",
                    "properties": {},
                    "x-apifox-orders": [],
                    "description": "查询参数",
                    "required": true,
                    "oldType": "any"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 数据导出 buildFnGetOrPostCode\n * \n * @param {string} params.position 必填: 位置 'sea','team','mine'\n * @param {any} params.queryParams 必填: 查询参数\n * @return Promise<OAdminThreadExportPost>\n */\nexport const adminThreadExportPost = async (params?: IAdminThreadExportPost) => {\n\treturn post<OAdminThreadExportPost>(`/admin/thread/export`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 数据导出 buildReqGetOrPostTyped\n * @url /admin/thread/export\n */\nexport interface IAdminThreadExportPost{\n\tposition: string; // 位置 'sea','team','mine'\n\tqueryParams: any; // 查询参数\n}",
        "resCode": "/**\n * @description 数据导出 buildResAnyTyped\n * @url /admin/thread/export\n */\nexport type OAdminThreadExportPost = {\n}",
        "resValueCode": "/**\n * @description 数据导出 buildResAnyTyped\n * @url /admin/thread/export\n */\nexport const OAdminThreadExportPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/external/{x}",
        "url": "/admin/thread/external/{externalUserId}",
        "pureUrl": "/admin/thread/external/{x}",
        "pathReqUrl": "/admin/thread/external/${externalUserId}",
        "method": "get",
        "apiName": "客户详情-跟进企微联系人ID",
        "key": "AdminThreadExternalExternalUserIdGet",
        "fnName": "adminThreadExternalExternalUserIdGet",
        "requestBaseName": "IAdminThreadExternalExternalUserIdGet",
        "requestName": [
            "IAdminThreadExternalExternalUserIdGet"
        ],
        "responseBaseName": "OAdminThreadExternalExternalUserIdGet",
        "responseName": [
            "OAdminThreadExternalExternalUserIdGet"
        ],
        "responseValueName": [
            "OAdminThreadExternalExternalUserIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "externalUserId#0",
                    "name": "externalUserId",
                    "required": true,
                    "description": "企业微信联系人ID",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 客户详情-跟进企微联系人ID buildFnPathCode\n * @path {string externalUserId 必填: 企业微信联系人ID}\n * @return Promise<OAdminThreadExternalExternalUserIdGet>\n */\nexport const adminThreadExternalExternalUserIdGet = async (externalUserId: string) => {\n\treturn get<OAdminThreadExternalExternalUserIdGet>(`/admin/thread/external/${externalUserId}`)\n}",
        "reqCode": "/**\n * @description 客户详情-跟进企微联系人ID buildReqGetOrPostTyped\n * @url /admin/thread/external/{externalUserId}\n */\nexport interface IAdminThreadExternalExternalUserIdGet{\n}",
        "resCode": "/**\n * @description 客户详情-跟进企微联系人ID buildResAnyTyped\n * @url /admin/thread/external/{x}\n */\nexport type OAdminThreadExternalExternalUserIdGet = {\n}",
        "resValueCode": "/**\n * @description 客户详情-跟进企微联系人ID buildResAnyTyped\n * @url /admin/thread/external/{x}\n */\nexport const OAdminThreadExternalExternalUserIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/follow/record",
        "url": "/admin/thread/follow/record",
        "pureUrl": "/admin/thread/follow/record",
        "pathReqUrl": "/admin/thread/follow/record",
        "method": "get",
        "apiName": "旅程列表",
        "key": "AdminThreadFollowRecordGet",
        "fnName": "adminThreadFollowRecordGet",
        "requestBaseName": "IAdminThreadFollowRecordGet",
        "requestName": [
            "IAdminThreadFollowRecordGet"
        ],
        "responseBaseName": "OAdminThreadFollowRecordGet",
        "responseName": [
            "OAdminThreadFollowRecordGet"
        ],
        "responseValueName": [
            "OAdminThreadFollowRecordGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "投资者ID",
                    "type": "number",
                    "id": "HaemgDVMoh",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "GTxvBpGZQf",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "9sHtpGxFC6",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "QIMtaTIa71",
                    "enable": true,
                    "name": "followRecordKeyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 旅程列表 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者ID\n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.followRecordKeyword 可选: \n * @return Promise<OAdminThreadFollowRecordGet>\n */\nexport const adminThreadFollowRecordGet = async (params?: IAdminThreadFollowRecordGet) => {\n\treturn get<OAdminThreadFollowRecordGet>(`/admin/thread/follow/record`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 旅程列表 buildReqGetOrPostTyped\n * @url /admin/thread/follow/record\n */\nexport interface IAdminThreadFollowRecordGet{\n\tinvestorId: number; // 投资者ID\n\tpageSize?: number;\n\tpageNum?: number;\n\tfollowRecordKeyword?: string;\n}",
        "resCode": "/**\n * @description 旅程列表 buildResAnyTyped\n * @url /admin/thread/follow/record\n */\nexport type OAdminThreadFollowRecordGet = {\n}",
        "resValueCode": "/**\n * @description 旅程列表 buildResAnyTyped\n * @url /admin/thread/follow/record\n */\nexport const OAdminThreadFollowRecordGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/follow/record",
        "url": "/admin/thread/follow/record",
        "pureUrl": "/admin/thread/follow/record",
        "pathReqUrl": "/admin/thread/follow/record",
        "method": "post",
        "apiName": "添加旅程",
        "key": "AdminThreadFollowRecordPost",
        "fnName": "adminThreadFollowRecordPost",
        "requestBaseName": "IAdminThreadFollowRecordPost",
        "requestName": [
            "IAdminThreadFollowRecordPost"
        ],
        "responseBaseName": "OAdminThreadFollowRecordPost",
        "responseName": [
            "OAdminThreadFollowRecordPost"
        ],
        "responseValueName": [
            "OAdminThreadFollowRecordPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "completeTime",
                    "type": "string",
                    "description": "完成时间",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "content",
                    "type": "string",
                    "description": "跟进内容",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "fileList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "文件地址"
                            },
                            "name": {
                                "type": "string",
                                "description": "文件名称"
                            },
                            "type": {
                                "type": "string",
                                "description": "文件类型"
                            },
                            "size": {
                                "type": "integer",
                                "description": "文件大小"
                            }
                        },
                        "x-apifox-orders": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ],
                        "required": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ]
                    },
                    "description": "附件集合",
                    "oldType": "any[]"
                },
                {
                    "name": "followStatus",
                    "type": "number",
                    "description": "跟进状态",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加旅程 buildFnGetOrPostCode\n * \n * @param {string} params.completeTime 必填: 完成时间\n * @param {string} params.content 必填: 跟进内容\n * @param {any[]} params.fileList 可选: 附件集合\n * @param {number} params.followStatus 必填: 跟进状态\n * @param {number} params.investorId 必填: 投资者ID\n * @return Promise<OAdminThreadFollowRecordPost>\n */\nexport const adminThreadFollowRecordPost = async (params?: IAdminThreadFollowRecordPost) => {\n\treturn post<OAdminThreadFollowRecordPost>(`/admin/thread/follow/record`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加旅程 buildReqGetOrPostTyped\n * @url /admin/thread/follow/record\n */\nexport interface IAdminThreadFollowRecordPost{\n\tcompleteTime: string; // 完成时间\n\tcontent: string; // 跟进内容\n\tfileList?: any[]; // 附件集合\n\tfollowStatus: number; // 跟进状态\n\tinvestorId: number; // 投资者ID\n}",
        "resCode": "/**\n * @description 添加旅程 buildResAnyTyped\n * @url /admin/thread/follow/record\n */\nexport type OAdminThreadFollowRecordPost = {\n}",
        "resValueCode": "/**\n * @description 添加旅程 buildResAnyTyped\n * @url /admin/thread/follow/record\n */\nexport const OAdminThreadFollowRecordPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/thread/follow/status",
        "url": "/admin/thread/follow/status",
        "pureUrl": "/admin/thread/follow/status",
        "pathReqUrl": "/admin/thread/follow/status",
        "method": "put",
        "apiName": "变更跟进状态",
        "key": "AdminThreadFollowStatusPut",
        "fnName": "adminThreadFollowStatusPut",
        "requestBaseName": "IAdminThreadFollowStatusPut",
        "requestName": [
            "IAdminThreadFollowStatusPut"
        ],
        "responseBaseName": "OAdminThreadFollowStatusPut",
        "responseName": [
            "OAdminThreadFollowStatusPut"
        ],
        "responseValueName": [
            "OAdminThreadFollowStatusPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "followStatus",
                    "type": "number",
                    "description": "跟进状态",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 变更跟进状态 buildFnGetOrPostCode\n * \n * @param {number} params.followStatus 必填: 跟进状态\n * @param {number} params.investorId 必填: 投资者ID\n * @return Promise<OAdminThreadFollowStatusPut>\n */\nexport const adminThreadFollowStatusPut = async (params?: IAdminThreadFollowStatusPut) => {\n\treturn put<OAdminThreadFollowStatusPut>(`/admin/thread/follow/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 变更跟进状态 buildReqGetOrPostTyped\n * @url /admin/thread/follow/status\n */\nexport interface IAdminThreadFollowStatusPut{\n\tfollowStatus: number; // 跟进状态\n\tinvestorId: number; // 投资者ID\n}",
        "resCode": "/**\n * @description 变更跟进状态 buildResAnyTyped\n * @url /admin/thread/follow/status\n */\nexport type OAdminThreadFollowStatusPut = {\n}",
        "resValueCode": "/**\n * @description 变更跟进状态 buildResAnyTyped\n * @url /admin/thread/follow/status\n */\nexport const OAdminThreadFollowStatusPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/giveup",
        "url": "/admin/thread/giveup",
        "pureUrl": "/admin/thread/giveup",
        "pathReqUrl": "/admin/thread/giveup",
        "method": "post",
        "apiName": "放弃",
        "key": "AdminThreadGiveupPost",
        "fnName": "adminThreadGiveupPost",
        "requestBaseName": "IAdminThreadGiveupPost",
        "requestName": [
            "IAdminThreadGiveupPost"
        ],
        "responseBaseName": "OAdminThreadGiveupPost",
        "responseName": [
            "OAdminThreadGiveupPost"
        ],
        "responseValueName": [
            "OAdminThreadGiveupPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资人ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "reasonId",
                    "type": "number",
                    "description": "原因ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 放弃 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资人ID\n * @param {number} params.reasonId 必填: 原因ID\n * @param {string} params.remark 可选: 备注\n * @return Promise<OAdminThreadGiveupPost>\n */\nexport const adminThreadGiveupPost = async (params?: IAdminThreadGiveupPost) => {\n\treturn post<OAdminThreadGiveupPost>(`/admin/thread/giveup`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 放弃 buildReqGetOrPostTyped\n * @url /admin/thread/giveup\n */\nexport interface IAdminThreadGiveupPost{\n\tinvestorId: number; // 投资人ID\n\treasonId: number; // 原因ID\n\tremark?: string; // 备注\n}",
        "resCode": "/**\n * @description 放弃 buildResAnyTyped\n * @url /admin/thread/giveup\n */\nexport type OAdminThreadGiveupPost = {\n}",
        "resValueCode": "/**\n * @description 放弃 buildResAnyTyped\n * @url /admin/thread/giveup\n */\nexport const OAdminThreadGiveupPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/{x}",
        "url": "/admin/thread/{id}",
        "pureUrl": "/admin/thread/{x}",
        "pathReqUrl": "/admin/thread/${id}",
        "method": "get",
        "apiName": "客户详情",
        "key": "AdminThreadIdGet",
        "fnName": "adminThreadIdGet",
        "requestBaseName": "IAdminThreadIdGet",
        "requestName": [
            "IAdminThreadIdGet"
        ],
        "responseBaseName": "OAdminThreadIdGet",
        "responseName": [
            "OAdminThreadIdGet"
        ],
        "responseValueName": [
            "OAdminThreadIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "投资者ID",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 客户详情 buildFnPathCode\n * @path {number id 必填: 投资者ID}\n * @return Promise<OAdminThreadIdGet>\n */\nexport const adminThreadIdGet = async (id: number) => {\n\treturn get<OAdminThreadIdGet>(`/admin/thread/${id}`)\n}",
        "reqCode": "/**\n * @description 客户详情 buildReqGetOrPostTyped\n * @url /admin/thread/{id}\n */\nexport interface IAdminThreadIdGet{\n}",
        "resCode": "/**\n * @description 客户详情 buildResAnyTyped\n * @url /admin/thread/{x}\n */\nexport type OAdminThreadIdGet = {\n}",
        "resValueCode": "/**\n * @description 客户详情 buildResAnyTyped\n * @url /admin/thread/{x}\n */\nexport const OAdminThreadIdGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/important",
        "url": "/admin/thread/important",
        "pureUrl": "/admin/thread/important",
        "pathReqUrl": "/admin/thread/important",
        "method": "post",
        "apiName": "标记为重要/不重要客户",
        "key": "AdminThreadImportantPost",
        "fnName": "adminThreadImportantPost",
        "requestBaseName": "IAdminThreadImportantPost",
        "requestName": [
            "IAdminThreadImportantPost"
        ],
        "responseBaseName": "OAdminThreadImportantPost",
        "responseName": [
            "OAdminThreadImportantPost"
        ],
        "responseValueName": [
            "OAdminThreadImportantPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "important",
                    "type": "number",
                    "description": "是否标记为重点 0-否 1-是",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 标记为重要/不重要客户 buildFnGetOrPostCode\n * \n * @param {number} params.important 必填: 是否标记为重点 0-否 1-是\n * @param {number} params.investorId 必填: \n * @return Promise<OAdminThreadImportantPost>\n */\nexport const adminThreadImportantPost = async (params?: IAdminThreadImportantPost) => {\n\treturn post<OAdminThreadImportantPost>(`/admin/thread/important`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 标记为重要/不重要客户 buildReqGetOrPostTyped\n * @url /admin/thread/important\n */\nexport interface IAdminThreadImportantPost{\n\timportant: number; // 是否标记为重点 0-否 1-是\n\tinvestorId: number;\n}",
        "resCode": "/**\n * @description 标记为重要/不重要客户 buildResAnyTyped\n * @url /admin/thread/important\n */\nexport type OAdminThreadImportantPost = {\n}",
        "resValueCode": "/**\n * @description 标记为重要/不重要客户 buildResAnyTyped\n * @url /admin/thread/important\n */\nexport const OAdminThreadImportantPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/list",
        "url": "/admin/thread/list",
        "pureUrl": "/admin/thread/list",
        "pathReqUrl": "/admin/thread/list",
        "method": "get",
        "apiName": "公海客户列表",
        "key": "AdminThreadListGet",
        "fnName": "adminThreadListGet",
        "requestBaseName": "IAdminThreadListGet",
        "requestName": [
            "IAdminThreadListGet"
        ],
        "responseBaseName": "OAdminThreadListGet",
        "responseName": [
            "OAdminThreadListGet"
        ],
        "responseValueName": [
            "OAdminThreadListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "aFRyrIlos3",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "公海ID 0-未知公海 空字符串或不传-全部",
                    "type": "number",
                    "id": "txVXGFDNcH",
                    "enable": true,
                    "name": "seaId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "eEOzrC1YCW",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "YYbwzh76RD",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否标记为重点 0-否 1-是",
                    "type": "number",
                    "id": "hA5d5lP7gy",
                    "enable": true,
                    "name": "important",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "客户状态 0-强意愿 1-有效 2-长期 3-无效",
                    "type": "number",
                    "id": "D8nFkW70Am",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "城市",
                    "type": "string",
                    "id": "v4XfZLIJQg",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品ID",
                    "type": "number",
                    "id": "5cqA10QdZ7",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "新线索 固定值 1",
                    "type": "number",
                    "id": "dGBvSuEboL",
                    "enable": true,
                    "name": "newThread",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "省份",
                    "type": "string",
                    "id": "l57L0qWhWV",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "cvXQejUiT3",
                    "enable": true,
                    "name": "channelId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序",
                    "type": "string",
                    "id": "qDQMrXCmtK",
                    "enable": true,
                    "name": "sortField"
                },
                {
                    "required": false,
                    "description": "企业标签ids 多个以英文逗号隔开",
                    "type": "string",
                    "id": "62j1SE9iTF",
                    "enable": true,
                    "name": "tagIds"
                },
                {
                    "required": false,
                    "description": "来源ID",
                    "type": "number",
                    "id": "3PgVNoAvqh",
                    "enable": true,
                    "name": "originId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 公海客户列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {number} params.seaId 可选: 公海ID 0-未知公海 空字符串或不传-全部\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 3-无效\n * @param {string} params.city 可选: 城市\n * @param {number} params.productId 可选: 产品ID\n * @param {number} params.newThread 可选: 新线索 固定值 1\n * @param {string} params.province 可选: 省份\n * @param {string} params.channelId 可选: \n * @param {string} params.sortField 可选: 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n * @param {string} params.tagIds 可选: 企业标签ids 多个以英文逗号隔开\n * @param {number} params.originId 可选: 来源ID\n * @return Promise<OAdminThreadListGet>\n */\nexport const adminThreadListGet = async (params?: IAdminThreadListGet) => {\n\treturn get<OAdminThreadListGet>(`/admin/thread/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 公海客户列表 buildReqGetOrPostTyped\n * @url /admin/thread/list\n */\nexport interface IAdminThreadListGet{\n\tkeyword?: string;\n\tseaId?: number; // 公海ID 0-未知公海 空字符串或不传-全部\n\tpageNum?: number;\n\tpageSize?: number;\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 3-无效\n\tcity?: string; // 城市\n\tproductId?: number; // 产品ID\n\tnewThread?: number; // 新线索 固定值 1\n\tprovince?: string; // 省份\n\tchannelId?: string;\n\tsortField?: string; // 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n\ttagIds?: string; // 企业标签ids 多个以英文逗号隔开\n\toriginId?: number; // 来源ID\n}",
        "resCode": "/**\n * @description 公海客户列表 buildResAnyTyped\n * @url /admin/thread/list\n */\nexport type OAdminThreadListGet = {\n}",
        "resValueCode": "/**\n * @description 公海客户列表 buildResAnyTyped\n * @url /admin/thread/list\n */\nexport const OAdminThreadListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/merge/base/info",
        "url": "/admin/thread/merge/base/info",
        "pureUrl": "/admin/thread/merge/base/info",
        "pathReqUrl": "/admin/thread/merge/base/info",
        "method": "post",
        "apiName": "获取合并后的基本信息",
        "key": "AdminThreadMergeBaseInfoPost",
        "fnName": "adminThreadMergeBaseInfoPost",
        "requestBaseName": "IAdminThreadMergeBaseInfoPost",
        "requestName": [
            "IAdminThreadMergeBaseInfoPost"
        ],
        "responseBaseName": "OAdminThreadMergeBaseInfoPost",
        "responseName": [
            "OAdminThreadMergeBaseInfoPost"
        ],
        "responseValueName": [
            "OAdminThreadMergeBaseInfoPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "mergeData",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "isMain": {
                                "type": "integer",
                                "description": "是否主线索 1-是 0-否"
                            },
                            "investorId": {
                                "type": "integer",
                                "description": "线索ID"
                            }
                        },
                        "x-apifox-orders": [
                            "isMain",
                            "investorId"
                        ],
                        "required": [
                            "isMain",
                            "investorId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取合并后的基本信息 buildFnGetOrPostCode\n * \n * @param {any[]} params.mergeData 必填: \n * @return Promise<OAdminThreadMergeBaseInfoPost>\n */\nexport const adminThreadMergeBaseInfoPost = async (params?: IAdminThreadMergeBaseInfoPost) => {\n\treturn post<OAdminThreadMergeBaseInfoPost>(`/admin/thread/merge/base/info`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取合并后的基本信息 buildReqGetOrPostTyped\n * @url /admin/thread/merge/base/info\n */\nexport interface IAdminThreadMergeBaseInfoPost{\n\tmergeData: any[];\n}",
        "resCode": "/**\n * @description 获取合并后的基本信息 buildResAnyTyped\n * @url /admin/thread/merge/base/info\n */\nexport type OAdminThreadMergeBaseInfoPost = {\n}",
        "resValueCode": "/**\n * @description 获取合并后的基本信息 buildResAnyTyped\n * @url /admin/thread/merge/base/info\n */\nexport const OAdminThreadMergeBaseInfoPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/merge/follow/record",
        "url": "/admin/thread/merge/follow/record",
        "pureUrl": "/admin/thread/merge/follow/record",
        "pathReqUrl": "/admin/thread/merge/follow/record",
        "method": "post",
        "apiName": "获取合并后的旅程信息",
        "key": "AdminThreadMergeFollowRecordPost",
        "fnName": "adminThreadMergeFollowRecordPost",
        "requestBaseName": "IAdminThreadMergeFollowRecordPost",
        "requestName": [
            "IAdminThreadMergeFollowRecordPost"
        ],
        "responseBaseName": "OAdminThreadMergeFollowRecordPost",
        "responseName": [
            "OAdminThreadMergeFollowRecordPost"
        ],
        "responseValueName": [
            "OAdminThreadMergeFollowRecordPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "followRecordKeyword",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "mergeData",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "isMain": {
                                "type": "integer",
                                "description": "是否主线索 1-是 0-否"
                            },
                            "investorId": {
                                "type": "integer",
                                "description": "线索ID"
                            }
                        },
                        "x-apifox-orders": [
                            "isMain",
                            "investorId"
                        ],
                        "required": [
                            "isMain",
                            "investorId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "pageNum",
                    "type": "number",
                    "oldType": "number"
                },
                {
                    "name": "pageSize",
                    "type": "number",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取合并后的旅程信息 buildFnGetOrPostCode\n * \n * @param {string} params.followRecordKeyword 可选: \n * @param {any[]} params.mergeData 必填: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminThreadMergeFollowRecordPost>\n */\nexport const adminThreadMergeFollowRecordPost = async (params?: IAdminThreadMergeFollowRecordPost) => {\n\treturn post<OAdminThreadMergeFollowRecordPost>(`/admin/thread/merge/follow/record`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取合并后的旅程信息 buildReqGetOrPostTyped\n * @url /admin/thread/merge/follow/record\n */\nexport interface IAdminThreadMergeFollowRecordPost{\n\tfollowRecordKeyword?: string;\n\tmergeData: any[];\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取合并后的旅程信息 buildResAnyTyped\n * @url /admin/thread/merge/follow/record\n */\nexport type OAdminThreadMergeFollowRecordPost = {\n}",
        "resValueCode": "/**\n * @description 获取合并后的旅程信息 buildResAnyTyped\n * @url /admin/thread/merge/follow/record\n */\nexport const OAdminThreadMergeFollowRecordPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/merge",
        "url": "/admin/thread/merge",
        "pureUrl": "/admin/thread/merge",
        "pathReqUrl": "/admin/thread/merge",
        "method": "post",
        "apiName": "合并线索",
        "key": "AdminThreadMergePost",
        "fnName": "adminThreadMergePost",
        "requestBaseName": "IAdminThreadMergePost",
        "requestName": [
            "IAdminThreadMergePost"
        ],
        "responseBaseName": "OAdminThreadMergePost",
        "responseName": [
            "OAdminThreadMergePost"
        ],
        "responseValueName": [
            "OAdminThreadMergePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "mergeData",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "isMain": {
                                "type": "integer",
                                "description": "是否主线索 1-是 0-否"
                            },
                            "investorId": {
                                "type": "integer",
                                "description": "线索ID"
                            }
                        },
                        "x-apifox-orders": [
                            "isMain",
                            "investorId"
                        ],
                        "required": [
                            "isMain",
                            "investorId"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 合并线索 buildFnGetOrPostCode\n * \n * @param {any[]} params.mergeData 必填: \n * @return Promise<OAdminThreadMergePost>\n */\nexport const adminThreadMergePost = async (params?: IAdminThreadMergePost) => {\n\treturn post<OAdminThreadMergePost>(`/admin/thread/merge`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 合并线索 buildReqGetOrPostTyped\n * @url /admin/thread/merge\n */\nexport interface IAdminThreadMergePost{\n\tmergeData: any[];\n}",
        "resCode": "/**\n * @description 合并线索 buildResAnyTyped\n * @url /admin/thread/merge\n */\nexport type OAdminThreadMergePost = {\n}",
        "resValueCode": "/**\n * @description 合并线索 buildResAnyTyped\n * @url /admin/thread/merge\n */\nexport const OAdminThreadMergePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/mine/list",
        "url": "/admin/thread/mine/list",
        "pureUrl": "/admin/thread/mine/list",
        "pathReqUrl": "/admin/thread/mine/list",
        "method": "get",
        "apiName": "我的客户列表",
        "key": "AdminThreadMineListGet",
        "fnName": "adminThreadMineListGet",
        "requestBaseName": "IAdminThreadMineListGet",
        "requestName": [
            "IAdminThreadMineListGet"
        ],
        "responseBaseName": "OAdminThreadMineListGet",
        "responseName": [
            "OAdminThreadMineListGet"
        ],
        "responseValueName": [
            "OAdminThreadMineListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "搜索查询",
                    "type": "string",
                    "id": "Rk3OUa03YT",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JKnf73fqeC",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "wkkbBS3ZnS",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部",
                    "type": "number",
                    "id": "ou4WJmPvVx",
                    "enable": true,
                    "name": "statusLevel",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否标记为重点 0-否 1-是",
                    "type": "number",
                    "id": "5carAsz3NL",
                    "enable": true,
                    "name": "important",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "客户状态 0-强意愿 1-有效 2-长期 3-无效",
                    "type": "number",
                    "id": "yBY5UEeSK2",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "城市",
                    "type": "string",
                    "id": "5RhpdkG6kB",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品id",
                    "type": "number",
                    "id": "cAtJKgzIdW",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "新线索 固定值 1",
                    "type": "string",
                    "id": "1rFaSBuPG1",
                    "enable": true,
                    "name": "newThread",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "员工归属地",
                    "type": "string",
                    "id": "ZTHwiwyVsT",
                    "enable": true,
                    "name": "userCity",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID 多个以英文逗号隔开",
                    "type": "string",
                    "id": "MpI6K22dra",
                    "enable": true,
                    "name": "tagIds",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "团队ID",
                    "type": "number",
                    "id": "dBZr55mlDa",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "today yesterday week month",
                    "type": "string",
                    "id": "lClPKvra9Y",
                    "enable": true,
                    "name": "timeday",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "个人标签",
                    "type": "string",
                    "id": "llxP9gk55l",
                    "enable": true,
                    "name": "personageTag",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "意向产品类型",
                    "type": "string",
                    "id": "72QgEeghFU",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "成交状态 0-未签约 1-签约 2-复购 9-退出",
                    "type": "number",
                    "id": "ZvcWFvWiBI",
                    "enable": true,
                    "name": "tranStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "线索状态 0-线索 2-有效 8-长期",
                    "type": "number",
                    "id": "AZst7ICK3T",
                    "enable": true,
                    "name": "followStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "主跟进人ID",
                    "type": "number",
                    "id": "QGw8H3bKhJ",
                    "enable": true,
                    "name": "primaryFollowerId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "省份",
                    "type": "string",
                    "id": "DSZ0X23bEp",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "旅程内容搜索",
                    "type": "string",
                    "id": "OKa2pDjHlX",
                    "enable": true,
                    "name": "followRecordKeyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序",
                    "type": "string",
                    "id": "YekYrYpuuk",
                    "enable": true,
                    "name": "sortField"
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "8ZD7cK4Rfo",
                    "enable": true,
                    "name": "originId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的客户列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: 搜索查询\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.statusLevel 可选: 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 3-无效\n * @param {string} params.city 可选: 城市\n * @param {number} params.productId 可选: 产品id\n * @param {string} params.newThread 可选: 新线索 固定值 1\n * @param {string} params.userCity 可选: 员工归属地\n * @param {string} params.tagIds 可选: 标签ID 多个以英文逗号隔开\n * @param {number} params.deptId 可选: 团队ID\n * @param {string} params.timeday 可选: today yesterday week month\n * @param {string} params.personageTag 可选: 个人标签\n * @param {string} params.productType 可选: 意向产品类型\n * @param {number} params.tranStatus 可选: 成交状态 0-未签约 1-签约 2-复购 9-退出\n * @param {number} params.followStatus 可选: 线索状态 0-线索 2-有效 8-长期\n * @param {number} params.primaryFollowerId 可选: 主跟进人ID\n * @param {string} params.province 可选: 省份\n * @param {string} params.followRecordKeyword 可选: 旅程内容搜索\n * @param {string} params.sortField 可选: 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n * @param {number} params.originId 可选: \n * @return Promise<OAdminThreadMineListGet>\n */\nexport const adminThreadMineListGet = async (params?: IAdminThreadMineListGet) => {\n\treturn get<OAdminThreadMineListGet>(`/admin/thread/mine/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的客户列表 buildReqGetOrPostTyped\n * @url /admin/thread/mine/list\n */\nexport interface IAdminThreadMineListGet{\n\tkeyword?: string; // 搜索查询\n\tpageNum?: number;\n\tpageSize?: number;\n\tstatusLevel?: number; // 0-待跟进 1-跟进中 2-待审核 3-重要客户 4-待分配 5-已分配 9-全部\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 3-无效\n\tcity?: string; // 城市\n\tproductId?: number; // 产品id\n\tnewThread?: string; // 新线索 固定值 1\n\tuserCity?: string; // 员工归属地\n\ttagIds?: string; // 标签ID 多个以英文逗号隔开\n\tdeptId?: number; // 团队ID\n\ttimeday?: string; // today yesterday week month\n\tpersonageTag?: string; // 个人标签\n\tproductType?: string; // 意向产品类型\n\ttranStatus?: number; // 成交状态 0-未签约 1-签约 2-复购 9-退出\n\tfollowStatus?: number; // 线索状态 0-线索 2-有效 8-长期\n\tprimaryFollowerId?: number; // 主跟进人ID\n\tprovince?: string; // 省份\n\tfollowRecordKeyword?: string; // 旅程内容搜索\n\tsortField?: string; // 排序  followTimeAsc-跟进时间升序； followTimeDesc-跟进时间倒序； createTimeAsc-获取时间升序 ；createTimeDesc-获取时间倒序\n\toriginId?: number;\n}",
        "resCode": "/**\n * @description 我的客户列表 buildResAnyTyped\n * @url /admin/thread/mine/list\n */\nexport type OAdminThreadMineListGet = {\n}",
        "resValueCode": "/**\n * @description 我的客户列表 buildResAnyTyped\n * @url /admin/thread/mine/list\n */\nexport const OAdminThreadMineListGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/thread/personage/tag/all",
        "url": "/admin/thread/personage/tag/all",
        "pureUrl": "/admin/thread/personage/tag/all",
        "pathReqUrl": "/admin/thread/personage/tag/all",
        "method": "delete",
        "apiName": "删除个人标签（根据用户删除所有线索下的标签）",
        "key": "AdminThreadPersonageTagAllDelete",
        "fnName": "adminThreadPersonageTagAllDelete",
        "requestBaseName": "IAdminThreadPersonageTagAllDelete",
        "requestName": [
            "IAdminThreadPersonageTagAllDelete"
        ],
        "responseBaseName": "OAdminThreadPersonageTagAllDelete",
        "responseName": [
            "OAdminThreadPersonageTagAllDelete"
        ],
        "responseValueName": [
            "OAdminThreadPersonageTagAllDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "标签名",
                    "type": "string",
                    "id": "joZkGyDKui",
                    "enable": true,
                    "name": "tagName",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除个人标签（根据用户删除所有线索下的标签） buildFnGetOrPostCode\n * \n * @param {string} params.tagName 必填: 标签名\n * @return Promise<OAdminThreadPersonageTagAllDelete>\n */\nexport const adminThreadPersonageTagAllDelete = async (params?: IAdminThreadPersonageTagAllDelete) => {\n\treturn del<OAdminThreadPersonageTagAllDelete>(`/admin/thread/personage/tag/all`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 删除个人标签（根据用户删除所有线索下的标签） buildReqGetOrPostTyped\n * @url /admin/thread/personage/tag/all\n */\nexport interface IAdminThreadPersonageTagAllDelete{\n\ttagName: string; // 标签名\n}",
        "resCode": "/**\n * @description 删除个人标签（根据用户删除所有线索下的标签） buildResAnyTyped\n * @url /admin/thread/personage/tag/all\n */\nexport type OAdminThreadPersonageTagAllDelete = {\n}",
        "resValueCode": "/**\n * @description 删除个人标签（根据用户删除所有线索下的标签） buildResAnyTyped\n * @url /admin/thread/personage/tag/all\n */\nexport const OAdminThreadPersonageTagAllDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/personage/tag/alllist",
        "url": "/admin/thread/personage/tag/alllist",
        "pureUrl": "/admin/thread/personage/tag/alllist",
        "pathReqUrl": "/admin/thread/personage/tag/alllist",
        "method": "get",
        "apiName": "所有的个人标签",
        "key": "AdminThreadPersonageTagAlllistGet",
        "fnName": "adminThreadPersonageTagAlllistGet",
        "requestBaseName": "IAdminThreadPersonageTagAlllistGet",
        "requestName": [
            "IAdminThreadPersonageTagAlllistGet"
        ],
        "responseBaseName": "OAdminThreadPersonageTagAlllistGet",
        "responseName": [
            "OAdminThreadPersonageTagAlllistGet"
        ],
        "responseValueName": [
            "OAdminThreadPersonageTagAlllistGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "标签名",
                    "type": "string",
                    "id": "k4mbTluyyv",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 所有的个人标签 buildFnGetOrPostCode\n * \n * @param {string} params.name 可选: 标签名\n * @return Promise<OAdminThreadPersonageTagAlllistGet>\n */\nexport const adminThreadPersonageTagAlllistGet = async (params?: IAdminThreadPersonageTagAlllistGet) => {\n\treturn get<OAdminThreadPersonageTagAlllistGet>(`/admin/thread/personage/tag/alllist`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 所有的个人标签 buildReqGetOrPostTyped\n * @url /admin/thread/personage/tag/alllist\n */\nexport interface IAdminThreadPersonageTagAlllistGet{\n\tname?: string; // 标签名\n}",
        "resCode": "/**\n * @description 所有的个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/alllist\n */\nexport type OAdminThreadPersonageTagAlllistGet = {\n}",
        "resValueCode": "/**\n * @description 所有的个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/alllist\n */\nexport const OAdminThreadPersonageTagAlllistGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/thread/personage/tag/{x}",
        "url": "/admin/thread/personage/tag/{id}",
        "pureUrl": "/admin/thread/personage/tag/{x}",
        "pathReqUrl": "/admin/thread/personage/tag/${id}",
        "method": "delete",
        "apiName": "删除个人标签",
        "key": "AdminThreadPersonageTagIdDelete",
        "fnName": "adminThreadPersonageTagIdDelete",
        "requestBaseName": "IAdminThreadPersonageTagIdDelete",
        "requestName": [
            "IAdminThreadPersonageTagIdDelete"
        ],
        "responseBaseName": "OAdminThreadPersonageTagIdDelete",
        "responseName": [
            "OAdminThreadPersonageTagIdDelete"
        ],
        "responseValueName": [
            "OAdminThreadPersonageTagIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除个人标签 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminThreadPersonageTagIdDelete>\n */\nexport const adminThreadPersonageTagIdDelete = async (id: number) => {\n\treturn del<OAdminThreadPersonageTagIdDelete>(`/admin/thread/personage/tag/${id}`)\n}",
        "reqCode": "/**\n * @description 删除个人标签 buildReqGetOrPostTyped\n * @url /admin/thread/personage/tag/{id}\n */\nexport interface IAdminThreadPersonageTagIdDelete{\n}",
        "resCode": "/**\n * @description 删除个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/{x}\n */\nexport type OAdminThreadPersonageTagIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/{x}\n */\nexport const OAdminThreadPersonageTagIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/personage/tag/minelist",
        "url": "/admin/thread/personage/tag/minelist",
        "pureUrl": "/admin/thread/personage/tag/minelist",
        "pathReqUrl": "/admin/thread/personage/tag/minelist",
        "method": "get",
        "apiName": "我的个人标签",
        "key": "AdminThreadPersonageTagMinelistGet",
        "fnName": "adminThreadPersonageTagMinelistGet",
        "requestBaseName": "IAdminThreadPersonageTagMinelistGet",
        "requestName": [
            "IAdminThreadPersonageTagMinelistGet"
        ],
        "responseBaseName": "OAdminThreadPersonageTagMinelistGet",
        "responseName": [
            "OAdminThreadPersonageTagMinelistGet"
        ],
        "responseValueName": [
            "OAdminThreadPersonageTagMinelistGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的个人标签 buildFnGetOrPostCode\n * \n * @return Promise<OAdminThreadPersonageTagMinelistGet>\n */\nexport const adminThreadPersonageTagMinelistGet = async (params?: IAdminThreadPersonageTagMinelistGet) => {\n\treturn get<OAdminThreadPersonageTagMinelistGet>(`/admin/thread/personage/tag/minelist`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的个人标签 buildReqGetOrPostTyped\n * @url /admin/thread/personage/tag/minelist\n */\nexport interface IAdminThreadPersonageTagMinelistGet{\n}",
        "resCode": "/**\n * @description 我的个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/minelist\n */\nexport type OAdminThreadPersonageTagMinelistGet = {\n}",
        "resValueCode": "/**\n * @description 我的个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag/minelist\n */\nexport const OAdminThreadPersonageTagMinelistGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/personage/tag",
        "url": "/admin/thread/personage/tag",
        "pureUrl": "/admin/thread/personage/tag",
        "pathReqUrl": "/admin/thread/personage/tag",
        "method": "post",
        "apiName": "添加个人标签",
        "key": "AdminThreadPersonageTagPost",
        "fnName": "adminThreadPersonageTagPost",
        "requestBaseName": "IAdminThreadPersonageTagPost",
        "requestName": [
            "IAdminThreadPersonageTagPost"
        ],
        "responseBaseName": "OAdminThreadPersonageTagPost",
        "responseName": [
            "OAdminThreadPersonageTagPost"
        ],
        "responseValueName": [
            "OAdminThreadPersonageTagPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "线索ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "标签名称",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加个人标签 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 线索ID\n * @param {string} params.name 必填: 标签名称\n * @return Promise<OAdminThreadPersonageTagPost>\n */\nexport const adminThreadPersonageTagPost = async (params?: IAdminThreadPersonageTagPost) => {\n\treturn post<OAdminThreadPersonageTagPost>(`/admin/thread/personage/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加个人标签 buildReqGetOrPostTyped\n * @url /admin/thread/personage/tag\n */\nexport interface IAdminThreadPersonageTagPost{\n\tinvestorId: number; // 线索ID\n\tname: string; // 标签名称\n}",
        "resCode": "/**\n * @description 添加个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag\n */\nexport type OAdminThreadPersonageTagPost = {\n}",
        "resValueCode": "/**\n * @description 添加个人标签 buildResAnyTyped\n * @url /admin/thread/personage/tag\n */\nexport const OAdminThreadPersonageTagPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/phone/hashcode",
        "url": "/admin/thread/phone/hashcode",
        "pureUrl": "/admin/thread/phone/hashcode",
        "pathReqUrl": "/admin/thread/phone/hashcode",
        "method": "post",
        "apiName": "生成手机号随机串",
        "key": "AdminThreadPhoneHashcodePost",
        "fnName": "adminThreadPhoneHashcodePost",
        "requestBaseName": "IAdminThreadPhoneHashcodePost",
        "requestName": [
            "IAdminThreadPhoneHashcodePost"
        ],
        "responseBaseName": "OAdminThreadPhoneHashcodePost",
        "responseName": [
            "OAdminThreadPhoneHashcodePost"
        ],
        "responseValueName": [
            "OAdminThreadPhoneHashcodePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "phoneId",
                    "type": "string",
                    "description": "手机号ID",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 生成手机号随机串 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {string} params.phoneId 必填: 手机号ID\n * @return Promise<OAdminThreadPhoneHashcodePost>\n */\nexport const adminThreadPhoneHashcodePost = async (params?: IAdminThreadPhoneHashcodePost) => {\n\treturn post<OAdminThreadPhoneHashcodePost>(`/admin/thread/phone/hashcode`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 生成手机号随机串 buildReqGetOrPostTyped\n * @url /admin/thread/phone/hashcode\n */\nexport interface IAdminThreadPhoneHashcodePost{\n\tinvestorId: number;\n\tphoneId: string; // 手机号ID\n}",
        "resCode": "/**\n * @description 生成手机号随机串 buildResAnyTyped\n * @url /admin/thread/phone/hashcode\n */\nexport type OAdminThreadPhoneHashcodePost = {\n}",
        "resValueCode": "/**\n * @description 生成手机号随机串 buildResAnyTyped\n * @url /admin/thread/phone/hashcode\n */\nexport const OAdminThreadPhoneHashcodePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread",
        "url": "/admin/thread",
        "pureUrl": "/admin/thread",
        "pathReqUrl": "/admin/thread",
        "method": "post",
        "apiName": "添加客户",
        "key": "AdminThreadPost",
        "fnName": "adminThreadPost",
        "requestBaseName": "IAdminThreadPost",
        "requestName": [
            "IAdminThreadPost"
        ],
        "responseBaseName": "OAdminThreadPost",
        "responseName": [
            "OAdminThreadPost"
        ],
        "responseValueName": [
            "OAdminThreadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "callId",
                    "type": "string",
                    "description": "通话记录ID",
                    "oldType": "string"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "customerStatus",
                    "type": "number",
                    "description": "客户状态 0-强意愿 1-有效 2-长期 9-无效",
                    "oldType": "number"
                },
                {
                    "name": "depts",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deptId": {
                                "type": "integer",
                                "description": "部门ID"
                            },
                            "employeeIds": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "description": "部门里的员工ids"
                            }
                        },
                        "x-apifox-orders": [
                            "deptId",
                            "employeeIds"
                        ],
                        "required": [
                            "deptId"
                        ],
                        "description": "存在deptId时，employeeIds至少存在一个员工"
                    },
                    "description": "部门集合",
                    "oldType": "any[]"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "oldType": "string"
                },
                {
                    "name": "externalType",
                    "type": "string",
                    "description": "0未知 1微信用户 2企业微信用户 3普通其他用户",
                    "oldType": "string"
                },
                {
                    "name": "externalUserId",
                    "type": "string",
                    "description": "企业微信外部用户ID",
                    "oldType": "string"
                },
                {
                    "name": "followStatus",
                    "type": "number",
                    "description": "最近跟进状态",
                    "oldType": "number"
                },
                {
                    "name": "important",
                    "type": "number",
                    "description": "是否标记为重点 0-否 1-是",
                    "oldType": "number"
                },
                {
                    "name": "lastFollowRemark",
                    "type": "string",
                    "description": "最近跟进描述",
                    "oldType": "string"
                },
                {
                    "name": "lastFollowTime",
                    "type": "string",
                    "description": "最近跟进时间",
                    "oldType": "string"
                },
                {
                    "name": "originId",
                    "type": "number",
                    "description": "来源ID",
                    "oldType": "number"
                },
                {
                    "name": "phoneList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "phone": {
                                "type": "string"
                            }
                        },
                        "x-apifox-orders": [
                            "phone"
                        ],
                        "required": [
                            "phone"
                        ]
                    },
                    "description": "手机号集合",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "productIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "description": "意向产品ids",
                    "oldType": "any[]"
                },
                {
                    "name": "promotionAddress",
                    "type": "string",
                    "description": "推广页地址",
                    "oldType": "string"
                },
                {
                    "name": "province",
                    "type": "string",
                    "description": "省份",
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "客户备注",
                    "oldType": "string"
                },
                {
                    "name": "seaId",
                    "type": "number",
                    "description": "公海ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "tagIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "标签ID"
                    },
                    "description": "标签ids",
                    "oldType": "any[]"
                },
                {
                    "name": "unionid",
                    "type": "string",
                    "description": "企业微信外部unionid",
                    "oldType": "string"
                },
                {
                    "name": "userGroupIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "客户组ID"
                    },
                    "description": "客户组IDs",
                    "oldType": "any[]"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "姓名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "wechat",
                    "type": "string",
                    "description": "微信号",
                    "oldType": "string"
                },
                {
                    "name": "wechatName",
                    "type": "string",
                    "description": "微信昵称",
                    "oldType": "string"
                },
                {
                    "name": "wechatUserId",
                    "type": "string",
                    "description": "企业微信员工ID",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加客户 buildFnGetOrPostCode\n * \n * @param {string} params.callId 可选: 通话记录ID\n * @param {string} params.city 可选: 城市\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 9-无效\n * @param {any[]} params.depts 可选: 部门集合\n * @param {string} params.email 可选: 邮箱\n * @param {string} params.externalType 可选: 0未知 1微信用户 2企业微信用户 3普通其他用户\n * @param {string} params.externalUserId 可选: 企业微信外部用户ID\n * @param {number} params.followStatus 可选: 最近跟进状态\n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {string} params.lastFollowRemark 可选: 最近跟进描述\n * @param {string} params.lastFollowTime 可选: 最近跟进时间\n * @param {number} params.originId 可选: 来源ID\n * @param {any[]} params.phoneList 必填: 手机号集合\n * @param {any[]} params.productIds 可选: 意向产品ids\n * @param {string} params.promotionAddress 可选: 推广页地址\n * @param {string} params.province 可选: 省份\n * @param {string} params.remark 可选: 客户备注\n * @param {number} params.seaId 必填: 公海ID\n * @param {any[]} params.tagIds 可选: 标签ids\n * @param {string} params.unionid 可选: 企业微信外部unionid\n * @param {any[]} params.userGroupIds 可选: 客户组IDs\n * @param {string} params.userName 必填: 姓名\n * @param {string} params.wechat 可选: 微信号\n * @param {string} params.wechatName 可选: 微信昵称\n * @param {string} params.wechatUserId 可选: 企业微信员工ID\n * @return Promise<OAdminThreadPost>\n */\nexport const adminThreadPost = async (params?: IAdminThreadPost) => {\n\treturn post<OAdminThreadPost>(`/admin/thread`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加客户 buildReqGetOrPostTyped\n * @url /admin/thread\n */\nexport interface IAdminThreadPost{\n\tcallId?: string; // 通话记录ID\n\tcity?: string; // 城市\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 9-无效\n\tdepts?: any[]; // 部门集合\n\temail?: string; // 邮箱\n\texternalType?: string; // 0未知 1微信用户 2企业微信用户 3普通其他用户\n\texternalUserId?: string; // 企业微信外部用户ID\n\tfollowStatus?: number; // 最近跟进状态\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tlastFollowRemark?: string; // 最近跟进描述\n\tlastFollowTime?: string; // 最近跟进时间\n\toriginId?: number; // 来源ID\n\tphoneList: any[]; // 手机号集合\n\tproductIds?: any[]; // 意向产品ids\n\tpromotionAddress?: string; // 推广页地址\n\tprovince?: string; // 省份\n\tremark?: string; // 客户备注\n\tseaId: number; // 公海ID\n\ttagIds?: any[]; // 标签ids\n\tunionid?: string; // 企业微信外部unionid\n\tuserGroupIds?: any[]; // 客户组IDs\n\tuserName: string; // 姓名\n\twechat?: string; // 微信号\n\twechatName?: string; // 微信昵称\n\twechatUserId?: string; // 企业微信员工ID\n}",
        "resCode": "/**\n * @description 添加客户 buildResAnyTyped\n * @url /admin/thread\n */\nexport type OAdminThreadPost = {\n}",
        "resValueCode": "/**\n * @description 添加客户 buildResAnyTyped\n * @url /admin/thread\n */\nexport const OAdminThreadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/primary/follower/list",
        "url": "/admin/thread/primary/follower/list",
        "pureUrl": "/admin/thread/primary/follower/list",
        "pathReqUrl": "/admin/thread/primary/follower/list",
        "method": "get",
        "apiName": "获取主跟进人列表",
        "key": "AdminThreadPrimaryFollowerListGet",
        "fnName": "adminThreadPrimaryFollowerListGet",
        "requestBaseName": "IAdminThreadPrimaryFollowerListGet",
        "requestName": [
            "IAdminThreadPrimaryFollowerListGet"
        ],
        "responseBaseName": "OAdminThreadPrimaryFollowerListGet",
        "responseName": [
            "OAdminThreadPrimaryFollowerListGet"
        ],
        "responseValueName": [
            "OAdminThreadPrimaryFollowerListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取主跟进人列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminThreadPrimaryFollowerListGet>\n */\nexport const adminThreadPrimaryFollowerListGet = async (params?: IAdminThreadPrimaryFollowerListGet) => {\n\treturn get<OAdminThreadPrimaryFollowerListGet>(`/admin/thread/primary/follower/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取主跟进人列表 buildReqGetOrPostTyped\n * @url /admin/thread/primary/follower/list\n */\nexport interface IAdminThreadPrimaryFollowerListGet{\n}",
        "resCode": "/**\n * @description 获取主跟进人列表 buildResAnyTyped\n * @url /admin/thread/primary/follower/list\n */\nexport type OAdminThreadPrimaryFollowerListGet = {\n}",
        "resValueCode": "/**\n * @description 获取主跟进人列表 buildResAnyTyped\n * @url /admin/thread/primary/follower/list\n */\nexport const OAdminThreadPrimaryFollowerListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/primary/follower",
        "url": "/admin/thread/primary/follower",
        "pureUrl": "/admin/thread/primary/follower",
        "pathReqUrl": "/admin/thread/primary/follower",
        "method": "post",
        "apiName": "设置主跟进人",
        "key": "AdminThreadPrimaryFollowerPost",
        "fnName": "adminThreadPrimaryFollowerPost",
        "requestBaseName": "IAdminThreadPrimaryFollowerPost",
        "requestName": [
            "IAdminThreadPrimaryFollowerPost"
        ],
        "responseBaseName": "OAdminThreadPrimaryFollowerPost",
        "responseName": [
            "OAdminThreadPrimaryFollowerPost"
        ],
        "responseValueName": [
            "OAdminThreadPrimaryFollowerPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "线索ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "员工ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 设置主跟进人 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 线索ID\n * @param {number} params.userId 必填: 员工ID\n * @return Promise<OAdminThreadPrimaryFollowerPost>\n */\nexport const adminThreadPrimaryFollowerPost = async (params?: IAdminThreadPrimaryFollowerPost) => {\n\treturn post<OAdminThreadPrimaryFollowerPost>(`/admin/thread/primary/follower`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 设置主跟进人 buildReqGetOrPostTyped\n * @url /admin/thread/primary/follower\n */\nexport interface IAdminThreadPrimaryFollowerPost{\n\tinvestorId: number; // 线索ID\n\tuserId: number; // 员工ID\n}",
        "resCode": "/**\n * @description 设置主跟进人 buildResAnyTyped\n * @url /admin/thread/primary/follower\n */\nexport type OAdminThreadPrimaryFollowerPost = {\n}",
        "resValueCode": "/**\n * @description 设置主跟进人 buildResAnyTyped\n * @url /admin/thread/primary/follower\n */\nexport const OAdminThreadPrimaryFollowerPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/public/allList",
        "url": "/admin/thread/public/allList",
        "pureUrl": "/admin/thread/public/allList",
        "pathReqUrl": "/admin/thread/public/allList",
        "method": "get",
        "apiName": "获取所有线索（不关心有无被分配，可用于添加线索到团队，该API一般不需要权限控制）",
        "key": "AdminThreadPublicAllListGet",
        "fnName": "adminThreadPublicAllListGet",
        "requestBaseName": "IAdminThreadPublicAllListGet",
        "requestName": [
            "IAdminThreadPublicAllListGet"
        ],
        "responseBaseName": "OAdminThreadPublicAllListGet",
        "responseName": [
            "OAdminThreadPublicAllListGet"
        ],
        "responseValueName": [
            "OAdminThreadPublicAllListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "搜索查询",
                    "type": "string",
                    "id": "Rk3OUa03YT",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JKnf73fqeC",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "wkkbBS3ZnS",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-待跟进 1-跟进中 2-待审核 3-重点客户 9-全部",
                    "type": "number",
                    "id": "ou4WJmPvVx",
                    "enable": true,
                    "name": "statusLevel",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "跟进人",
                    "type": "number",
                    "id": "B920wsjI1R",
                    "enable": true,
                    "name": "employeeId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否标记为重点 0-否 1-是",
                    "type": "number",
                    "id": "xLgNYB4Xxe",
                    "enable": true,
                    "name": "important",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "客户状态 0-强意愿 1-有效 2-长期 3-无效",
                    "type": "number",
                    "id": "kFyiRugvER",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "城市",
                    "type": "string",
                    "id": "tmXdnD8rjy",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品id",
                    "type": "number",
                    "id": "ypPhK6vJss",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "新线索 固定值 1",
                    "type": "number",
                    "id": "sslmY0mspF",
                    "enable": true,
                    "name": "newThread",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "员工归属地",
                    "type": "string",
                    "id": "8O33iaeKTU",
                    "enable": true,
                    "name": "userCity",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "标签ID",
                    "type": "number",
                    "id": "pUA2yFDbJM",
                    "enable": true,
                    "name": "tagId",
                    "sampleValue": ""
                },
                {
                    "required": true,
                    "description": "团队ID，该ID必填写，用于返回线索列表时是否存在该团队",
                    "type": "number",
                    "id": "PjiuOLzGmK",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "个人标签",
                    "type": "string",
                    "id": "HvcbS4b3By",
                    "enable": true,
                    "name": "personageTag",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "意向产品类型",
                    "type": "string",
                    "id": "SsUD4y0gEB",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "渠道ID",
                    "type": "string",
                    "id": "nGKN1gBhlj",
                    "enable": true,
                    "name": "channelId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "是否签单 固定值 1",
                    "type": "number",
                    "id": "1TVjEpCot7",
                    "enable": true,
                    "name": "concludeStatus",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取所有线索（不关心有无被分配，可用于添加线索到团队，该API一般不需要权限控制） buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: 搜索查询\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.statusLevel 可选: 0-待跟进 1-跟进中 2-待审核 3-重点客户 9-全部\n * @param {number} params.employeeId 可选: 跟进人\n * @param {number} params.important 可选: 是否标记为重点 0-否 1-是\n * @param {number} params.customerStatus 可选: 客户状态 0-强意愿 1-有效 2-长期 3-无效\n * @param {string} params.city 可选: 城市\n * @param {number} params.productId 可选: 产品id\n * @param {number} params.newThread 可选: 新线索 固定值 1\n * @param {string} params.userCity 可选: 员工归属地\n * @param {number} params.tagId 可选: 标签ID\n * @param {number} params.deptId 必填: 团队ID，该ID必填写，用于返回线索列表时是否存在该团队\n * @param {string} params.personageTag 可选: 个人标签\n * @param {string} params.productType 可选: 意向产品类型\n * @param {string} params.channelId 可选: 渠道ID\n * @param {number} params.concludeStatus 可选: 是否签单 固定值 1\n * @return Promise<OAdminThreadPublicAllListGet>\n */\nexport const adminThreadPublicAllListGet = async (params?: IAdminThreadPublicAllListGet) => {\n\treturn get<OAdminThreadPublicAllListGet>(`/admin/thread/public/allList`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取所有线索（不关心有无被分配，可用于添加线索到团队，该API一般不需要权限控制） buildReqGetOrPostTyped\n * @url /admin/thread/public/allList\n */\nexport interface IAdminThreadPublicAllListGet{\n\tkeyword?: string; // 搜索查询\n\tpageNum?: number;\n\tpageSize?: number;\n\tstatusLevel?: number; // 0-待跟进 1-跟进中 2-待审核 3-重点客户 9-全部\n\temployeeId?: number; // 跟进人\n\timportant?: number; // 是否标记为重点 0-否 1-是\n\tcustomerStatus?: number; // 客户状态 0-强意愿 1-有效 2-长期 3-无效\n\tcity?: string; // 城市\n\tproductId?: number; // 产品id\n\tnewThread?: number; // 新线索 固定值 1\n\tuserCity?: string; // 员工归属地\n\ttagId?: number; // 标签ID\n\tdeptId: number; // 团队ID，该ID必填写，用于返回线索列表时是否存在该团队\n\tpersonageTag?: string; // 个人标签\n\tproductType?: string; // 意向产品类型\n\tchannelId?: string; // 渠道ID\n\tconcludeStatus?: number; // 是否签单 固定值 1\n}",
        "resCode": "/**\n * @description 获取所有线索（不关心有无被分配，可用于添加线索到团队，该API一般不需要权限控制） buildResAnyTyped\n * @url /admin/thread/public/allList\n */\nexport type OAdminThreadPublicAllListGet = {\n}",
        "resValueCode": "/**\n * @description 获取所有线索（不关心有无被分配，可用于添加线索到团队，该API一般不需要权限控制） buildResAnyTyped\n * @url /admin/thread/public/allList\n */\nexport const OAdminThreadPublicAllListGetValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/thread",
        "url": "/admin/thread",
        "pureUrl": "/admin/thread",
        "pathReqUrl": "/admin/thread",
        "method": "put",
        "apiName": "编辑客户",
        "key": "AdminThreadPut",
        "fnName": "adminThreadPut",
        "requestBaseName": "IAdminThreadPut",
        "requestName": [
            "IAdminThreadPut"
        ],
        "responseBaseName": "OAdminThreadPut",
        "responseName": [
            "OAdminThreadPut"
        ],
        "responseValueName": [
            "OAdminThreadPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "oldType": "string"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "originId",
                    "type": "number",
                    "description": "来源ID",
                    "oldType": "number"
                },
                {
                    "name": "phoneList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "phone": {
                                "type": "string"
                            },
                            "phoneId": {
                                "type": "string"
                            }
                        },
                        "x-apifox-orders": [
                            "phone",
                            "phoneId"
                        ],
                        "required": [
                            "phone",
                            "phoneId"
                        ]
                    },
                    "description": "手机号集合",
                    "oldType": "any[]"
                },
                {
                    "name": "province",
                    "type": "string",
                    "description": "省份",
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "客户备注",
                    "oldType": "string"
                },
                {
                    "name": "tagIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "标签ID"
                    },
                    "description": "标签ids",
                    "oldType": "any[]"
                },
                {
                    "name": "userGroupIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer",
                        "description": "客户组ID"
                    },
                    "description": "客户组IDs",
                    "oldType": "any[]"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "姓名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "wechat",
                    "type": "string",
                    "description": "微信号",
                    "oldType": "string"
                },
                {
                    "name": "wechatName",
                    "type": "string",
                    "description": "微信昵称",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 编辑客户 buildFnGetOrPostCode\n * \n * @param {string} params.city 可选: 城市\n * @param {string} params.email 可选: 邮箱\n * @param {number} params.investorId 必填: \n * @param {number} params.originId 可选: 来源ID\n * @param {any[]} params.phoneList 可选: 手机号集合\n * @param {string} params.province 可选: 省份\n * @param {string} params.remark 可选: 客户备注\n * @param {any[]} params.tagIds 可选: 标签ids\n * @param {any[]} params.userGroupIds 可选: 客户组IDs\n * @param {string} params.userName 必填: 姓名\n * @param {string} params.wechat 可选: 微信号\n * @param {string} params.wechatName 可选: 微信昵称\n * @return Promise<OAdminThreadPut>\n */\nexport const adminThreadPut = async (params?: IAdminThreadPut) => {\n\treturn put<OAdminThreadPut>(`/admin/thread`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 编辑客户 buildReqGetOrPostTyped\n * @url /admin/thread\n */\nexport interface IAdminThreadPut{\n\tcity?: string; // 城市\n\temail?: string; // 邮箱\n\tinvestorId: number;\n\toriginId?: number; // 来源ID\n\tphoneList?: any[]; // 手机号集合\n\tprovince?: string; // 省份\n\tremark?: string; // 客户备注\n\ttagIds?: any[]; // 标签ids\n\tuserGroupIds?: any[]; // 客户组IDs\n\tuserName: string; // 姓名\n\twechat?: string; // 微信号\n\twechatName?: string; // 微信昵称\n}",
        "resCode": "/**\n * @description 编辑客户 buildResAnyTyped\n * @url /admin/thread\n */\nexport type OAdminThreadPut = {\n}",
        "resValueCode": "/**\n * @description 编辑客户 buildResAnyTyped\n * @url /admin/thread\n */\nexport const OAdminThreadPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/receive",
        "url": "/admin/thread/receive",
        "pureUrl": "/admin/thread/receive",
        "pathReqUrl": "/admin/thread/receive",
        "method": "post",
        "apiName": "领取线索",
        "key": "AdminThreadReceivePost",
        "fnName": "adminThreadReceivePost",
        "requestBaseName": "IAdminThreadReceivePost",
        "requestName": [
            "IAdminThreadReceivePost"
        ],
        "responseBaseName": "OAdminThreadReceivePost",
        "responseName": [
            "OAdminThreadReceivePost"
        ],
        "responseValueName": [
            "OAdminThreadReceivePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 领取线索 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @return Promise<OAdminThreadReceivePost>\n */\nexport const adminThreadReceivePost = async (params?: IAdminThreadReceivePost) => {\n\treturn post<OAdminThreadReceivePost>(`/admin/thread/receive`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 领取线索 buildReqGetOrPostTyped\n * @url /admin/thread/receive\n */\nexport interface IAdminThreadReceivePost{\n\tinvestorId: number;\n}",
        "resCode": "/**\n * @description 领取线索 buildResAnyTyped\n * @url /admin/thread/receive\n */\nexport type OAdminThreadReceivePost = {\n}",
        "resValueCode": "/**\n * @description 领取线索 buildResAnyTyped\n * @url /admin/thread/receive\n */\nexport const OAdminThreadReceivePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/recycle/list",
        "url": "/admin/thread/recycle/list",
        "pureUrl": "/admin/thread/recycle/list",
        "pathReqUrl": "/admin/thread/recycle/list",
        "method": "get",
        "apiName": "回收站客户列表",
        "key": "AdminThreadRecycleListGet",
        "fnName": "adminThreadRecycleListGet",
        "requestBaseName": "IAdminThreadRecycleListGet",
        "requestName": [
            "IAdminThreadRecycleListGet"
        ],
        "responseBaseName": "OAdminThreadRecycleListGet",
        "responseName": [
            "OAdminThreadRecycleListGet"
        ],
        "responseValueName": [
            "OAdminThreadRecycleListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "aFRyrIlos3",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "eEOzrC1YCW",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "YYbwzh76RD",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 回收站客户列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminThreadRecycleListGet>\n */\nexport const adminThreadRecycleListGet = async (params?: IAdminThreadRecycleListGet) => {\n\treturn get<OAdminThreadRecycleListGet>(`/admin/thread/recycle/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 回收站客户列表 buildReqGetOrPostTyped\n * @url /admin/thread/recycle/list\n */\nexport interface IAdminThreadRecycleListGet{\n\tkeyword?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 回收站客户列表 buildResAnyTyped\n * @url /admin/thread/recycle/list\n */\nexport type OAdminThreadRecycleListGet = {\n}",
        "resValueCode": "/**\n * @description 回收站客户列表 buildResAnyTyped\n * @url /admin/thread/recycle/list\n */\nexport const OAdminThreadRecycleListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/revoke",
        "url": "/admin/thread/revoke",
        "pureUrl": "/admin/thread/revoke",
        "pathReqUrl": "/admin/thread/revoke",
        "method": "post",
        "apiName": "撤销",
        "key": "AdminThreadRevokePost",
        "fnName": "adminThreadRevokePost",
        "requestBaseName": "IAdminThreadRevokePost",
        "requestName": [
            "IAdminThreadRevokePost"
        ],
        "responseBaseName": "OAdminThreadRevokePost",
        "responseName": [
            "OAdminThreadRevokePost"
        ],
        "responseValueName": [
            "OAdminThreadRevokePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "transferRecordId",
                    "type": "number",
                    "description": "记录ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 撤销 buildFnGetOrPostCode\n * \n * @param {number} params.transferRecordId 必填: 记录ID\n * @return Promise<OAdminThreadRevokePost>\n */\nexport const adminThreadRevokePost = async (params?: IAdminThreadRevokePost) => {\n\treturn post<OAdminThreadRevokePost>(`/admin/thread/revoke`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 撤销 buildReqGetOrPostTyped\n * @url /admin/thread/revoke\n */\nexport interface IAdminThreadRevokePost{\n\ttransferRecordId: number; // 记录ID\n}",
        "resCode": "/**\n * @description 撤销 buildResAnyTyped\n * @url /admin/thread/revoke\n */\nexport type OAdminThreadRevokePost = {\n}",
        "resValueCode": "/**\n * @description 撤销 buildResAnyTyped\n * @url /admin/thread/revoke\n */\nexport const OAdminThreadRevokePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/sms/phone",
        "url": "/admin/thread/sms/phone",
        "pureUrl": "/admin/thread/sms/phone",
        "pathReqUrl": "/admin/thread/sms/phone",
        "method": "post",
        "apiName": "发送短信",
        "key": "AdminThreadSmsPhonePost",
        "fnName": "adminThreadSmsPhonePost",
        "requestBaseName": "IAdminThreadSmsPhonePost",
        "requestName": [
            "IAdminThreadSmsPhonePost"
        ],
        "responseBaseName": "OAdminThreadSmsPhonePost",
        "responseName": [
            "OAdminThreadSmsPhonePost"
        ],
        "responseValueName": [
            "OAdminThreadSmsPhonePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "description": "短信内容",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "phoneId",
                    "type": "string",
                    "description": "手机号ID",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 发送短信 buildFnGetOrPostCode\n * \n * @param {string} params.content 必填: 短信内容\n * @param {number} params.investorId 必填: \n * @param {string} params.phoneId 必填: 手机号ID\n * @return Promise<OAdminThreadSmsPhonePost>\n */\nexport const adminThreadSmsPhonePost = async (params?: IAdminThreadSmsPhonePost) => {\n\treturn post<OAdminThreadSmsPhonePost>(`/admin/thread/sms/phone`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 发送短信 buildReqGetOrPostTyped\n * @url /admin/thread/sms/phone\n */\nexport interface IAdminThreadSmsPhonePost{\n\tcontent: string; // 短信内容\n\tinvestorId: number;\n\tphoneId: string; // 手机号ID\n}",
        "resCode": "/**\n * @description 发送短信 buildResAnyTyped\n * @url /admin/thread/sms/phone\n */\nexport type OAdminThreadSmsPhonePost = {\n}",
        "resValueCode": "/**\n * @description 发送短信 buildResAnyTyped\n * @url /admin/thread/sms/phone\n */\nexport const OAdminThreadSmsPhonePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/status/list",
        "url": "/admin/thread/status/list",
        "pureUrl": "/admin/thread/status/list",
        "pathReqUrl": "/admin/thread/status/list",
        "method": "get",
        "apiName": "获取跟进状态",
        "key": "AdminThreadStatusListGet",
        "fnName": "adminThreadStatusListGet",
        "requestBaseName": "IAdminThreadStatusListGet",
        "requestName": [
            "IAdminThreadStatusListGet"
        ],
        "responseBaseName": "OAdminThreadStatusListGet",
        "responseName": [
            "OAdminThreadStatusListGet"
        ],
        "responseValueName": [
            "OAdminThreadStatusListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取跟进状态 buildFnGetOrPostCode\n * \n * @return Promise<OAdminThreadStatusListGet>\n */\nexport const adminThreadStatusListGet = async (params?: IAdminThreadStatusListGet) => {\n\treturn get<OAdminThreadStatusListGet>(`/admin/thread/status/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取跟进状态 buildReqGetOrPostTyped\n * @url /admin/thread/status/list\n */\nexport interface IAdminThreadStatusListGet{\n}",
        "resCode": "/**\n * @description 获取跟进状态 buildResAnyTyped\n * @url /admin/thread/status/list\n */\nexport type OAdminThreadStatusListGet = {\n}",
        "resValueCode": "/**\n * @description 获取跟进状态 buildResAnyTyped\n * @url /admin/thread/status/list\n */\nexport const OAdminThreadStatusListGetValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/thread/tag",
        "url": "/admin/thread/tag",
        "pureUrl": "/admin/thread/tag",
        "pathReqUrl": "/admin/thread/tag",
        "method": "put",
        "apiName": "修改客户标签",
        "key": "AdminThreadTagPut",
        "fnName": "adminThreadTagPut",
        "requestBaseName": "IAdminThreadTagPut",
        "requestName": [
            "IAdminThreadTagPut"
        ],
        "responseBaseName": "OAdminThreadTagPut",
        "responseName": [
            "OAdminThreadTagPut"
        ],
        "responseValueName": [
            "OAdminThreadTagPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "tagIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改客户标签 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {any[]} params.tagIds 必填: \n * @return Promise<OAdminThreadTagPut>\n */\nexport const adminThreadTagPut = async (params?: IAdminThreadTagPut) => {\n\treturn put<OAdminThreadTagPut>(`/admin/thread/tag`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改客户标签 buildReqGetOrPostTyped\n * @url /admin/thread/tag\n */\nexport interface IAdminThreadTagPut{\n\tinvestorId: number;\n\ttagIds: any[];\n}",
        "resCode": "/**\n * @description 修改客户标签 buildResAnyTyped\n * @url /admin/thread/tag\n */\nexport type OAdminThreadTagPut = {\n}",
        "resValueCode": "/**\n * @description 修改客户标签 buildResAnyTyped\n * @url /admin/thread/tag\n */\nexport const OAdminThreadTagPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/transfer",
        "url": "/admin/thread/transfer",
        "pureUrl": "/admin/thread/transfer",
        "pathReqUrl": "/admin/thread/transfer",
        "method": "post",
        "apiName": "转让",
        "key": "AdminThreadTransferPost",
        "fnName": "adminThreadTransferPost",
        "requestBaseName": "IAdminThreadTransferPost",
        "requestName": [
            "IAdminThreadTransferPost"
        ],
        "responseBaseName": "OAdminThreadTransferPost",
        "responseName": [
            "OAdminThreadTransferPost"
        ],
        "responseValueName": [
            "OAdminThreadTransferPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "employeeId",
                    "type": "number",
                    "description": "员工ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资人ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 转让 buildFnGetOrPostCode\n * \n * @param {number} params.employeeId 必填: 员工ID\n * @param {number} params.investorId 必填: 投资人ID\n * @return Promise<OAdminThreadTransferPost>\n */\nexport const adminThreadTransferPost = async (params?: IAdminThreadTransferPost) => {\n\treturn post<OAdminThreadTransferPost>(`/admin/thread/transfer`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 转让 buildReqGetOrPostTyped\n * @url /admin/thread/transfer\n */\nexport interface IAdminThreadTransferPost{\n\temployeeId: number; // 员工ID\n\tinvestorId: number; // 投资人ID\n}",
        "resCode": "/**\n * @description 转让 buildResAnyTyped\n * @url /admin/thread/transfer\n */\nexport type OAdminThreadTransferPost = {\n}",
        "resValueCode": "/**\n * @description 转让 buildResAnyTyped\n * @url /admin/thread/transfer\n */\nexport const OAdminThreadTransferPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/tran/status/apply",
        "url": "/admin/thread/tran/status/apply",
        "pureUrl": "/admin/thread/tran/status/apply",
        "pathReqUrl": "/admin/thread/tran/status/apply",
        "method": "post",
        "apiName": "申请成交状态",
        "key": "AdminThreadTranStatusApplyPost",
        "fnName": "adminThreadTranStatusApplyPost",
        "requestBaseName": "IAdminThreadTranStatusApplyPost",
        "requestName": [
            "IAdminThreadTranStatusApplyPost"
        ],
        "responseBaseName": "OAdminThreadTranStatusApplyPost",
        "responseName": [
            "OAdminThreadTranStatusApplyPost"
        ],
        "responseValueName": [
            "OAdminThreadTranStatusApplyPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "tranStatus",
                    "type": "number",
                    "description": "成交状态 0-未签约 1-签约 2-复购 9-退出",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 申请成交状态 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者ID\n * @param {string} params.remark 可选: 备注\n * @param {number} params.tranStatus 必填: 成交状态 0-未签约 1-签约 2-复购 9-退出\n * @return Promise<OAdminThreadTranStatusApplyPost>\n */\nexport const adminThreadTranStatusApplyPost = async (params?: IAdminThreadTranStatusApplyPost) => {\n\treturn post<OAdminThreadTranStatusApplyPost>(`/admin/thread/tran/status/apply`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 申请成交状态 buildReqGetOrPostTyped\n * @url /admin/thread/tran/status/apply\n */\nexport interface IAdminThreadTranStatusApplyPost{\n\tinvestorId: number; // 投资者ID\n\tremark?: string; // 备注\n\ttranStatus: number; // 成交状态 0-未签约 1-签约 2-复购 9-退出\n}",
        "resCode": "/**\n * @description 申请成交状态 buildResAnyTyped\n * @url /admin/thread/tran/status/apply\n */\nexport type OAdminThreadTranStatusApplyPost = {\n}",
        "resValueCode": "/**\n * @description 申请成交状态 buildResAnyTyped\n * @url /admin/thread/tran/status/apply\n */\nexport const OAdminThreadTranStatusApplyPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/tran/status",
        "url": "/admin/thread/tran/status",
        "pureUrl": "/admin/thread/tran/status",
        "pathReqUrl": "/admin/thread/tran/status",
        "method": "post",
        "apiName": "更改成交状态",
        "key": "AdminThreadTranStatusPost",
        "fnName": "adminThreadTranStatusPost",
        "requestBaseName": "IAdminThreadTranStatusPost",
        "requestName": [
            "IAdminThreadTranStatusPost"
        ],
        "responseBaseName": "OAdminThreadTranStatusPost",
        "responseName": [
            "OAdminThreadTranStatusPost"
        ],
        "responseValueName": [
            "OAdminThreadTranStatusPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "investorId",
                    "type": "number",
                    "description": "投资者ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "isAudit",
                    "type": "number",
                    "description": "是否需审核 1-是",
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "tranStatus",
                    "type": "number",
                    "description": "成交状态 0-未签约 1-签约 2-复购 9-退出",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 更改成交状态 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: 投资者ID\n * @param {number} params.isAudit 可选: 是否需审核 1-是\n * @param {string} params.remark 可选: 备注\n * @param {number} params.tranStatus 必填: 成交状态 0-未签约 1-签约 2-复购 9-退出\n * @return Promise<OAdminThreadTranStatusPost>\n */\nexport const adminThreadTranStatusPost = async (params?: IAdminThreadTranStatusPost) => {\n\treturn post<OAdminThreadTranStatusPost>(`/admin/thread/tran/status`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 更改成交状态 buildReqGetOrPostTyped\n * @url /admin/thread/tran/status\n */\nexport interface IAdminThreadTranStatusPost{\n\tinvestorId: number; // 投资者ID\n\tisAudit?: number; // 是否需审核 1-是\n\tremark?: string; // 备注\n\ttranStatus: number; // 成交状态 0-未签约 1-签约 2-复购 9-退出\n}",
        "resCode": "/**\n * @description 更改成交状态 buildResAnyTyped\n * @url /admin/thread/tran/status\n */\nexport type OAdminThreadTranStatusPost = {\n}",
        "resValueCode": "/**\n * @description 更改成交状态 buildResAnyTyped\n * @url /admin/thread/tran/status\n */\nexport const OAdminThreadTranStatusPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/unfollow/remind/info",
        "url": "/admin/thread/unfollow/remind/info",
        "pureUrl": "/admin/thread/unfollow/remind/info",
        "pathReqUrl": "/admin/thread/unfollow/remind/info",
        "method": "get",
        "apiName": "最新未跟进消息提醒统计信息",
        "key": "AdminThreadUnfollowRemindInfoGet",
        "fnName": "adminThreadUnfollowRemindInfoGet",
        "requestBaseName": "IAdminThreadUnfollowRemindInfoGet",
        "requestName": [
            "IAdminThreadUnfollowRemindInfoGet"
        ],
        "responseBaseName": "OAdminThreadUnfollowRemindInfoGet",
        "responseName": [
            "OAdminThreadUnfollowRemindInfoGet"
        ],
        "responseValueName": [
            "OAdminThreadUnfollowRemindInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 最新未跟进消息提醒统计信息 buildFnGetOrPostCode\n * \n * @return Promise<OAdminThreadUnfollowRemindInfoGet>\n */\nexport const adminThreadUnfollowRemindInfoGet = async (params?: IAdminThreadUnfollowRemindInfoGet) => {\n\treturn get<OAdminThreadUnfollowRemindInfoGet>(`/admin/thread/unfollow/remind/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 最新未跟进消息提醒统计信息 buildReqGetOrPostTyped\n * @url /admin/thread/unfollow/remind/info\n */\nexport interface IAdminThreadUnfollowRemindInfoGet{\n}",
        "resCode": "/**\n * @description 最新未跟进消息提醒统计信息 buildResAnyTyped\n * @url /admin/thread/unfollow/remind/info\n */\nexport type OAdminThreadUnfollowRemindInfoGet = {\n}",
        "resValueCode": "/**\n * @description 最新未跟进消息提醒统计信息 buildResAnyTyped\n * @url /admin/thread/unfollow/remind/info\n */\nexport const OAdminThreadUnfollowRemindInfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/unfollow/remind/list",
        "url": "/admin/thread/unfollow/remind/list",
        "pureUrl": "/admin/thread/unfollow/remind/list",
        "pathReqUrl": "/admin/thread/unfollow/remind/list",
        "method": "get",
        "apiName": "最新未跟进消息提醒列表",
        "key": "AdminThreadUnfollowRemindListGet",
        "fnName": "adminThreadUnfollowRemindListGet",
        "requestBaseName": "IAdminThreadUnfollowRemindListGet",
        "requestName": [
            "IAdminThreadUnfollowRemindListGet"
        ],
        "responseBaseName": "OAdminThreadUnfollowRemindListGet",
        "responseName": [
            "OAdminThreadUnfollowRemindListGet"
        ],
        "responseValueName": [
            "OAdminThreadUnfollowRemindListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "E9UNmFY9j9",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "pVBz5cCiAQ",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "用户名/手机号/客户分组",
                    "type": "string",
                    "id": "q85dtsUBej",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "3/5/10",
                    "type": "number",
                    "id": "59FVwR1LKq",
                    "enable": true,
                    "name": "day",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 最新未跟进消息提醒列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.keyword 可选: 用户名/手机号/客户分组\n * @param {number} params.day 可选: 3/5/10\n * @return Promise<OAdminThreadUnfollowRemindListGet>\n */\nexport const adminThreadUnfollowRemindListGet = async (params?: IAdminThreadUnfollowRemindListGet) => {\n\treturn get<OAdminThreadUnfollowRemindListGet>(`/admin/thread/unfollow/remind/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 最新未跟进消息提醒列表 buildReqGetOrPostTyped\n * @url /admin/thread/unfollow/remind/list\n */\nexport interface IAdminThreadUnfollowRemindListGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tkeyword?: string; // 用户名/手机号/客户分组\n\tday?: number; // 3/5/10\n}",
        "resCode": "/**\n * @description 最新未跟进消息提醒列表 buildResAnyTyped\n * @url /admin/thread/unfollow/remind/list\n */\nexport type OAdminThreadUnfollowRemindListGet = {\n}",
        "resValueCode": "/**\n * @description 最新未跟进消息提醒列表 buildResAnyTyped\n * @url /admin/thread/unfollow/remind/list\n */\nexport const OAdminThreadUnfollowRemindListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/thread/user/group/list",
        "url": "/admin/thread/user/group/list",
        "pureUrl": "/admin/thread/user/group/list",
        "pathReqUrl": "/admin/thread/user/group/list",
        "method": "get",
        "apiName": "查询客户组",
        "key": "AdminThreadUserGroupListGet",
        "fnName": "adminThreadUserGroupListGet",
        "requestBaseName": "IAdminThreadUserGroupListGet",
        "requestName": [
            "IAdminThreadUserGroupListGet"
        ],
        "responseBaseName": "OAdminThreadUserGroupListGet",
        "responseName": [
            "OAdminThreadUserGroupListGet"
        ],
        "responseValueName": [
            "OAdminThreadUserGroupListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "OK69vffBLE",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "9qx1UjfNZe",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "K9mbk31PmG",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询客户组 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminThreadUserGroupListGet>\n */\nexport const adminThreadUserGroupListGet = async (params?: IAdminThreadUserGroupListGet) => {\n\treturn get<OAdminThreadUserGroupListGet>(`/admin/thread/user/group/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询客户组 buildReqGetOrPostTyped\n * @url /admin/thread/user/group/list\n */\nexport interface IAdminThreadUserGroupListGet{\n\ttitle?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询客户组 buildResAnyTyped\n * @url /admin/thread/user/group/list\n */\nexport type OAdminThreadUserGroupListGet = {\n}",
        "resValueCode": "/**\n * @description 查询客户组 buildResAnyTyped\n * @url /admin/thread/user/group/list\n */\nexport const OAdminThreadUserGroupListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/thread/user/group",
        "url": "/admin/thread/user/group",
        "pureUrl": "/admin/thread/user/group",
        "pathReqUrl": "/admin/thread/user/group",
        "method": "post",
        "apiName": "添加客户组",
        "key": "AdminThreadUserGroupPost",
        "fnName": "adminThreadUserGroupPost",
        "requestBaseName": "IAdminThreadUserGroupPost",
        "requestName": [
            "IAdminThreadUserGroupPost"
        ],
        "responseBaseName": "OAdminThreadUserGroupPost",
        "responseName": [
            "OAdminThreadUserGroupPost"
        ],
        "responseValueName": [
            "OAdminThreadUserGroupPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "客户组名",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加客户组 buildFnGetOrPostCode\n * \n * @param {string} params.title 必填: 客户组名\n * @return Promise<OAdminThreadUserGroupPost>\n */\nexport const adminThreadUserGroupPost = async (params?: IAdminThreadUserGroupPost) => {\n\treturn post<OAdminThreadUserGroupPost>(`/admin/thread/user/group`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加客户组 buildReqGetOrPostTyped\n * @url /admin/thread/user/group\n */\nexport interface IAdminThreadUserGroupPost{\n\ttitle: string; // 客户组名\n}",
        "resCode": "/**\n * @description 添加客户组 buildResAnyTyped\n * @url /admin/thread/user/group\n */\nexport type OAdminThreadUserGroupPost = {\n}",
        "resValueCode": "/**\n * @description 添加客户组 buildResAnyTyped\n * @url /admin/thread/user/group\n */\nexport const OAdminThreadUserGroupPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/batch",
        "url": "/admin/todo/batch",
        "pureUrl": "/admin/todo/batch",
        "pathReqUrl": "/admin/todo/batch",
        "method": "post",
        "apiName": "批量添加任务",
        "key": "AdminTodoBatchPost",
        "fnName": "adminTodoBatchPost",
        "requestBaseName": "IAdminTodoBatchPost",
        "requestName": [
            "IAdminTodoBatchPost"
        ],
        "responseBaseName": "OAdminTodoBatchPost",
        "responseName": [
            "OAdminTodoBatchPost"
        ],
        "responseValueName": [
            "OAdminTodoBatchPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "主任务 类别",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "deptId",
                    "type": "number",
                    "description": "主任务部门ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "subTodoList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "子任务标题"
                            },
                            "leaderId": {
                                "type": "number",
                                "description": "子任务负责人ID"
                            },
                            "joinIds": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "description": "子任务参与人ids"
                            },
                            "startTime": {
                                "type": "string",
                                "description": "开始时间"
                            },
                            "endTime": {
                                "type": "string",
                                "description": "结束时间"
                            }
                        },
                        "x-apifox-orders": [
                            "title",
                            "leaderId",
                            "joinIds",
                            "startTime",
                            "endTime"
                        ],
                        "required": [
                            "title"
                        ]
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "主任务标题",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 批量添加任务 buildFnGetOrPostCode\n * \n * @param {string} params.category 必填: 主任务 类别\n * @param {number} params.deptId 必填: 主任务部门ID\n * @param {any[]} params.subTodoList 可选: \n * @param {string} params.title 必填: 主任务标题\n * @return Promise<OAdminTodoBatchPost>\n */\nexport const adminTodoBatchPost = async (params?: IAdminTodoBatchPost) => {\n\treturn post<OAdminTodoBatchPost>(`/admin/todo/batch`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 批量添加任务 buildReqGetOrPostTyped\n * @url /admin/todo/batch\n */\nexport interface IAdminTodoBatchPost{\n\tcategory: string; // 主任务 类别\n\tdeptId: number; // 主任务部门ID\n\tsubTodoList?: any[];\n\ttitle: string; // 主任务标题\n}",
        "resCode": "/**\n * @description 批量添加任务 buildResAnyTyped\n * @url /admin/todo/batch\n */\nexport type OAdminTodoBatchPost = {\n}",
        "resValueCode": "/**\n * @description 批量添加任务 buildResAnyTyped\n * @url /admin/todo/batch\n */\nexport const OAdminTodoBatchPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/change/list",
        "url": "/admin/todo/change/list",
        "pureUrl": "/admin/todo/change/list",
        "pathReqUrl": "/admin/todo/change/list",
        "method": "get",
        "apiName": "获取更变历史",
        "key": "AdminTodoChangeListGet",
        "fnName": "adminTodoChangeListGet",
        "requestBaseName": "IAdminTodoChangeListGet",
        "requestName": [
            "IAdminTodoChangeListGet"
        ],
        "responseBaseName": "OAdminTodoChangeListGet",
        "responseName": [
            "OAdminTodoChangeListGet"
        ],
        "responseValueName": [
            "OAdminTodoChangeListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "mqCHA5Uz1c",
                    "enable": true,
                    "name": "todoId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "YMgmTxK1uD",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "0fvY5iFns3",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取更变历史 buildFnGetOrPostCode\n * \n * @param {number} params.todoId 必填: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminTodoChangeListGet>\n */\nexport const adminTodoChangeListGet = async (params?: IAdminTodoChangeListGet) => {\n\treturn get<OAdminTodoChangeListGet>(`/admin/todo/change/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取更变历史 buildReqGetOrPostTyped\n * @url /admin/todo/change/list\n */\nexport interface IAdminTodoChangeListGet{\n\ttodoId: number;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取更变历史 buildResAnyTyped\n * @url /admin/todo/change/list\n */\nexport type OAdminTodoChangeListGet = {\n}",
        "resValueCode": "/**\n * @description 获取更变历史 buildResAnyTyped\n * @url /admin/todo/change/list\n */\nexport const OAdminTodoChangeListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/comment/list",
        "url": "/admin/todo/comment/list",
        "pureUrl": "/admin/todo/comment/list",
        "pathReqUrl": "/admin/todo/comment/list",
        "method": "get",
        "apiName": "获取评论列表",
        "key": "AdminTodoCommentListGet",
        "fnName": "adminTodoCommentListGet",
        "requestBaseName": "IAdminTodoCommentListGet",
        "requestName": [
            "IAdminTodoCommentListGet"
        ],
        "responseBaseName": "OAdminTodoCommentListGet",
        "responseName": [
            "OAdminTodoCommentListGet"
        ],
        "responseValueName": [
            "OAdminTodoCommentListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "mqCHA5Uz1c",
                    "enable": true,
                    "name": "todoId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "YMgmTxK1uD",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "0fvY5iFns3",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取评论列表 buildFnGetOrPostCode\n * \n * @param {number} params.todoId 必填: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OAdminTodoCommentListGet>\n */\nexport const adminTodoCommentListGet = async (params?: IAdminTodoCommentListGet) => {\n\treturn get<OAdminTodoCommentListGet>(`/admin/todo/comment/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取评论列表 buildReqGetOrPostTyped\n * @url /admin/todo/comment/list\n */\nexport interface IAdminTodoCommentListGet{\n\ttodoId: number;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取评论列表 buildResAnyTyped\n * @url /admin/todo/comment/list\n */\nexport type OAdminTodoCommentListGet = {\n}",
        "resValueCode": "/**\n * @description 获取评论列表 buildResAnyTyped\n * @url /admin/todo/comment/list\n */\nexport const OAdminTodoCommentListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/comment",
        "url": "/admin/todo/comment",
        "pureUrl": "/admin/todo/comment",
        "pathReqUrl": "/admin/todo/comment",
        "method": "post",
        "apiName": "添加评论",
        "key": "AdminTodoCommentPost",
        "fnName": "adminTodoCommentPost",
        "requestBaseName": "IAdminTodoCommentPost",
        "requestName": [
            "IAdminTodoCommentPost"
        ],
        "responseBaseName": "OAdminTodoCommentPost",
        "responseName": [
            "OAdminTodoCommentPost"
        ],
        "responseValueName": [
            "OAdminTodoCommentPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "eitUserIds",
                    "type": "any[]",
                    "items": {
                        "type": [
                            "string",
                            "integer",
                            "boolean",
                            "array",
                            "object",
                            "number",
                            "null"
                        ]
                    },
                    "description": "@的人  @全部时 固定值为 *",
                    "oldType": "any[]"
                },
                {
                    "name": "fileList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "size": {
                                "type": "string"
                            }
                        },
                        "x-apifox-orders": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ],
                        "required": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "todoId",
                    "type": "number",
                    "description": "任务/子任务ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加评论 buildFnGetOrPostCode\n * \n * @param {string} params.content 必填: \n * @param {any[]} params.eitUserIds 可选: @的人  @全部时 固定值为 *\n * @param {any[]} params.fileList 必填: \n * @param {number} params.todoId 必填: 任务/子任务ID\n * @return Promise<OAdminTodoCommentPost>\n */\nexport const adminTodoCommentPost = async (params?: IAdminTodoCommentPost) => {\n\treturn post<OAdminTodoCommentPost>(`/admin/todo/comment`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加评论 buildReqGetOrPostTyped\n * @url /admin/todo/comment\n */\nexport interface IAdminTodoCommentPost{\n\tcontent: string;\n\teitUserIds?: any[]; // @的人  @全部时 固定值为 *\n\tfileList: any[];\n\ttodoId: number; // 任务/子任务ID\n}",
        "resCode": "/**\n * @description 添加评论 buildResAnyTyped\n * @url /admin/todo/comment\n */\nexport type OAdminTodoCommentPost = {\n}",
        "resValueCode": "/**\n * @description 添加评论 buildResAnyTyped\n * @url /admin/todo/comment\n */\nexport const OAdminTodoCommentPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/complete",
        "url": "/admin/todo/complete",
        "pureUrl": "/admin/todo/complete",
        "pathReqUrl": "/admin/todo/complete",
        "method": "post",
        "apiName": "完成/取消完成待办",
        "key": "AdminTodoCompletePost",
        "fnName": "adminTodoCompletePost",
        "requestBaseName": "IAdminTodoCompletePost",
        "requestName": [
            "IAdminTodoCompletePost"
        ],
        "responseBaseName": "OAdminTodoCompletePost",
        "responseName": [
            "OAdminTodoCompletePost"
        ],
        "responseValueName": [
            "OAdminTodoCompletePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-完成 0-取消完成",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "todoId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 完成/取消完成待办 buildFnGetOrPostCode\n * \n * @param {number} params.status 必填: 1-完成 0-取消完成\n * @param {number} params.todoId 必填: \n * @return Promise<OAdminTodoCompletePost>\n */\nexport const adminTodoCompletePost = async (params?: IAdminTodoCompletePost) => {\n\treturn post<OAdminTodoCompletePost>(`/admin/todo/complete`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 完成/取消完成待办 buildReqGetOrPostTyped\n * @url /admin/todo/complete\n */\nexport interface IAdminTodoCompletePost{\n\tstatus: number; // 1-完成 0-取消完成\n\ttodoId: number;\n}",
        "resCode": "/**\n * @description 完成/取消完成待办 buildResAnyTyped\n * @url /admin/todo/complete\n */\nexport type OAdminTodoCompletePost = {\n}",
        "resValueCode": "/**\n * @description 完成/取消完成待办 buildResAnyTyped\n * @url /admin/todo/complete\n */\nexport const OAdminTodoCompletePostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/detail/complete",
        "url": "/admin/todo/detail/complete",
        "pureUrl": "/admin/todo/detail/complete",
        "pathReqUrl": "/admin/todo/detail/complete",
        "method": "post",
        "apiName": "完成/取消完成任务清单",
        "key": "AdminTodoDetailCompletePost",
        "fnName": "adminTodoDetailCompletePost",
        "requestBaseName": "IAdminTodoDetailCompletePost",
        "requestName": [
            "IAdminTodoDetailCompletePost"
        ],
        "responseBaseName": "OAdminTodoDetailCompletePost",
        "responseName": [
            "OAdminTodoDetailCompletePost"
        ],
        "responseValueName": [
            "OAdminTodoDetailCompletePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-完成 0-取消完成",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "todoDetailId",
                    "type": "number",
                    "description": "任务清单ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 完成/取消完成任务清单 buildFnGetOrPostCode\n * \n * @param {number} params.status 必填: 1-完成 0-取消完成\n * @param {number} params.todoDetailId 必填: 任务清单ID\n * @return Promise<OAdminTodoDetailCompletePost>\n */\nexport const adminTodoDetailCompletePost = async (params?: IAdminTodoDetailCompletePost) => {\n\treturn post<OAdminTodoDetailCompletePost>(`/admin/todo/detail/complete`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 完成/取消完成任务清单 buildReqGetOrPostTyped\n * @url /admin/todo/detail/complete\n */\nexport interface IAdminTodoDetailCompletePost{\n\tstatus: number; // 1-完成 0-取消完成\n\ttodoDetailId: number; // 任务清单ID\n}",
        "resCode": "/**\n * @description 完成/取消完成任务清单 buildResAnyTyped\n * @url /admin/todo/detail/complete\n */\nexport type OAdminTodoDetailCompletePost = {\n}",
        "resValueCode": "/**\n * @description 完成/取消完成任务清单 buildResAnyTyped\n * @url /admin/todo/detail/complete\n */\nexport const OAdminTodoDetailCompletePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/detail/info",
        "url": "/admin/todo/detail/info",
        "pureUrl": "/admin/todo/detail/info",
        "pathReqUrl": "/admin/todo/detail/info",
        "method": "get",
        "apiName": "获取任务清单详情",
        "key": "AdminTodoDetailInfoGet",
        "fnName": "adminTodoDetailInfoGet",
        "requestBaseName": "IAdminTodoDetailInfoGet",
        "requestName": [
            "IAdminTodoDetailInfoGet"
        ],
        "responseBaseName": "OAdminTodoDetailInfoGet",
        "responseName": [
            "OAdminTodoDetailInfoGet"
        ],
        "responseValueName": [
            "OAdminTodoDetailInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "任务清单ID",
                    "type": "number",
                    "id": "tkK7DdGqiV",
                    "enable": true,
                    "name": "todoDetailId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取任务清单详情 buildFnGetOrPostCode\n * \n * @param {number} params.todoDetailId 必填: 任务清单ID\n * @return Promise<OAdminTodoDetailInfoGet>\n */\nexport const adminTodoDetailInfoGet = async (params?: IAdminTodoDetailInfoGet) => {\n\treturn get<OAdminTodoDetailInfoGet>(`/admin/todo/detail/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取任务清单详情 buildReqGetOrPostTyped\n * @url /admin/todo/detail/info\n */\nexport interface IAdminTodoDetailInfoGet{\n\ttodoDetailId: number; // 任务清单ID\n}",
        "resCode": "/**\n * @description 获取任务清单详情 buildResAnyTyped\n * @url /admin/todo/detail/info\n */\nexport type OAdminTodoDetailInfoGet = {\n}",
        "resValueCode": "/**\n * @description 获取任务清单详情 buildResAnyTyped\n * @url /admin/todo/detail/info\n */\nexport const OAdminTodoDetailInfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/detail/list",
        "url": "/admin/todo/detail/list",
        "pureUrl": "/admin/todo/detail/list",
        "pathReqUrl": "/admin/todo/detail/list",
        "method": "get",
        "apiName": "获取任务清单列表",
        "key": "AdminTodoDetailListGet",
        "fnName": "adminTodoDetailListGet",
        "requestBaseName": "IAdminTodoDetailListGet",
        "requestName": [
            "IAdminTodoDetailListGet"
        ],
        "responseBaseName": "OAdminTodoDetailListGet",
        "responseName": [
            "OAdminTodoDetailListGet"
        ],
        "responseValueName": [
            "OAdminTodoDetailListGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "子任务ID",
                    "type": "number",
                    "id": "VbNd4KDx3f",
                    "enable": true,
                    "name": "todoSubId"
                },
                {
                    "required": false,
                    "description": "状态 1-已完成 0-未完成",
                    "type": "number",
                    "id": "qDywdOovWN",
                    "enable": true,
                    "name": "status"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取任务清单列表 buildFnGetOrPostCode\n * \n * @param {number} params.todoSubId 必填: 子任务ID\n * @param {number} params.status 可选: 状态 1-已完成 0-未完成\n * @return Promise<OAdminTodoDetailListGet>\n */\nexport const adminTodoDetailListGet = async (params?: IAdminTodoDetailListGet) => {\n\treturn get<OAdminTodoDetailListGet>(`/admin/todo/detail/list`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取任务清单列表 buildReqGetOrPostTyped\n * @url /admin/todo/detail/list\n */\nexport interface IAdminTodoDetailListGet{\n\ttodoSubId: number; // 子任务ID\n\tstatus?: number; // 状态 1-已完成 0-未完成\n}",
        "resCode": "/**\n * @description 获取任务清单列表 buildResAnyTyped\n * @url /admin/todo/detail/list\n */\nexport type OAdminTodoDetailListGet = {\n}",
        "resValueCode": "/**\n * @description 获取任务清单列表 buildResAnyTyped\n * @url /admin/todo/detail/list\n */\nexport const OAdminTodoDetailListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/detail",
        "url": "/admin/todo/detail",
        "pureUrl": "/admin/todo/detail",
        "pathReqUrl": "/admin/todo/detail",
        "method": "post",
        "apiName": "添加任务清单",
        "key": "AdminTodoDetailPost",
        "fnName": "adminTodoDetailPost",
        "requestBaseName": "IAdminTodoDetailPost",
        "requestName": [
            "IAdminTodoDetailPost"
        ],
        "responseBaseName": "OAdminTodoDetailPost",
        "responseName": [
            "OAdminTodoDetailPost"
        ],
        "responseValueName": [
            "OAdminTodoDetailPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "endTime",
                    "type": "string",
                    "description": "结束时间",
                    "oldType": "string"
                },
                {
                    "name": "leaderId",
                    "type": "number",
                    "description": "负责人ID",
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "todoSubId",
                    "type": "number",
                    "description": "子任务ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加任务清单 buildFnGetOrPostCode\n * \n * @param {string} params.endTime 可选: 结束时间\n * @param {number} params.leaderId 可选: 负责人ID\n * @param {string} params.title 必填: 标题\n * @param {number} params.todoSubId 必填: 子任务ID\n * @return Promise<OAdminTodoDetailPost>\n */\nexport const adminTodoDetailPost = async (params?: IAdminTodoDetailPost) => {\n\treturn post<OAdminTodoDetailPost>(`/admin/todo/detail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加任务清单 buildReqGetOrPostTyped\n * @url /admin/todo/detail\n */\nexport interface IAdminTodoDetailPost{\n\tendTime?: string; // 结束时间\n\tleaderId?: number; // 负责人ID\n\ttitle: string; // 标题\n\ttodoSubId: number; // 子任务ID\n}",
        "resCode": "/**\n * @description 添加任务清单 buildResAnyTyped\n * @url /admin/todo/detail\n */\nexport type OAdminTodoDetailPost = {\n}",
        "resValueCode": "/**\n * @description 添加任务清单 buildResAnyTyped\n * @url /admin/todo/detail\n */\nexport const OAdminTodoDetailPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/todo/detail",
        "url": "/admin/todo/detail",
        "pureUrl": "/admin/todo/detail",
        "pathReqUrl": "/admin/todo/detail",
        "method": "put",
        "apiName": "修改任务清单",
        "key": "AdminTodoDetailPut",
        "fnName": "adminTodoDetailPut",
        "requestBaseName": "IAdminTodoDetailPut",
        "requestName": [
            "IAdminTodoDetailPut"
        ],
        "responseBaseName": "OAdminTodoDetailPut",
        "responseName": [
            "OAdminTodoDetailPut"
        ],
        "responseValueName": [
            "OAdminTodoDetailPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "endTime",
                    "type": "string",
                    "description": "结束时间",
                    "oldType": "string"
                },
                {
                    "name": "leaderId",
                    "type": "number",
                    "description": "负责人ID",
                    "oldType": "number"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "todoDetailId",
                    "type": "number",
                    "description": "任务清单ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改任务清单 buildFnGetOrPostCode\n * \n * @param {string} params.endTime 可选: 结束时间\n * @param {number} params.leaderId 可选: 负责人ID\n * @param {string} params.title 必填: 标题\n * @param {number} params.todoDetailId 必填: 任务清单ID\n * @return Promise<OAdminTodoDetailPut>\n */\nexport const adminTodoDetailPut = async (params?: IAdminTodoDetailPut) => {\n\treturn put<OAdminTodoDetailPut>(`/admin/todo/detail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改任务清单 buildReqGetOrPostTyped\n * @url /admin/todo/detail\n */\nexport interface IAdminTodoDetailPut{\n\tendTime?: string; // 结束时间\n\tleaderId?: number; // 负责人ID\n\ttitle: string; // 标题\n\ttodoDetailId: number; // 任务清单ID\n}",
        "resCode": "/**\n * @description 修改任务清单 buildResAnyTyped\n * @url /admin/todo/detail\n */\nexport type OAdminTodoDetailPut = {\n}",
        "resValueCode": "/**\n * @description 修改任务清单 buildResAnyTyped\n * @url /admin/todo/detail\n */\nexport const OAdminTodoDetailPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/info",
        "url": "/admin/todo/info",
        "pureUrl": "/admin/todo/info",
        "pathReqUrl": "/admin/todo/info",
        "method": "get",
        "apiName": "获取待办详情",
        "key": "AdminTodoInfoGet",
        "fnName": "adminTodoInfoGet",
        "requestBaseName": "IAdminTodoInfoGet",
        "requestName": [
            "IAdminTodoInfoGet"
        ],
        "responseBaseName": "OAdminTodoInfoGet",
        "responseName": [
            "OAdminTodoInfoGet"
        ],
        "responseValueName": [
            "OAdminTodoInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "Bolqlf92Go",
                    "enable": true,
                    "name": "todoId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取待办详情 buildFnGetOrPostCode\n * \n * @param {number} params.todoId 必填: \n * @return Promise<OAdminTodoInfoGet>\n */\nexport const adminTodoInfoGet = async (params?: IAdminTodoInfoGet) => {\n\treturn get<OAdminTodoInfoGet>(`/admin/todo/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取待办详情 buildReqGetOrPostTyped\n * @url /admin/todo/info\n */\nexport interface IAdminTodoInfoGet{\n\ttodoId: number;\n}",
        "resCode": "/**\n * @description 获取待办详情 buildResAnyTyped\n * @url /admin/todo/info\n */\nexport type OAdminTodoInfoGet = {\n}",
        "resValueCode": "/**\n * @description 获取待办详情 buildResAnyTyped\n * @url /admin/todo/info\n */\nexport const OAdminTodoInfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/leader/list",
        "url": "/admin/todo/leader/list",
        "pureUrl": "/admin/todo/leader/list",
        "pathReqUrl": "/admin/todo/leader/list",
        "method": "get",
        "apiName": "获取负责人列表",
        "key": "AdminTodoLeaderListGet",
        "fnName": "adminTodoLeaderListGet",
        "requestBaseName": "IAdminTodoLeaderListGet",
        "requestName": [
            "IAdminTodoLeaderListGet"
        ],
        "responseBaseName": "OAdminTodoLeaderListGet",
        "responseName": [
            "OAdminTodoLeaderListGet"
        ],
        "responseValueName": [
            "OAdminTodoLeaderListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取负责人列表 buildFnGetOrPostCode\n * \n * @return Promise<OAdminTodoLeaderListGet>\n */\nexport const adminTodoLeaderListGet = async (params?: IAdminTodoLeaderListGet) => {\n\treturn get<OAdminTodoLeaderListGet>(`/admin/todo/leader/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取负责人列表 buildReqGetOrPostTyped\n * @url /admin/todo/leader/list\n */\nexport interface IAdminTodoLeaderListGet{\n}",
        "resCode": "/**\n * @description 获取负责人列表 buildResAnyTyped\n * @url /admin/todo/leader/list\n */\nexport type OAdminTodoLeaderListGet = {\n}",
        "resValueCode": "/**\n * @description 获取负责人列表 buildResAnyTyped\n * @url /admin/todo/leader/list\n */\nexport const OAdminTodoLeaderListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/list",
        "url": "/admin/todo/list",
        "pureUrl": "/admin/todo/list",
        "pathReqUrl": "/admin/todo/list",
        "method": "get",
        "apiName": "获取待办列表",
        "key": "AdminTodoListGet",
        "fnName": "adminTodoListGet",
        "requestBaseName": "IAdminTodoListGet",
        "requestName": [
            "IAdminTodoListGet"
        ],
        "responseBaseName": "OAdminTodoListGet",
        "responseName": [
            "OAdminTodoListGet"
        ],
        "responseValueName": [
            "OAdminTodoListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "Bolqlf92Go",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "ThkNKUtHIP",
                    "enable": true,
                    "name": "endTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-未完成 1-已完成",
                    "type": "number",
                    "id": "9A1V8BRg4b",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "QVXIi5j34T",
                    "enable": true,
                    "name": "leaderId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JkpLvyqmM0",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "MpcLKd1sDJ",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "zEkdqxtimH",
                    "enable": true,
                    "name": "startTime",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "类别",
                    "type": "string",
                    "id": "c5zjo6QqU3",
                    "enable": true,
                    "name": "category"
                },
                {
                    "required": false,
                    "description": "部门ID",
                    "type": "number",
                    "id": "G1lCkYOs5L",
                    "enable": true,
                    "name": "deptId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取待办列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {string} params.endTime 可选: \n * @param {number} params.status 可选: 0-未完成 1-已完成\n * @param {string} params.leaderId 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.startTime 可选: \n * @param {string} params.category 可选: 类别\n * @param {number} params.deptId 可选: 部门ID\n * @return Promise<OAdminTodoListGet>\n */\nexport const adminTodoListGet = async (params?: IAdminTodoListGet) => {\n\treturn get<OAdminTodoListGet>(`/admin/todo/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取待办列表 buildReqGetOrPostTyped\n * @url /admin/todo/list\n */\nexport interface IAdminTodoListGet{\n\ttitle?: string;\n\tendTime?: string;\n\tstatus?: number; // 0-未完成 1-已完成\n\tleaderId?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n\tstartTime?: string;\n\tcategory?: string; // 类别\n\tdeptId?: number; // 部门ID\n}",
        "resCode": "/**\n * @description 获取待办列表 buildResAnyTyped\n * @url /admin/todo/list\n */\nexport type OAdminTodoListGet = {\n}",
        "resValueCode": "/**\n * @description 获取待办列表 buildResAnyTyped\n * @url /admin/todo/list\n */\nexport const OAdminTodoListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/owner/deptList",
        "url": "/admin/todo/owner/deptList",
        "pureUrl": "/admin/todo/owner/deptList",
        "pathReqUrl": "/admin/todo/owner/deptList",
        "method": "get",
        "apiName": "获取部门列表（左侧拦）",
        "key": "AdminTodoOwnerDeptListGet",
        "fnName": "adminTodoOwnerDeptListGet",
        "requestBaseName": "IAdminTodoOwnerDeptListGet",
        "requestName": [
            "IAdminTodoOwnerDeptListGet"
        ],
        "responseBaseName": "OAdminTodoOwnerDeptListGet",
        "responseName": [
            "OAdminTodoOwnerDeptListGet"
        ],
        "responseValueName": [
            "OAdminTodoOwnerDeptListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取部门列表（左侧拦） buildFnGetOrPostCode\n * \n * @return Promise<OAdminTodoOwnerDeptListGet>\n */\nexport const adminTodoOwnerDeptListGet = async (params?: IAdminTodoOwnerDeptListGet) => {\n\treturn get<OAdminTodoOwnerDeptListGet>(`/admin/todo/owner/deptList`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取部门列表（左侧拦） buildReqGetOrPostTyped\n * @url /admin/todo/owner/deptList\n */\nexport interface IAdminTodoOwnerDeptListGet{\n}",
        "resCode": "/**\n * @description 获取部门列表（左侧拦） buildResAnyTyped\n * @url /admin/todo/owner/deptList\n */\nexport type OAdminTodoOwnerDeptListGet = {\n}",
        "resValueCode": "/**\n * @description 获取部门列表（左侧拦） buildResAnyTyped\n * @url /admin/todo/owner/deptList\n */\nexport const OAdminTodoOwnerDeptListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo",
        "url": "/admin/todo",
        "pureUrl": "/admin/todo",
        "pathReqUrl": "/admin/todo",
        "method": "post",
        "apiName": "添加待办",
        "key": "AdminTodoPost",
        "fnName": "adminTodoPost",
        "requestBaseName": "IAdminTodoPost",
        "requestName": [
            "IAdminTodoPost"
        ],
        "responseBaseName": "OAdminTodoPost",
        "responseName": [
            "OAdminTodoPost"
        ],
        "responseValueName": [
            "OAdminTodoPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "类别",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "joinIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "leaderIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加待办 buildFnGetOrPostCode\n * \n * @param {string} params.category 必填: 类别\n * @param {any[]} params.joinIds 可选: \n * @param {any[]} params.leaderIds 可选: \n * @param {string} params.title 必填: \n * @return Promise<OAdminTodoPost>\n */\nexport const adminTodoPost = async (params?: IAdminTodoPost) => {\n\treturn post<OAdminTodoPost>(`/admin/todo`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加待办 buildReqGetOrPostTyped\n * @url /admin/todo\n */\nexport interface IAdminTodoPost{\n\tcategory: string; // 类别\n\tjoinIds?: any[];\n\tleaderIds?: any[];\n\ttitle: string;\n}",
        "resCode": "/**\n * @description 添加待办 buildResAnyTyped\n * @url /admin/todo\n */\nexport type OAdminTodoPost = {\n}",
        "resValueCode": "/**\n * @description 添加待办 buildResAnyTyped\n * @url /admin/todo\n */\nexport const OAdminTodoPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/todo",
        "url": "/admin/todo",
        "pureUrl": "/admin/todo",
        "pathReqUrl": "/admin/todo",
        "method": "put",
        "apiName": "修改待办",
        "key": "AdminTodoPut",
        "fnName": "adminTodoPut",
        "requestBaseName": "IAdminTodoPut",
        "requestName": [
            "IAdminTodoPut"
        ],
        "responseBaseName": "OAdminTodoPut",
        "responseName": [
            "OAdminTodoPut"
        ],
        "responseValueName": [
            "OAdminTodoPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "类别",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "joinIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "leaderIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "todoId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改待办 buildFnGetOrPostCode\n * \n * @param {string} params.category 必填: 类别\n * @param {any[]} params.joinIds 可选: \n * @param {any[]} params.leaderIds 可选: \n * @param {string} params.title 必填: 标题\n * @param {number} params.todoId 必填: \n * @return Promise<OAdminTodoPut>\n */\nexport const adminTodoPut = async (params?: IAdminTodoPut) => {\n\treturn put<OAdminTodoPut>(`/admin/todo`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改待办 buildReqGetOrPostTyped\n * @url /admin/todo\n */\nexport interface IAdminTodoPut{\n\tcategory: string; // 类别\n\tjoinIds?: any[];\n\tleaderIds?: any[];\n\ttitle: string; // 标题\n\ttodoId: number;\n}",
        "resCode": "/**\n * @description 修改待办 buildResAnyTyped\n * @url /admin/todo\n */\nexport type OAdminTodoPut = {\n}",
        "resValueCode": "/**\n * @description 修改待办 buildResAnyTyped\n * @url /admin/todo\n */\nexport const OAdminTodoPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/reply",
        "url": "/admin/todo/reply",
        "pureUrl": "/admin/todo/reply",
        "pathReqUrl": "/admin/todo/reply",
        "method": "post",
        "apiName": "添加回复",
        "key": "AdminTodoReplyPost",
        "fnName": "adminTodoReplyPost",
        "requestBaseName": "IAdminTodoReplyPost",
        "requestName": [
            "IAdminTodoReplyPost"
        ],
        "responseBaseName": "OAdminTodoReplyPost",
        "responseName": [
            "OAdminTodoReplyPost"
        ],
        "responseValueName": [
            "OAdminTodoReplyPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "eitUserIds",
                    "type": "any[]",
                    "items": {
                        "type": [
                            "string",
                            "integer",
                            "boolean",
                            "array",
                            "object",
                            "number",
                            "null"
                        ]
                    },
                    "description": "@的人 @全部时 值为 *",
                    "oldType": "any[]"
                },
                {
                    "name": "fileList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "size": {
                                "type": "string"
                            }
                        },
                        "x-apifox-orders": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ],
                        "required": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ]
                    },
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "id",
                    "type": "number",
                    "description": "评论/回复ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加回复 buildFnGetOrPostCode\n * \n * @param {string} params.content 必填: \n * @param {any[]} params.eitUserIds 可选: @的人 @全部时 值为 *\n * @param {any[]} params.fileList 必填: \n * @param {number} params.id 必填: 评论/回复ID\n * @return Promise<OAdminTodoReplyPost>\n */\nexport const adminTodoReplyPost = async (params?: IAdminTodoReplyPost) => {\n\treturn post<OAdminTodoReplyPost>(`/admin/todo/reply`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加回复 buildReqGetOrPostTyped\n * @url /admin/todo/reply\n */\nexport interface IAdminTodoReplyPost{\n\tcontent: string;\n\teitUserIds?: any[]; // @的人 @全部时 值为 *\n\tfileList: any[];\n\tid: number; // 评论/回复ID\n}",
        "resCode": "/**\n * @description 添加回复 buildResAnyTyped\n * @url /admin/todo/reply\n */\nexport type OAdminTodoReplyPost = {\n}",
        "resValueCode": "/**\n * @description 添加回复 buildResAnyTyped\n * @url /admin/todo/reply\n */\nexport const OAdminTodoReplyPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/sub/complete",
        "url": "/admin/todo/sub/complete",
        "pureUrl": "/admin/todo/sub/complete",
        "pathReqUrl": "/admin/todo/sub/complete",
        "method": "post",
        "apiName": "完成/取消完成子待办",
        "key": "AdminTodoSubCompletePost",
        "fnName": "adminTodoSubCompletePost",
        "requestBaseName": "IAdminTodoSubCompletePost",
        "requestName": [
            "IAdminTodoSubCompletePost"
        ],
        "responseBaseName": "OAdminTodoSubCompletePost",
        "responseName": [
            "OAdminTodoSubCompletePost"
        ],
        "responseValueName": [
            "OAdminTodoSubCompletePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "status",
                    "type": "number",
                    "description": "1-完成 0-取消完成",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "todoSubId",
                    "type": "number",
                    "description": "子待办ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 完成/取消完成子待办 buildFnGetOrPostCode\n * \n * @param {number} params.status 必填: 1-完成 0-取消完成\n * @param {number} params.todoSubId 必填: 子待办ID\n * @return Promise<OAdminTodoSubCompletePost>\n */\nexport const adminTodoSubCompletePost = async (params?: IAdminTodoSubCompletePost) => {\n\treturn post<OAdminTodoSubCompletePost>(`/admin/todo/sub/complete`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 完成/取消完成子待办 buildReqGetOrPostTyped\n * @url /admin/todo/sub/complete\n */\nexport interface IAdminTodoSubCompletePost{\n\tstatus: number; // 1-完成 0-取消完成\n\ttodoSubId: number; // 子待办ID\n}",
        "resCode": "/**\n * @description 完成/取消完成子待办 buildResAnyTyped\n * @url /admin/todo/sub/complete\n */\nexport type OAdminTodoSubCompletePost = {\n}",
        "resValueCode": "/**\n * @description 完成/取消完成子待办 buildResAnyTyped\n * @url /admin/todo/sub/complete\n */\nexport const OAdminTodoSubCompletePostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/sub/detail",
        "url": "/admin/todo/sub/detail",
        "pureUrl": "/admin/todo/sub/detail",
        "pathReqUrl": "/admin/todo/sub/detail",
        "method": "get",
        "apiName": "获取子待办详情",
        "key": "AdminTodoSubDetailGet",
        "fnName": "adminTodoSubDetailGet",
        "requestBaseName": "IAdminTodoSubDetailGet",
        "requestName": [
            "IAdminTodoSubDetailGet"
        ],
        "responseBaseName": "OAdminTodoSubDetailGet",
        "responseName": [
            "OAdminTodoSubDetailGet"
        ],
        "responseValueName": [
            "OAdminTodoSubDetailGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "子待办ID",
                    "type": "number",
                    "id": "vg20C5B0BW",
                    "enable": true,
                    "name": "todoSubId"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取子待办详情 buildFnGetOrPostCode\n * \n * @param {number} params.todoSubId 必填: 子待办ID\n * @return Promise<OAdminTodoSubDetailGet>\n */\nexport const adminTodoSubDetailGet = async (params?: IAdminTodoSubDetailGet) => {\n\treturn get<OAdminTodoSubDetailGet>(`/admin/todo/sub/detail`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取子待办详情 buildReqGetOrPostTyped\n * @url /admin/todo/sub/detail\n */\nexport interface IAdminTodoSubDetailGet{\n\ttodoSubId: number; // 子待办ID\n}",
        "resCode": "/**\n * @description 获取子待办详情 buildResAnyTyped\n * @url /admin/todo/sub/detail\n */\nexport type OAdminTodoSubDetailGet = {\n}",
        "resValueCode": "/**\n * @description 获取子待办详情 buildResAnyTyped\n * @url /admin/todo/sub/detail\n */\nexport const OAdminTodoSubDetailGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/todo/sub/list",
        "url": "/admin/todo/sub/list",
        "pureUrl": "/admin/todo/sub/list",
        "pathReqUrl": "/admin/todo/sub/list",
        "method": "get",
        "apiName": "获取子待办列表",
        "key": "AdminTodoSubListGet",
        "fnName": "adminTodoSubListGet",
        "requestBaseName": "IAdminTodoSubListGet",
        "requestName": [
            "IAdminTodoSubListGet"
        ],
        "responseBaseName": "OAdminTodoSubListGet",
        "responseName": [
            "OAdminTodoSubListGet"
        ],
        "responseValueName": [
            "OAdminTodoSubListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "待办ID",
                    "type": "number",
                    "id": "Pyu7g2ZDSO",
                    "enable": true,
                    "name": "todoId"
                },
                {
                    "required": false,
                    "description": "状态 1-已完成 0-未完成",
                    "type": "number",
                    "id": "ogLxWDbdaE",
                    "enable": true,
                    "name": "status"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取子待办列表 buildFnGetOrPostCode\n * \n * @param {number} params.todoId 必填: 待办ID\n * @param {number} params.status 可选: 状态 1-已完成 0-未完成\n * @return Promise<OAdminTodoSubListGet>\n */\nexport const adminTodoSubListGet = async (params?: IAdminTodoSubListGet) => {\n\treturn get<OAdminTodoSubListGet>(`/admin/todo/sub/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取子待办列表 buildReqGetOrPostTyped\n * @url /admin/todo/sub/list\n */\nexport interface IAdminTodoSubListGet{\n\ttodoId: number; // 待办ID\n\tstatus?: number; // 状态 1-已完成 0-未完成\n}",
        "resCode": "/**\n * @description 获取子待办列表 buildResAnyTyped\n * @url /admin/todo/sub/list\n */\nexport type OAdminTodoSubListGet = {\n}",
        "resValueCode": "/**\n * @description 获取子待办列表 buildResAnyTyped\n * @url /admin/todo/sub/list\n */\nexport const OAdminTodoSubListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/todo/sub",
        "url": "/admin/todo/sub",
        "pureUrl": "/admin/todo/sub",
        "pathReqUrl": "/admin/todo/sub",
        "method": "post",
        "apiName": "添加子待办",
        "key": "AdminTodoSubPost",
        "fnName": "adminTodoSubPost",
        "requestBaseName": "IAdminTodoSubPost",
        "requestName": [
            "IAdminTodoSubPost"
        ],
        "responseBaseName": "OAdminTodoSubPost",
        "responseName": [
            "OAdminTodoSubPost"
        ],
        "responseValueName": [
            "OAdminTodoSubPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "endTime",
                    "type": "string",
                    "description": "结束时间",
                    "oldType": "string"
                },
                {
                    "name": "fileList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "文件地址"
                            },
                            "name": {
                                "type": "string",
                                "description": "文件名称"
                            },
                            "type": {
                                "type": "string",
                                "description": "文件类型"
                            },
                            "size": {
                                "type": "string",
                                "description": "文件大小"
                            }
                        },
                        "x-apifox-orders": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ],
                        "required": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ]
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "joinIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "loopValues",
                    "type": "any[]",
                    "items": {
                        "type": "number"
                    },
                    "description": "循环任务 周一到周日 0-6 /0-周日",
                    "oldType": "any[]"
                },
                {
                    "name": "startTime",
                    "type": "string",
                    "description": "开始时间",
                    "oldType": "string"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "todoId",
                    "type": "number",
                    "description": "待办ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加子待办 buildFnGetOrPostCode\n * \n * @param {string} params.content 可选: \n * @param {string} params.endTime 可选: 结束时间\n * @param {any[]} params.fileList 可选: \n * @param {any[]} params.joinIds 可选: \n * @param {any[]} params.loopValues 可选: 循环任务 周一到周日 0-6 /0-周日\n * @param {string} params.startTime 可选: 开始时间\n * @param {string} params.title 必填: 标题\n * @param {number} params.todoId 必填: 待办ID\n * @return Promise<OAdminTodoSubPost>\n */\nexport const adminTodoSubPost = async (params?: IAdminTodoSubPost) => {\n\treturn post<OAdminTodoSubPost>(`/admin/todo/sub`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加子待办 buildReqGetOrPostTyped\n * @url /admin/todo/sub\n */\nexport interface IAdminTodoSubPost{\n\tcontent?: string;\n\tendTime?: string; // 结束时间\n\tfileList?: any[];\n\tjoinIds?: any[];\n\tloopValues?: any[]; // 循环任务 周一到周日 0-6 /0-周日\n\tstartTime?: string; // 开始时间\n\ttitle: string; // 标题\n\ttodoId: number; // 待办ID\n}",
        "resCode": "/**\n * @description 添加子待办 buildResAnyTyped\n * @url /admin/todo/sub\n */\nexport type OAdminTodoSubPost = {\n}",
        "resValueCode": "/**\n * @description 添加子待办 buildResAnyTyped\n * @url /admin/todo/sub\n */\nexport const OAdminTodoSubPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/todo/sub",
        "url": "/admin/todo/sub",
        "pureUrl": "/admin/todo/sub",
        "pathReqUrl": "/admin/todo/sub",
        "method": "put",
        "apiName": "修改子待办",
        "key": "AdminTodoSubPut",
        "fnName": "adminTodoSubPut",
        "requestBaseName": "IAdminTodoSubPut",
        "requestName": [
            "IAdminTodoSubPut"
        ],
        "responseBaseName": "OAdminTodoSubPut",
        "responseName": [
            "OAdminTodoSubPut"
        ],
        "responseValueName": [
            "OAdminTodoSubPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "content",
                    "type": "string",
                    "oldType": "string"
                },
                {
                    "name": "endTime",
                    "type": "string",
                    "description": "结束时间",
                    "oldType": "string"
                },
                {
                    "name": "fileList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "文件地址"
                            },
                            "name": {
                                "type": "string",
                                "description": "文件名称"
                            },
                            "type": {
                                "type": "string",
                                "description": "文件类型"
                            },
                            "size": {
                                "type": "string",
                                "description": "文件大小"
                            }
                        },
                        "x-apifox-orders": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ],
                        "required": [
                            "url",
                            "name",
                            "type",
                            "size"
                        ]
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "joinIds",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "loopValues",
                    "type": "any[]",
                    "items": {
                        "type": "number"
                    },
                    "description": "循环任务 周一到周日 0-6 /0-周日",
                    "oldType": "any[]"
                },
                {
                    "name": "startTime",
                    "type": "string",
                    "description": "开始时间",
                    "oldType": "string"
                },
                {
                    "name": "title",
                    "type": "string",
                    "description": "标题",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "todoSubId",
                    "type": "number",
                    "description": "子待办ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改子待办 buildFnGetOrPostCode\n * \n * @param {string} params.content 可选: \n * @param {string} params.endTime 可选: 结束时间\n * @param {any[]} params.fileList 可选: \n * @param {any[]} params.joinIds 可选: \n * @param {any[]} params.loopValues 可选: 循环任务 周一到周日 0-6 /0-周日\n * @param {string} params.startTime 可选: 开始时间\n * @param {string} params.title 必填: 标题\n * @param {number} params.todoSubId 必填: 子待办ID\n * @return Promise<OAdminTodoSubPut>\n */\nexport const adminTodoSubPut = async (params?: IAdminTodoSubPut) => {\n\treturn put<OAdminTodoSubPut>(`/admin/todo/sub`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改子待办 buildReqGetOrPostTyped\n * @url /admin/todo/sub\n */\nexport interface IAdminTodoSubPut{\n\tcontent?: string;\n\tendTime?: string; // 结束时间\n\tfileList?: any[];\n\tjoinIds?: any[];\n\tloopValues?: any[]; // 循环任务 周一到周日 0-6 /0-周日\n\tstartTime?: string; // 开始时间\n\ttitle: string; // 标题\n\ttodoSubId: number; // 子待办ID\n}",
        "resCode": "/**\n * @description 修改子待办 buildResAnyTyped\n * @url /admin/todo/sub\n */\nexport type OAdminTodoSubPut = {\n}",
        "resValueCode": "/**\n * @description 修改子待办 buildResAnyTyped\n * @url /admin/todo/sub\n */\nexport const OAdminTodoSubPutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/updatePwd",
        "url": "/admin/updatePwd",
        "pureUrl": "/admin/updatePwd",
        "pathReqUrl": "/admin/updatePwd",
        "method": "put",
        "apiName": "修改密码",
        "key": "AdminUpdatePwdPut",
        "fnName": "adminUpdatePwdPut",
        "requestBaseName": "IAdminUpdatePwdPut",
        "requestName": [
            "IAdminUpdatePwdPut"
        ],
        "responseBaseName": "OAdminUpdatePwdPut",
        "responseName": [
            "OAdminUpdatePwdPut"
        ],
        "responseValueName": [
            "OAdminUpdatePwdPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "newPassword",
                    "type": "string",
                    "description": "新密码",
                    "oldType": "string"
                },
                {
                    "name": "oldPassword",
                    "type": "string",
                    "description": "旧密码",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改密码 buildFnGetOrPostCode\n * \n * @param {string} params.newPassword 可选: 新密码\n * @param {string} params.oldPassword 可选: 旧密码\n * @return Promise<OAdminUpdatePwdPut>\n */\nexport const adminUpdatePwdPut = async (params?: IAdminUpdatePwdPut) => {\n\treturn put<OAdminUpdatePwdPut>(`/admin/updatePwd`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改密码 buildReqGetOrPostTyped\n * @url /admin/updatePwd\n */\nexport interface IAdminUpdatePwdPut{\n\tnewPassword?: string; // 新密码\n\toldPassword?: string; // 旧密码\n}",
        "resCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /admin/updatePwd\n */\nexport type OAdminUpdatePwdPut = {\n}",
        "resValueCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /admin/updatePwd\n */\nexport const OAdminUpdatePwdPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/user/list",
        "url": "/admin/user/list",
        "pureUrl": "/admin/user/list",
        "pathReqUrl": "/admin/user/list",
        "method": "get",
        "apiName": "查询管理员列表",
        "key": "AdminUserListGet",
        "fnName": "adminUserListGet",
        "requestBaseName": "IAdminUserListGet",
        "requestName": [
            "IAdminUserListGet"
        ],
        "responseBaseName": "OAdminUserListGet",
        "responseName": [
            "OAdminUserListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "G8gAkY8XbY",
                    "name": "beginTime",
                    "required": false,
                    "description": "开始时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "A5e8ICP3u6",
                    "name": "endTime",
                    "required": false,
                    "description": "结束时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "An7IJYfg2s",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "OA6MmbvVwu",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "mVQOwWVrbB",
                    "name": "phone",
                    "required": false,
                    "description": "手机号码",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "0dS8nH3A8x",
                    "name": "status",
                    "required": false,
                    "description": "账号状态 0-正常 1-停用",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "ikBssOq6NE",
                    "name": "userName",
                    "required": false,
                    "description": "用户名",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "6yWFnhwN83",
                    "enable": true,
                    "name": "email",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "E0GpQ5I2dE",
                    "enable": true,
                    "name": "roleKey",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "部门ID 未知部门填写0",
                    "type": "number",
                    "id": "hBZJcvtuNI",
                    "enable": true,
                    "name": "deptId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "搜索查询",
                    "type": "string",
                    "id": "lilgwt7E3G",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminUserListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询管理员列表 buildFnArrayCode\n * \n * @param {string} params.beginTime 可选: 开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.endTime 可选: 结束时间 yyyy-MM-dd HH:mm:ss\n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {string} params.phone 可选: 手机号码\n * @param {number} params.status 可选: 账号状态 0-正常 1-停用\n * @param {string} params.userName 可选: 用户名\n * @param {string} params.email 可选: \n * @param {string} params.roleKey 可选: \n * @param {number} params.deptId 可选: 部门ID 未知部门填写0\n * @param {string} params.keyword 可选: 搜索查询}\n * @return Promise<OAdminUserListGetItem>\n */\nexport const adminUserListGet = async (params?: IAdminUserListGet) => {\n\treturn get<OAdminUserListGetItem[]>(`/admin/user/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询管理员列表 buildReqGetOrPostTyped\n * @url /admin/user/list\n */\nexport interface IAdminUserListGet{\n\tbeginTime?: string; // 开始时间 yyyy-MM-dd HH:mm:ss\n\tendTime?: string; // 结束时间 yyyy-MM-dd HH:mm:ss\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\tphone?: string; // 手机号码\n\tstatus?: number; // 账号状态 0-正常 1-停用\n\tuserName?: string; // 用户名\n\temail?: string;\n\troleKey?: string;\n\tdeptId?: number; // 部门ID 未知部门填写0\n\tkeyword?: string; // 搜索查询\n}",
        "deleteResponseName": "OAdminUserListGet",
        "resCode": "/**\n * @description 查询管理员列表 buildResArrayTyped\n * @url /admin/user/list\n */\nexport type OAdminUserListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询管理员列表 buildResArrayTyped\n * @url /admin/user/list\n */\nexport const OAdminUserListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/user/moveUser",
        "url": "/admin/user/moveUser",
        "pureUrl": "/admin/user/moveUser",
        "pathReqUrl": "/admin/user/moveUser",
        "method": "post",
        "apiName": "移除员工-从部门里移除",
        "key": "AdminUserMoveUserPost",
        "fnName": "adminUserMoveUserPost",
        "requestBaseName": "IAdminUserMoveUserPost",
        "requestName": [
            "IAdminUserMoveUserPost"
        ],
        "responseBaseName": "OAdminUserMoveUserPost",
        "responseName": [
            "OAdminUserMoveUserPost"
        ],
        "responseValueName": [
            "OAdminUserMoveUserPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptId",
                    "type": "number",
                    "description": "部门id",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "需要更改的用户",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 移除员工-从部门里移除 buildFnGetOrPostCode\n * \n * @param {number} params.deptId 必填: 部门id\n * @param {number} params.userId 必填: 需要更改的用户\n * @return Promise<OAdminUserMoveUserPost>\n */\nexport const adminUserMoveUserPost = async (params?: IAdminUserMoveUserPost) => {\n\treturn post<OAdminUserMoveUserPost>(`/admin/user/moveUser`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 移除员工-从部门里移除 buildReqGetOrPostTyped\n * @url /admin/user/moveUser\n */\nexport interface IAdminUserMoveUserPost{\n\tdeptId: number; // 部门id\n\tuserId: number; // 需要更改的用户\n}",
        "resCode": "/**\n * @description 移除员工-从部门里移除 buildResAnyTyped\n * @url /admin/user/moveUser\n */\nexport type OAdminUserMoveUserPost = {\n}",
        "resValueCode": "/**\n * @description 移除员工-从部门里移除 buildResAnyTyped\n * @url /admin/user/moveUser\n */\nexport const OAdminUserMoveUserPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/user",
        "url": "/admin/user",
        "pureUrl": "/admin/user",
        "pathReqUrl": "/admin/user",
        "method": "post",
        "apiName": "新增管理员",
        "key": "AdminUserPost",
        "fnName": "adminUserPost",
        "requestBaseName": "IAdminUserPost",
        "requestName": [
            "IAdminUserPost"
        ],
        "responseBaseName": "OAdminUserPost",
        "responseName": [
            "OAdminUserPost"
        ],
        "responseValueName": [
            "OAdminUserPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "avatar",
                    "type": "string",
                    "description": "图像",
                    "oldType": "string"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "归属地",
                    "oldType": "string"
                },
                {
                    "name": "deptId",
                    "type": "number",
                    "description": "部门ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "mergePerm",
                    "type": "number",
                    "description": "是否有合并线索权限 0-无 1-有",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号码",
                    "oldType": "string"
                },
                {
                    "name": "qrCode",
                    "type": "string",
                    "description": "二维码",
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "roleIdList",
                    "type": "any[]",
                    "description": "角色id列表列表",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "roleKey",
                    "type": "string",
                    "description": "roleKey",
                    "oldType": "string"
                },
                {
                    "name": "sensitivePerm",
                    "type": "number",
                    "description": "是否有敏感信息权限 0-无 1-有",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "账号状态 0-正常 1-停用",
                    "oldType": "number"
                },
                {
                    "name": "todoPerm",
                    "type": "number",
                    "description": "是否有权限添加主任务 1-是 0-否",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "id 新增时不传 修改时必传",
                    "oldType": "number"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "用户名",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 新增管理员 buildFnGetOrPostCode\n * \n * @param {string} params.avatar 可选: 图像\n * @param {string} params.city 可选: 归属地\n * @param {number} params.deptId 必填: 部门ID\n * @param {string} params.email 必填: 邮箱\n * @param {number} params.mergePerm 必填: 是否有合并线索权限 0-无 1-有\n * @param {string} params.password 可选: 密码\n * @param {string} params.phone 可选: 手机号码\n * @param {string} params.qrCode 可选: 二维码\n * @param {string} params.remark 可选: 备注\n * @param {any[]} params.roleIdList 可选: 角色id列表列表\n * @param {string} params.roleKey 可选: roleKey\n * @param {number} params.sensitivePerm 必填: 是否有敏感信息权限 0-无 1-有\n * @param {number} params.status 可选: 账号状态 0-正常 1-停用\n * @param {number} params.todoPerm 必填: 是否有权限添加主任务 1-是 0-否\n * @param {number} params.userId 可选: id 新增时不传 修改时必传\n * @param {string} params.userName 可选: 用户名\n * @return Promise<OAdminUserPost>\n */\nexport const adminUserPost = async (params?: IAdminUserPost) => {\n\treturn post<OAdminUserPost>(`/admin/user`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 新增管理员 buildReqGetOrPostTyped\n * @url /admin/user\n */\nexport interface IAdminUserPost{\n\tavatar?: string; // 图像\n\tcity?: string; // 归属地\n\tdeptId: number; // 部门ID\n\temail: string; // 邮箱\n\tmergePerm: number; // 是否有合并线索权限 0-无 1-有\n\tpassword?: string; // 密码\n\tphone?: string; // 手机号码\n\tqrCode?: string; // 二维码\n\tremark?: string; // 备注\n\troleIdList?: any[]; // 角色id列表列表\n\troleKey?: string; // roleKey\n\tsensitivePerm: number; // 是否有敏感信息权限 0-无 1-有\n\tstatus?: number; // 账号状态 0-正常 1-停用\n\ttodoPerm: number; // 是否有权限添加主任务 1-是 0-否\n\tuserId?: number; // id 新增时不传 修改时必传\n\tuserName?: string; // 用户名\n}",
        "resCode": "/**\n * @description 新增管理员 buildResAnyTyped\n * @url /admin/user\n */\nexport type OAdminUserPost = {\n}",
        "resValueCode": "/**\n * @description 新增管理员 buildResAnyTyped\n * @url /admin/user\n */\nexport const OAdminUserPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/user/profile",
        "url": "/admin/user/profile",
        "pureUrl": "/admin/user/profile",
        "pathReqUrl": "/admin/user/profile",
        "method": "put",
        "apiName": "修改管理员基本信息",
        "key": "AdminUserProfilePut",
        "fnName": "adminUserProfilePut",
        "requestBaseName": "IAdminUserProfilePut",
        "requestName": [
            "IAdminUserProfilePut"
        ],
        "responseBaseName": "OAdminUserProfilePut",
        "responseName": [
            "OAdminUserProfilePut"
        ],
        "responseValueName": [
            "OAdminUserProfilePutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "avatar",
                    "type": "string",
                    "description": "图像",
                    "oldType": "string"
                },
                {
                    "name": "qrCode",
                    "type": "string",
                    "description": "二维码",
                    "oldType": "string"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "用户ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "名称",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改管理员基本信息 buildFnGetOrPostCode\n * \n * @param {string} params.avatar 可选: 图像\n * @param {string} params.qrCode 可选: 二维码\n * @param {number} params.userId 必填: 用户ID\n * @param {string} params.userName 必填: 名称\n * @return Promise<OAdminUserProfilePut>\n */\nexport const adminUserProfilePut = async (params?: IAdminUserProfilePut) => {\n\treturn put<OAdminUserProfilePut>(`/admin/user/profile`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改管理员基本信息 buildReqGetOrPostTyped\n * @url /admin/user/profile\n */\nexport interface IAdminUserProfilePut{\n\tavatar?: string; // 图像\n\tqrCode?: string; // 二维码\n\tuserId: number; // 用户ID\n\tuserName: string; // 名称\n}",
        "resCode": "/**\n * @description 修改管理员基本信息 buildResAnyTyped\n * @url /admin/user/profile\n */\nexport type OAdminUserProfilePut = {\n}",
        "resValueCode": "/**\n * @description 修改管理员基本信息 buildResAnyTyped\n * @url /admin/user/profile\n */\nexport const OAdminUserProfilePutValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/user",
        "url": "/admin/user",
        "pureUrl": "/admin/user",
        "pathReqUrl": "/admin/user",
        "method": "put",
        "apiName": "修改管理员",
        "key": "AdminUserPut",
        "fnName": "adminUserPut",
        "requestBaseName": "IAdminUserPut",
        "requestName": [
            "IAdminUserPut"
        ],
        "responseBaseName": "OAdminUserPut",
        "responseName": [
            "OAdminUserPut"
        ],
        "responseValueName": [
            "OAdminUserPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "avatar",
                    "type": "string",
                    "description": "图像",
                    "oldType": "string"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "归属地",
                    "oldType": "string"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "mergePerm",
                    "type": "number",
                    "description": "是否有合并线索权限 0-无 1-有",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号码",
                    "oldType": "string"
                },
                {
                    "name": "qrCode",
                    "type": "string",
                    "description": "二维码",
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "roleIdList",
                    "type": "any[]",
                    "description": "角色id列表列表",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "oldType": "any[]"
                },
                {
                    "name": "roleKey",
                    "type": "string",
                    "description": "roleKey",
                    "oldType": "string"
                },
                {
                    "name": "sensitivePerm",
                    "type": "number",
                    "description": "是否有敏感信息权限 0-无 1-有",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "status",
                    "type": "number",
                    "description": "账号状态 0-正常 1-停用",
                    "oldType": "number"
                },
                {
                    "name": "todoPerm",
                    "type": "number",
                    "description": "是否有权限添加主任务 1-是 0-否",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "id 新增时不传 修改时必传",
                    "oldType": "number"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "用户名",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改管理员 buildFnGetOrPostCode\n * \n * @param {string} params.avatar 可选: 图像\n * @param {string} params.city 可选: 归属地\n * @param {string} params.email 必填: 邮箱\n * @param {number} params.mergePerm 必填: 是否有合并线索权限 0-无 1-有\n * @param {string} params.password 可选: 密码\n * @param {string} params.phone 可选: 手机号码\n * @param {string} params.qrCode 可选: 二维码\n * @param {string} params.remark 可选: 备注\n * @param {any[]} params.roleIdList 可选: 角色id列表列表\n * @param {string} params.roleKey 可选: roleKey\n * @param {number} params.sensitivePerm 必填: 是否有敏感信息权限 0-无 1-有\n * @param {number} params.status 可选: 账号状态 0-正常 1-停用\n * @param {number} params.todoPerm 必填: 是否有权限添加主任务 1-是 0-否\n * @param {number} params.userId 可选: id 新增时不传 修改时必传\n * @param {string} params.userName 可选: 用户名\n * @return Promise<OAdminUserPut>\n */\nexport const adminUserPut = async (params?: IAdminUserPut) => {\n\treturn put<OAdminUserPut>(`/admin/user`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改管理员 buildReqGetOrPostTyped\n * @url /admin/user\n */\nexport interface IAdminUserPut{\n\tavatar?: string; // 图像\n\tcity?: string; // 归属地\n\temail: string; // 邮箱\n\tmergePerm: number; // 是否有合并线索权限 0-无 1-有\n\tpassword?: string; // 密码\n\tphone?: string; // 手机号码\n\tqrCode?: string; // 二维码\n\tremark?: string; // 备注\n\troleIdList?: any[]; // 角色id列表列表\n\troleKey?: string; // roleKey\n\tsensitivePerm: number; // 是否有敏感信息权限 0-无 1-有\n\tstatus?: number; // 账号状态 0-正常 1-停用\n\ttodoPerm: number; // 是否有权限添加主任务 1-是 0-否\n\tuserId?: number; // id 新增时不传 修改时必传\n\tuserName?: string; // 用户名\n}",
        "resCode": "/**\n * @description 修改管理员 buildResAnyTyped\n * @url /admin/user\n */\nexport type OAdminUserPut = {\n}",
        "resValueCode": "/**\n * @description 修改管理员 buildResAnyTyped\n * @url /admin/user\n */\nexport const OAdminUserPutValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/user/relevantUserToDept",
        "url": "/admin/user/relevantUserToDept",
        "pureUrl": "/admin/user/relevantUserToDept",
        "pathReqUrl": "/admin/user/relevantUserToDept",
        "method": "post",
        "apiName": "关联老账户到部门",
        "key": "AdminUserRelevantUserToDeptPost",
        "fnName": "adminUserRelevantUserToDeptPost",
        "requestBaseName": "IAdminUserRelevantUserToDeptPost",
        "requestName": [
            "IAdminUserRelevantUserToDeptPost"
        ],
        "responseBaseName": "OAdminUserRelevantUserToDeptPost",
        "responseName": [
            "OAdminUserRelevantUserToDeptPost"
        ],
        "responseValueName": [
            "OAdminUserRelevantUserToDeptPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "deptId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 关联老账户到部门 buildFnGetOrPostCode\n * \n * @param {number} params.deptId 必填: \n * @param {number} params.userId 必填: \n * @return Promise<OAdminUserRelevantUserToDeptPost>\n */\nexport const adminUserRelevantUserToDeptPost = async (params?: IAdminUserRelevantUserToDeptPost) => {\n\treturn post<OAdminUserRelevantUserToDeptPost>(`/admin/user/relevantUserToDept`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 关联老账户到部门 buildReqGetOrPostTyped\n * @url /admin/user/relevantUserToDept\n */\nexport interface IAdminUserRelevantUserToDeptPost{\n\tdeptId: number;\n\tuserId: number;\n}",
        "resCode": "/**\n * @description 关联老账户到部门 buildResAnyTyped\n * @url /admin/user/relevantUserToDept\n */\nexport type OAdminUserRelevantUserToDeptPost = {\n}",
        "resValueCode": "/**\n * @description 关联老账户到部门 buildResAnyTyped\n * @url /admin/user/relevantUserToDept\n */\nexport const OAdminUserRelevantUserToDeptPostValue = {\n}"
    },
    {
        "bodyKey": "put_/admin/user/resetPwd",
        "url": "/admin/user/resetPwd",
        "pureUrl": "/admin/user/resetPwd",
        "pathReqUrl": "/admin/user/resetPwd",
        "method": "put",
        "apiName": "重置密码",
        "key": "AdminUserResetPwdPut",
        "fnName": "adminUserResetPwdPut",
        "requestBaseName": "IAdminUserResetPwdPut",
        "requestName": [
            "IAdminUserResetPwdPut"
        ],
        "responseBaseName": "OAdminUserResetPwdPut",
        "responseName": [
            "OAdminUserResetPwdPut"
        ],
        "responseValueName": [
            "OAdminUserResetPwdPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "oldType": "string"
                },
                {
                    "name": "userId",
                    "type": "number",
                    "description": "用户id",
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 重置密码 buildFnGetOrPostCode\n * \n * @param {string} params.password 可选: 密码\n * @param {number} params.userId 可选: 用户id\n * @return Promise<OAdminUserResetPwdPut>\n */\nexport const adminUserResetPwdPut = async (params?: IAdminUserResetPwdPut) => {\n\treturn put<OAdminUserResetPwdPut>(`/admin/user/resetPwd`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 重置密码 buildReqGetOrPostTyped\n * @url /admin/user/resetPwd\n */\nexport interface IAdminUserResetPwdPut{\n\tpassword?: string; // 密码\n\tuserId?: number; // 用户id\n}",
        "resCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /admin/user/resetPwd\n */\nexport type OAdminUserResetPwdPut = {\n}",
        "resValueCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /admin/user/resetPwd\n */\nexport const OAdminUserResetPwdPutValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/user/rolekey",
        "url": "/admin/user/rolekey",
        "pureUrl": "/admin/user/rolekey",
        "pathReqUrl": "/admin/user/rolekey",
        "method": "get",
        "apiName": "获取管理员角色key",
        "key": "AdminUserRolekeyGet",
        "fnName": "adminUserRolekeyGet",
        "requestBaseName": "IAdminUserRolekeyGet",
        "requestName": [
            "IAdminUserRolekeyGet"
        ],
        "responseBaseName": "OAdminUserRolekeyGet",
        "responseName": [
            "OAdminUserRolekeyGet"
        ],
        "responseValueName": [
            "OAdminUserRolekeyGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取管理员角色key buildFnGetOrPostCode\n * \n * @return Promise<OAdminUserRolekeyGet>\n */\nexport const adminUserRolekeyGet = async (params?: IAdminUserRolekeyGet) => {\n\treturn get<OAdminUserRolekeyGet>(`/admin/user/rolekey`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取管理员角色key buildReqGetOrPostTyped\n * @url /admin/user/rolekey\n */\nexport interface IAdminUserRolekeyGet{\n}",
        "resCode": "/**\n * @description 获取管理员角色key buildResAnyTyped\n * @url /admin/user/rolekey\n */\nexport type OAdminUserRolekeyGet = {\n}",
        "resValueCode": "/**\n * @description 获取管理员角色key buildResAnyTyped\n * @url /admin/user/rolekey\n */\nexport const OAdminUserRolekeyGetValue = {\n}"
    },
    {
        "bodyKey": "delete_/admin/user/{x}",
        "url": "/admin/user/{userId}",
        "pureUrl": "/admin/user/{x}",
        "pathReqUrl": "/admin/user/${userId}",
        "method": "delete",
        "apiName": "删除管理员",
        "key": "AdminUserUserIdDelete",
        "fnName": "adminUserUserIdDelete",
        "requestBaseName": "IAdminUserUserIdDelete",
        "requestName": [
            "IAdminUserUserIdDelete"
        ],
        "responseBaseName": "OAdminUserUserIdDelete",
        "responseName": [
            "OAdminUserUserIdDelete"
        ],
        "responseValueName": [
            "OAdminUserUserIdDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "userId#0",
                    "name": "userId",
                    "required": true,
                    "description": "userId",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 删除管理员 buildFnPathCode\n * @path {number userId 必填: }\n * @return Promise<OAdminUserUserIdDelete>\n */\nexport const adminUserUserIdDelete = async (userId: number) => {\n\treturn del<OAdminUserUserIdDelete>(`/admin/user/${userId}`)\n}",
        "reqCode": "/**\n * @description 删除管理员 buildReqGetOrPostTyped\n * @url /admin/user/{userId}\n */\nexport interface IAdminUserUserIdDelete{\n}",
        "resCode": "/**\n * @description 删除管理员 buildResAnyTyped\n * @url /admin/user/{x}\n */\nexport type OAdminUserUserIdDelete = {\n}",
        "resValueCode": "/**\n * @description 删除管理员 buildResAnyTyped\n * @url /admin/user/{x}\n */\nexport const OAdminUserUserIdDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/user/{x}",
        "url": "/admin/user/{userId}",
        "pureUrl": "/admin/user/{x}",
        "pathReqUrl": "/admin/user/${userId}",
        "method": "get",
        "apiName": "查询管理员详情",
        "key": "AdminUserUserIdGet",
        "fnName": "adminUserUserIdGet",
        "requestBaseName": "IAdminUserUserIdGet",
        "requestName": [
            "IAdminUserUserIdGet"
        ],
        "responseBaseName": "OAdminUserUserIdGet",
        "responseName": [
            "OAdminUserUserIdGet"
        ],
        "responseValueName": [
            "OAdminUserUserIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "userId#0",
                    "name": "userId",
                    "required": true,
                    "description": "userId",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询管理员详情 buildFnPathCode\n * @path {number userId 必填: }\n * @return Promise<OAdminUserUserIdGet>\n */\nexport const adminUserUserIdGet = async (userId: number) => {\n\treturn get<OAdminUserUserIdGet>(`/admin/user/${userId}`)\n}",
        "reqCode": "/**\n * @description 查询管理员详情 buildReqGetOrPostTyped\n * @url /admin/user/{userId}\n */\nexport interface IAdminUserUserIdGet{\n}",
        "resCode": "/**\n * @description 查询管理员详情 buildResAnyTyped\n * @url /admin/user/{x}\n */\nexport type OAdminUserUserIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询管理员详情 buildResAnyTyped\n * @url /admin/user/{x}\n */\nexport const OAdminUserUserIdGetValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/weblogin/bind",
        "url": "/admin/weblogin/bind",
        "pureUrl": "/admin/weblogin/bind",
        "pathReqUrl": "/admin/weblogin/bind",
        "method": "post",
        "apiName": "企业微信登录-绑定账号",
        "key": "AdminWebloginBindPost",
        "fnName": "adminWebloginBindPost",
        "requestBaseName": "IAdminWebloginBindPost",
        "requestName": [
            "IAdminWebloginBindPost"
        ],
        "responseBaseName": "OAdminWebloginBindPost",
        "responseName": [
            "OAdminWebloginBindPost"
        ],
        "responseValueName": [
            "OAdminWebloginBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "emailCode",
                    "type": "string",
                    "description": "有效验证码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "wtoken",
                    "type": "string",
                    "description": "wtoken",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 企业微信登录-绑定账号 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: 邮箱\n * @param {string} params.emailCode 必填: 有效验证码\n * @param {string} params.wtoken 必填: wtoken\n * @return Promise<OAdminWebloginBindPost>\n */\nexport const adminWebloginBindPost = async (params?: IAdminWebloginBindPost) => {\n\treturn post<OAdminWebloginBindPost>(`/admin/weblogin/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 企业微信登录-绑定账号 buildReqGetOrPostTyped\n * @url /admin/weblogin/bind\n */\nexport interface IAdminWebloginBindPost{\n\temail: string; // 邮箱\n\temailCode: string; // 有效验证码\n\twtoken: string; // wtoken\n}",
        "resCode": "/**\n * @description 企业微信登录-绑定账号 buildResAnyTyped\n * @url /admin/weblogin/bind\n */\nexport type OAdminWebloginBindPost = {\n}",
        "resValueCode": "/**\n * @description 企业微信登录-绑定账号 buildResAnyTyped\n * @url /admin/weblogin/bind\n */\nexport const OAdminWebloginBindPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/weblogin/sendEmail",
        "url": "/admin/weblogin/sendEmail",
        "pureUrl": "/admin/weblogin/sendEmail",
        "pathReqUrl": "/admin/weblogin/sendEmail",
        "method": "post",
        "apiName": "企业微信登录-绑定账号-发送邮件",
        "key": "AdminWebloginSendEmailPost",
        "fnName": "adminWebloginSendEmailPost",
        "requestBaseName": "IAdminWebloginSendEmailPost",
        "requestName": [
            "IAdminWebloginSendEmailPost"
        ],
        "responseBaseName": "OAdminWebloginSendEmailPost",
        "responseName": [
            "OAdminWebloginSendEmailPost"
        ],
        "responseValueName": [
            "OAdminWebloginSendEmailPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 企业微信登录-绑定账号-发送邮件 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: \n * @return Promise<OAdminWebloginSendEmailPost>\n */\nexport const adminWebloginSendEmailPost = async (params?: IAdminWebloginSendEmailPost) => {\n\treturn post<OAdminWebloginSendEmailPost>(`/admin/weblogin/sendEmail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 企业微信登录-绑定账号-发送邮件 buildReqGetOrPostTyped\n * @url /admin/weblogin/sendEmail\n */\nexport interface IAdminWebloginSendEmailPost{\n\temail: string;\n}",
        "resCode": "/**\n * @description 企业微信登录-绑定账号-发送邮件 buildResAnyTyped\n * @url /admin/weblogin/sendEmail\n */\nexport type OAdminWebloginSendEmailPost = {\n}",
        "resValueCode": "/**\n * @description 企业微信登录-绑定账号-发送邮件 buildResAnyTyped\n * @url /admin/weblogin/sendEmail\n */\nexport const OAdminWebloginSendEmailPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/withdraw/{x}",
        "url": "/admin/withdraw/{id}",
        "pureUrl": "/admin/withdraw/{x}",
        "pathReqUrl": "/admin/withdraw/${id}",
        "method": "get",
        "apiName": "获取提现详情",
        "key": "AdminWithdrawIdGet",
        "fnName": "adminWithdrawIdGet",
        "requestBaseName": "IAdminWithdrawIdGet",
        "requestName": [
            "IAdminWithdrawIdGet"
        ],
        "responseBaseName": "OAdminWithdrawIdGet",
        "responseName": [
            "OAdminWithdrawIdGet"
        ],
        "responseValueName": [
            "OAdminWithdrawIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "id",
                    "type": "number",
                    "sampleValue": ""
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取提现详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OAdminWithdrawIdGet>\n */\nexport const adminWithdrawIdGet = async (id: number) => {\n\treturn get<OAdminWithdrawIdGet>(`/admin/withdraw/${id}`)\n}",
        "reqCode": "/**\n * @description 获取提现详情 buildReqGetOrPostTyped\n * @url /admin/withdraw/{id}\n */\nexport interface IAdminWithdrawIdGet{\n}",
        "resCode": "/**\n * @description 获取提现详情 buildResAnyTyped\n * @url /admin/withdraw/{x}\n */\nexport type OAdminWithdrawIdGet = {\n}",
        "resValueCode": "/**\n * @description 获取提现详情 buildResAnyTyped\n * @url /admin/withdraw/{x}\n */\nexport const OAdminWithdrawIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/withdraw/list",
        "url": "/admin/withdraw/list",
        "pureUrl": "/admin/withdraw/list",
        "pathReqUrl": "/admin/withdraw/list",
        "method": "get",
        "apiName": "查询提现列表",
        "key": "AdminWithdrawListGet",
        "fnName": "adminWithdrawListGet",
        "requestBaseName": "IAdminWithdrawListGet",
        "requestName": [
            "IAdminWithdrawListGet"
        ],
        "responseBaseName": "OAdminWithdrawListGet",
        "responseName": [
            "OAdminWithdrawListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "id": "kbWP9rovvB",
                    "name": "beginTime",
                    "required": false,
                    "description": "发起开始时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "I9z5sT6HLc",
                    "name": "endTime",
                    "required": false,
                    "description": "发起结束时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "e4fZu7LH6Z",
                    "name": "isAsc",
                    "required": false,
                    "description": "顺序 默认desc",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "zItJukG2bl",
                    "name": "maxAmount",
                    "required": false,
                    "description": "提现金额最大值",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "akS734DUJl",
                    "name": "minAmount",
                    "required": false,
                    "description": "提现金额最小值",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "NSpAFqCRVt",
                    "name": "operatorEmail",
                    "required": false,
                    "description": "用户邮箱",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "0kSqCVjy7g",
                    "name": "operatorId",
                    "required": false,
                    "description": "用户id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "ggrCN3GxfW",
                    "name": "operatorName",
                    "required": false,
                    "description": "用户名称",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "gJu2GfIPaN",
                    "name": "operatorNo",
                    "required": false,
                    "description": "用户编号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "YzSvxae8eo",
                    "name": "operatorPhone",
                    "required": false,
                    "description": "用户手机",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "PQPEel6pQh",
                    "name": "operatorType",
                    "required": false,
                    "description": "用户角色类型",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "ZIXGXP2O1G",
                    "name": "orderByColumn",
                    "required": false,
                    "description": "排序字段 默认create_time",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "RQHYvnrgUj",
                    "name": "pageNum",
                    "required": false,
                    "description": "当前页数",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "Y4xmxLiZNF",
                    "name": "pageSize",
                    "required": false,
                    "description": "每页数量",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "2eA6LiD7Lm",
                    "name": "status",
                    "required": false,
                    "description": "0-提现中 1-成功 2-失败",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "TtjGmvHxUi",
                    "name": "updateBeginTime",
                    "required": false,
                    "description": "操作开始时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "1z0Nom1iTO",
                    "name": "updateById",
                    "required": false,
                    "description": "操作人id",
                    "type": "number",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "WGr6746i3R",
                    "name": "updateEndTime",
                    "required": false,
                    "description": "操作结束时间 yyyy-MM-dd HH:mm:ss",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                },
                {
                    "id": "7eVyZcs9IM",
                    "name": "withdrawNo",
                    "required": false,
                    "description": "提现编号",
                    "type": "string",
                    "enable": true,
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OAdminWithdrawListGetItem",
            "description": "分页列表数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 查询提现列表 buildFnArrayCode\n * \n * @param {string} params.beginTime 可选: 发起开始时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.endTime 可选: 发起结束时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.isAsc 可选: 顺序 默认desc\n * @param {number} params.maxAmount 可选: 提现金额最大值\n * @param {number} params.minAmount 可选: 提现金额最小值\n * @param {string} params.operatorEmail 可选: 用户邮箱\n * @param {number} params.operatorId 可选: 用户id\n * @param {string} params.operatorName 可选: 用户名称\n * @param {string} params.operatorNo 可选: 用户编号\n * @param {string} params.operatorPhone 可选: 用户手机\n * @param {string} params.operatorType 可选: 用户角色类型\n * @param {string} params.orderByColumn 可选: 排序字段 默认create_time\n * @param {number} params.pageNum 可选: 当前页数\n * @param {number} params.pageSize 可选: 每页数量\n * @param {number} params.status 可选: 0-提现中 1-成功 2-失败\n * @param {string} params.updateBeginTime 可选: 操作开始时间 yyyy-MM-dd HH:mm:ss\n * @param {number} params.updateById 可选: 操作人id\n * @param {string} params.updateEndTime 可选: 操作结束时间 yyyy-MM-dd HH:mm:ss\n * @param {string} params.withdrawNo 可选: 提现编号}\n * @return Promise<OAdminWithdrawListGetItem>\n */\nexport const adminWithdrawListGet = async (params?: IAdminWithdrawListGet) => {\n\treturn get<OAdminWithdrawListGetItem[]>(`/admin/withdraw/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询提现列表 buildReqGetOrPostTyped\n * @url /admin/withdraw/list\n */\nexport interface IAdminWithdrawListGet{\n\tbeginTime?: string; // 发起开始时间 yyyy-MM-dd HH:mm:ss\n\tendTime?: string; // 发起结束时间 yyyy-MM-dd HH:mm:ss\n\tisAsc?: string; // 顺序 默认desc\n\tmaxAmount?: number; // 提现金额最大值\n\tminAmount?: number; // 提现金额最小值\n\toperatorEmail?: string; // 用户邮箱\n\toperatorId?: number; // 用户id\n\toperatorName?: string; // 用户名称\n\toperatorNo?: string; // 用户编号\n\toperatorPhone?: string; // 用户手机\n\toperatorType?: string; // 用户角色类型\n\torderByColumn?: string; // 排序字段 默认create_time\n\tpageNum?: number; // 当前页数\n\tpageSize?: number; // 每页数量\n\tstatus?: number; // 0-提现中 1-成功 2-失败\n\tupdateBeginTime?: string; // 操作开始时间 yyyy-MM-dd HH:mm:ss\n\tupdateById?: number; // 操作人id\n\tupdateEndTime?: string; // 操作结束时间 yyyy-MM-dd HH:mm:ss\n\twithdrawNo?: string; // 提现编号\n}",
        "deleteResponseName": "OAdminWithdrawListGet",
        "resCode": "/**\n * @description 查询提现列表 buildResArrayTyped\n * @url /admin/withdraw/list\n */\nexport type OAdminWithdrawListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 查询提现列表 buildResArrayTyped\n * @url /admin/withdraw/list\n */\nexport const OAdminWithdrawListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/withdraw/pass",
        "url": "/admin/withdraw/pass",
        "pureUrl": "/admin/withdraw/pass",
        "pathReqUrl": "/admin/withdraw/pass",
        "method": "post",
        "apiName": "通过审核",
        "key": "AdminWithdrawPassPost",
        "fnName": "adminWithdrawPassPost",
        "requestBaseName": "IAdminWithdrawPassPost",
        "requestName": [
            "IAdminWithdrawPassPost"
        ],
        "responseBaseName": "OAdminWithdrawPassPost",
        "responseName": [
            "OAdminWithdrawPassPost"
        ],
        "responseValueName": [
            "OAdminWithdrawPassPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 通过审核 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: id\n * @param {string} params.remark 可选: 备注\n * @return Promise<OAdminWithdrawPassPost>\n */\nexport const adminWithdrawPassPost = async (params?: IAdminWithdrawPassPost) => {\n\treturn post<OAdminWithdrawPassPost>(`/admin/withdraw/pass`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 通过审核 buildReqGetOrPostTyped\n * @url /admin/withdraw/pass\n */\nexport interface IAdminWithdrawPassPost{\n\tid?: number; // id\n\tremark?: string; // 备注\n}",
        "resCode": "/**\n * @description 通过审核 buildResAnyTyped\n * @url /admin/withdraw/pass\n */\nexport type OAdminWithdrawPassPost = {\n}",
        "resValueCode": "/**\n * @description 通过审核 buildResAnyTyped\n * @url /admin/withdraw/pass\n */\nexport const OAdminWithdrawPassPostValue = {\n}"
    },
    {
        "bodyKey": "post_/admin/withdraw/reject",
        "url": "/admin/withdraw/reject",
        "pureUrl": "/admin/withdraw/reject",
        "pathReqUrl": "/admin/withdraw/reject",
        "method": "post",
        "apiName": "拒绝审核",
        "key": "AdminWithdrawRejectPost",
        "fnName": "adminWithdrawRejectPost",
        "requestBaseName": "IAdminWithdrawRejectPost",
        "requestName": [
            "IAdminWithdrawRejectPost"
        ],
        "responseBaseName": "OAdminWithdrawRejectPost",
        "responseName": [
            "OAdminWithdrawRejectPost"
        ],
        "responseValueName": [
            "OAdminWithdrawRejectPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "id",
                    "oldType": "number"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 拒绝审核 buildFnGetOrPostCode\n * \n * @param {number} params.id 可选: id\n * @param {string} params.remark 可选: 备注\n * @return Promise<OAdminWithdrawRejectPost>\n */\nexport const adminWithdrawRejectPost = async (params?: IAdminWithdrawRejectPost) => {\n\treturn post<OAdminWithdrawRejectPost>(`/admin/withdraw/reject`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 拒绝审核 buildReqGetOrPostTyped\n * @url /admin/withdraw/reject\n */\nexport interface IAdminWithdrawRejectPost{\n\tid?: number; // id\n\tremark?: string; // 备注\n}",
        "resCode": "/**\n * @description 拒绝审核 buildResAnyTyped\n * @url /admin/withdraw/reject\n */\nexport type OAdminWithdrawRejectPost = {\n}",
        "resValueCode": "/**\n * @description 拒绝审核 buildResAnyTyped\n * @url /admin/withdraw/reject\n */\nexport const OAdminWithdrawRejectPostValue = {\n}"
    },
    {
        "bodyKey": "get_/admin/wwlogin/url",
        "url": "/admin/wwlogin/url",
        "pureUrl": "/admin/wwlogin/url",
        "pathReqUrl": "/admin/wwlogin/url",
        "method": "get",
        "apiName": "构造企业微信登录链接",
        "key": "AdminWwloginUrlGet",
        "fnName": "adminWwloginUrlGet",
        "requestBaseName": "IAdminWwloginUrlGet",
        "requestName": [
            "IAdminWwloginUrlGet"
        ],
        "responseBaseName": "OAdminWwloginUrlGet",
        "responseName": [
            "OAdminWwloginUrlGet"
        ],
        "responseValueName": [
            "OAdminWwloginUrlGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 构造企业微信登录链接 buildFnGetOrPostCode\n * \n * @return Promise<OAdminWwloginUrlGet>\n */\nexport const adminWwloginUrlGet = async (params?: IAdminWwloginUrlGet) => {\n\treturn get<OAdminWwloginUrlGet>(`/admin/wwlogin/url`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 构造企业微信登录链接 buildReqGetOrPostTyped\n * @url /admin/wwlogin/url\n */\nexport interface IAdminWwloginUrlGet{\n}",
        "resCode": "/**\n * @description 构造企业微信登录链接 buildResAnyTyped\n * @url /admin/wwlogin/url\n */\nexport type OAdminWwloginUrlGet = {\n}",
        "resValueCode": "/**\n * @description 构造企业微信登录链接 buildResAnyTyped\n * @url /admin/wwlogin/url\n */\nexport const OAdminWwloginUrlGetValue = {\n}"
    },
    {
        "bodyKey": "get_/channel/follow/notify/record",
        "url": "/channel/follow/notify/record",
        "pureUrl": "/channel/follow/notify/record",
        "pathReqUrl": "/channel/follow/notify/record",
        "method": "get",
        "apiName": "获取旅程消息",
        "key": "ChannelFollowNotifyRecordGet",
        "fnName": "channelFollowNotifyRecordGet",
        "requestBaseName": "IChannelFollowNotifyRecordGet",
        "requestName": [
            "IChannelFollowNotifyRecordGet"
        ],
        "responseBaseName": "OChannelFollowNotifyRecordGet",
        "responseName": [
            "OChannelFollowNotifyRecordGet"
        ],
        "responseValueName": [
            "OChannelFollowNotifyRecordGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "y1y0nPnPDc",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "fHrzFgP81s",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取旅程消息 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OChannelFollowNotifyRecordGet>\n */\nexport const channelFollowNotifyRecordGet = async (params?: IChannelFollowNotifyRecordGet) => {\n\treturn get<OChannelFollowNotifyRecordGet>(`/channel/follow/notify/record`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取旅程消息 buildReqGetOrPostTyped\n * @url /channel/follow/notify/record\n */\nexport interface IChannelFollowNotifyRecordGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 获取旅程消息 buildResAnyTyped\n * @url /channel/follow/notify/record\n */\nexport type OChannelFollowNotifyRecordGet = {\n}",
        "resValueCode": "/**\n * @description 获取旅程消息 buildResAnyTyped\n * @url /channel/follow/notify/record\n */\nexport const OChannelFollowNotifyRecordGetValue = {\n}"
    },
    {
        "bodyKey": "get_/channel/info",
        "url": "/channel/info",
        "pureUrl": "/channel/info",
        "pathReqUrl": "/channel/info",
        "method": "get",
        "apiName": "渠道信息",
        "key": "ChannelInfoGet",
        "fnName": "channelInfoGet",
        "requestBaseName": "IChannelInfoGet",
        "requestName": [
            "IChannelInfoGet"
        ],
        "responseBaseName": "OChannelInfoGet",
        "responseName": [
            "OChannelInfoGet"
        ],
        "responseValueName": [
            "OChannelInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 渠道信息 buildFnGetOrPostCode\n * \n * @return Promise<OChannelInfoGet>\n */\nexport const channelInfoGet = async (params?: IChannelInfoGet) => {\n\treturn get<OChannelInfoGet>(`/channel/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 渠道信息 buildReqGetOrPostTyped\n * @url /channel/info\n */\nexport interface IChannelInfoGet{\n}",
        "resCode": "/**\n * @description 渠道信息 buildResAnyTyped\n * @url /channel/info\n */\nexport type OChannelInfoGet = {\n}",
        "resValueCode": "/**\n * @description 渠道信息 buildResAnyTyped\n * @url /channel/info\n */\nexport const OChannelInfoGetValue = {\n}"
    },
    {
        "bodyKey": "post_/channel/login",
        "url": "/channel/login",
        "pureUrl": "/channel/login",
        "pathReqUrl": "/channel/login",
        "method": "post",
        "apiName": "渠道登录",
        "key": "ChannelLoginPost",
        "fnName": "channelLoginPost",
        "requestBaseName": "IChannelLoginPost",
        "requestName": [
            "IChannelLoginPost"
        ],
        "responseBaseName": "OChannelLoginPost",
        "responseName": [
            "OChannelLoginPost"
        ],
        "responseValueName": [
            "OChannelLoginPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "loginName",
                    "type": "string",
                    "description": "用户名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 渠道登录 buildFnGetOrPostCode\n * \n * @param {string} params.loginName 必填: 用户名\n * @param {string} params.password 必填: 密码\n * @return Promise<OChannelLoginPost>\n */\nexport const channelLoginPost = async (params?: IChannelLoginPost) => {\n\treturn post<OChannelLoginPost>(`/channel/login`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 渠道登录 buildReqGetOrPostTyped\n * @url /channel/login\n */\nexport interface IChannelLoginPost{\n\tloginName: string; // 用户名\n\tpassword: string; // 密码\n}",
        "resCode": "/**\n * @description 渠道登录 buildResAnyTyped\n * @url /channel/login\n */\nexport type OChannelLoginPost = {\n}",
        "resValueCode": "/**\n * @description 渠道登录 buildResAnyTyped\n * @url /channel/login\n */\nexport const OChannelLoginPostValue = {\n}"
    },
    {
        "bodyKey": "post_/channel/password",
        "url": "/channel/password",
        "pureUrl": "/channel/password",
        "pathReqUrl": "/channel/password",
        "method": "post",
        "apiName": "修改密码",
        "key": "ChannelPasswordPost",
        "fnName": "channelPasswordPost",
        "requestBaseName": "IChannelPasswordPost",
        "requestName": [
            "IChannelPasswordPost"
        ],
        "responseBaseName": "OChannelPasswordPost",
        "responseName": [
            "OChannelPasswordPost"
        ],
        "responseValueName": [
            "OChannelPasswordPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "newPassword",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "oldPassword",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改密码 buildFnGetOrPostCode\n * \n * @param {string} params.newPassword 必填: \n * @param {string} params.oldPassword 必填: \n * @return Promise<OChannelPasswordPost>\n */\nexport const channelPasswordPost = async (params?: IChannelPasswordPost) => {\n\treturn post<OChannelPasswordPost>(`/channel/password`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改密码 buildReqGetOrPostTyped\n * @url /channel/password\n */\nexport interface IChannelPasswordPost{\n\tnewPassword: string;\n\toldPassword: string;\n}",
        "resCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /channel/password\n */\nexport type OChannelPasswordPost = {\n}",
        "resValueCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /channel/password\n */\nexport const OChannelPasswordPostValue = {\n}"
    },
    {
        "bodyKey": "get_/channel/thread/detail",
        "url": "/channel/thread/detail",
        "pureUrl": "/channel/thread/detail",
        "pathReqUrl": "/channel/thread/detail",
        "method": "get",
        "apiName": "获取线索详情",
        "key": "ChannelThreadDetailGet",
        "fnName": "channelThreadDetailGet",
        "requestBaseName": "IChannelThreadDetailGet",
        "requestName": [
            "IChannelThreadDetailGet"
        ],
        "responseBaseName": "OChannelThreadDetailGet",
        "responseName": [
            "OChannelThreadDetailGet"
        ],
        "responseValueName": [
            "OChannelThreadDetailGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "vfCamaw8de",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取线索详情 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @return Promise<OChannelThreadDetailGet>\n */\nexport const channelThreadDetailGet = async (params?: IChannelThreadDetailGet) => {\n\treturn get<OChannelThreadDetailGet>(`/channel/thread/detail`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取线索详情 buildReqGetOrPostTyped\n * @url /channel/thread/detail\n */\nexport interface IChannelThreadDetailGet{\n\tinvestorId: number;\n}",
        "resCode": "/**\n * @description 获取线索详情 buildResAnyTyped\n * @url /channel/thread/detail\n */\nexport type OChannelThreadDetailGet = {\n}",
        "resValueCode": "/**\n * @description 获取线索详情 buildResAnyTyped\n * @url /channel/thread/detail\n */\nexport const OChannelThreadDetailGetValue = {\n}"
    },
    {
        "bodyKey": "get_/channel/thread/follow/record",
        "url": "/channel/thread/follow/record",
        "pureUrl": "/channel/thread/follow/record",
        "pathReqUrl": "/channel/thread/follow/record",
        "method": "get",
        "apiName": "获取旅程列表",
        "key": "ChannelThreadFollowRecordGet",
        "fnName": "channelThreadFollowRecordGet",
        "requestBaseName": "IChannelThreadFollowRecordGet",
        "requestName": [
            "IChannelThreadFollowRecordGet"
        ],
        "responseBaseName": "OChannelThreadFollowRecordGet",
        "responseName": [
            "OChannelThreadFollowRecordGet"
        ],
        "responseValueName": [
            "OChannelThreadFollowRecordGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "number",
                    "id": "JUFJeKdGWG",
                    "enable": true,
                    "name": "investorId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "sPMA5hESo6",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "vHGo93DlUv",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取旅程列表 buildFnGetOrPostCode\n * \n * @param {number} params.investorId 必填: \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @return Promise<OChannelThreadFollowRecordGet>\n */\nexport const channelThreadFollowRecordGet = async (params?: IChannelThreadFollowRecordGet) => {\n\treturn get<OChannelThreadFollowRecordGet>(`/channel/thread/follow/record`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取旅程列表 buildReqGetOrPostTyped\n * @url /channel/thread/follow/record\n */\nexport interface IChannelThreadFollowRecordGet{\n\tinvestorId: number;\n\tpageSize?: number;\n\tpageNum?: number;\n}",
        "resCode": "/**\n * @description 获取旅程列表 buildResAnyTyped\n * @url /channel/thread/follow/record\n */\nexport type OChannelThreadFollowRecordGet = {\n}",
        "resValueCode": "/**\n * @description 获取旅程列表 buildResAnyTyped\n * @url /channel/thread/follow/record\n */\nexport const OChannelThreadFollowRecordGetValue = {\n}"
    },
    {
        "bodyKey": "get_/channel/thread/list",
        "url": "/channel/thread/list",
        "pureUrl": "/channel/thread/list",
        "pathReqUrl": "/channel/thread/list",
        "method": "get",
        "apiName": "获取线索列表",
        "key": "ChannelThreadListGet",
        "fnName": "channelThreadListGet",
        "requestBaseName": "IChannelThreadListGet",
        "requestName": [
            "IChannelThreadListGet"
        ],
        "responseBaseName": "OChannelThreadListGet",
        "responseName": [
            "OChannelThreadListGet"
        ],
        "responseValueName": [
            "OChannelThreadListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "UF5guBEHwo",
                    "enable": true,
                    "name": "keyword",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "VwQY5EpAhj",
                    "enable": true,
                    "name": "city",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "oh4Tq8cVIt",
                    "enable": true,
                    "name": "province",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-未签约 1-签约 2-复购 9-退出",
                    "type": "number",
                    "id": "HWT5PVf3r5",
                    "enable": true,
                    "name": "tranStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "0-未跟进 1-已跟进 9-已释放",
                    "type": "number",
                    "id": "wCqtAxvcds",
                    "enable": true,
                    "name": "customerStatus",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "T7icXFZtwk",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "KXvtseajlu",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "签约客户查询 固定值：1",
                    "type": "number",
                    "id": "VRyMqmNlPx",
                    "enable": true,
                    "name": "isConclude",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取线索列表 buildFnGetOrPostCode\n * \n * @param {string} params.keyword 可选: \n * @param {string} params.city 可选: \n * @param {string} params.province 可选: \n * @param {number} params.tranStatus 可选: 0-未签约 1-签约 2-复购 9-退出\n * @param {number} params.customerStatus 可选: 0-未跟进 1-已跟进 9-已释放\n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.isConclude 可选: 签约客户查询 固定值：1\n * @return Promise<OChannelThreadListGet>\n */\nexport const channelThreadListGet = async (params?: IChannelThreadListGet) => {\n\treturn get<OChannelThreadListGet>(`/channel/thread/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取线索列表 buildReqGetOrPostTyped\n * @url /channel/thread/list\n */\nexport interface IChannelThreadListGet{\n\tkeyword?: string;\n\tcity?: string;\n\tprovince?: string;\n\ttranStatus?: number; // 0-未签约 1-签约 2-复购 9-退出\n\tcustomerStatus?: number; // 0-未跟进 1-已跟进 9-已释放\n\tpageSize?: number;\n\tpageNum?: number;\n\tisConclude?: number; // 签约客户查询 固定值：1\n}",
        "resCode": "/**\n * @description 获取线索列表 buildResAnyTyped\n * @url /channel/thread/list\n */\nexport type OChannelThreadListGet = {\n}",
        "resValueCode": "/**\n * @description 获取线索列表 buildResAnyTyped\n * @url /channel/thread/list\n */\nexport const OChannelThreadListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/channel/thread",
        "url": "/channel/thread",
        "pureUrl": "/channel/thread",
        "pathReqUrl": "/channel/thread",
        "method": "post",
        "apiName": "添加线索",
        "key": "ChannelThreadPost",
        "fnName": "channelThreadPost",
        "requestBaseName": "IChannelThreadPost",
        "requestName": [
            "IChannelThreadPost"
        ],
        "responseBaseName": "OChannelThreadPost",
        "responseName": [
            "OChannelThreadPost"
        ],
        "responseValueName": [
            "OChannelThreadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "remark",
                    "type": "string",
                    "description": "备注",
                    "oldType": "string"
                },
                {
                    "name": "userName",
                    "type": "string",
                    "description": "用户名",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "wechat",
                    "type": "string",
                    "description": "微信号",
                    "oldType": "string"
                },
                {
                    "name": "wechatName",
                    "type": "string",
                    "description": "微信昵称",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 添加线索 buildFnGetOrPostCode\n * \n * @param {string} params.city 可选: 城市\n * @param {string} params.email 可选: 邮箱\n * @param {string} params.phone 必填: 手机号\n * @param {string} params.remark 可选: 备注\n * @param {string} params.userName 必填: 用户名\n * @param {string} params.wechat 可选: 微信号\n * @param {string} params.wechatName 可选: 微信昵称\n * @return Promise<OChannelThreadPost>\n */\nexport const channelThreadPost = async (params?: IChannelThreadPost) => {\n\treturn post<OChannelThreadPost>(`/channel/thread`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加线索 buildReqGetOrPostTyped\n * @url /channel/thread\n */\nexport interface IChannelThreadPost{\n\tcity?: string; // 城市\n\temail?: string; // 邮箱\n\tphone: string; // 手机号\n\tremark?: string; // 备注\n\tuserName: string; // 用户名\n\twechat?: string; // 微信号\n\twechatName?: string; // 微信昵称\n}",
        "resCode": "/**\n * @description 添加线索 buildResAnyTyped\n * @url /channel/thread\n */\nexport type OChannelThreadPost = {\n}",
        "resValueCode": "/**\n * @description 添加线索 buildResAnyTyped\n * @url /channel/thread\n */\nexport const OChannelThreadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/common/product/{x}",
        "url": "/common/product/{id}",
        "pureUrl": "/common/product/{x}",
        "pathReqUrl": "/common/product/${id}",
        "method": "get",
        "apiName": "项目详情",
        "key": "CommonProductIdGet",
        "fnName": "commonProductIdGet",
        "requestBaseName": "ICommonProductIdGet",
        "requestName": [
            "ICommonProductIdGet"
        ],
        "responseBaseName": "OCommonProductIdGet",
        "responseName": [
            "OCommonProductIdGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OCommonProductIdGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "产品ID",
                        "oldType": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "产品名称",
                        "oldType": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "产品类型",
                        "oldType": "string"
                    },
                    "projectStatus": {
                        "type": "number",
                        "description": "项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止",
                        "oldType": "integer"
                    },
                    "fundStatus": {
                        "type": "number",
                        "description": "发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕",
                        "oldType": "integer"
                    },
                    "progressStatus": {
                        "type": "number",
                        "description": "建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成",
                        "oldType": "integer"
                    },
                    "pcLinkUrl": {
                        "type": "null",
                        "oldType": "null"
                    },
                    "mobileLinkUrl": {
                        "type": "null",
                        "oldType": "null"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 项目详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OCommonProductIdGetItem[]>\n */\nexport const commonProductIdGet = async (id: number) => {\n\treturn get<OCommonProductIdGetItem[]>(`/common/product/${id}`)\n}",
        "reqCode": "/**\n * @description 项目详情 buildReqGetOrPostTyped\n * @url /common/product/{id}\n */\nexport interface ICommonProductIdGet{\n}",
        "deleteResponseName": "OCommonProductIdGet",
        "resCode": "/**\n * @description 项目详情 buildResArrayTyped\n * @url /common/product/{x}\n */\nexport type OCommonProductIdGetItem = {\n\tfundStatus: number; // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕\n\tid: number; // 产品ID\n\tmobileLinkUrl: null;\n\tname: string; // 产品名称\n\tpcLinkUrl: null;\n\tprogressStatus: number; // 建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus: number; // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\ttype: string; // 产品类型  \n}",
        "resValueCode": "/**\n * @description 项目详情 buildResArrayTyped\n * @url /common/product/{x}\n */\nexport const OCommonProductIdGetItemValue = {\n\tfundStatus: -1, // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕\n\tid: -1, // 产品ID\n\tmobileLinkUrl: undefined,\n\tname: '', // 产品名称\n\tpcLinkUrl: undefined,\n\tprogressStatus: -1, // 建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus: -1, // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\ttype: '', // 产品类型\n}"
    },
    {
        "bodyKey": "get_/common/product/list",
        "url": "/common/product/list",
        "pureUrl": "/common/product/list",
        "pathReqUrl": "/common/product/list",
        "method": "get",
        "apiName": "项目列表",
        "key": "CommonProductListGet",
        "fnName": "commonProductListGet",
        "requestBaseName": "ICommonProductListGet",
        "requestName": [
            "ICommonProductListGet"
        ],
        "responseBaseName": "OCommonProductListGet",
        "responseName": [
            "OCommonProductListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品名称",
                    "type": "string",
                    "id": "rX9XXTeExf",
                    "enable": true,
                    "name": "name",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "产品类型",
                    "type": "string",
                    "id": "FD1R7tKfI9",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "UOD4K19v6R",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "ftAFEmGCuK",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区",
                    "type": "string",
                    "id": "y6SbpRvZ6G",
                    "enable": true,
                    "name": "regionCategory",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "法律 1新法 0老法",
                    "type": "number",
                    "id": "7iT5eMGgbl",
                    "enable": true,
                    "name": "law",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "售罄状态 0-未售完 1已售完",
                    "type": "number",
                    "id": "K1RP7zSUMS",
                    "enable": true,
                    "name": "sellStatus",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OCommonProductListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "产品ID",
                        "oldType": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "产品名称",
                        "oldType": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "产品类型",
                        "oldType": "string"
                    },
                    "projectStatus": {
                        "type": "number",
                        "description": "项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止",
                        "oldType": "integer"
                    },
                    "fundStatus": {
                        "type": "number",
                        "description": "发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕",
                        "oldType": "integer"
                    },
                    "progressStatus": {
                        "type": "number",
                        "description": "建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成",
                        "oldType": "integer"
                    },
                    "pcLinkUrl": {
                        "type": "null",
                        "oldType": "null"
                    },
                    "mobileLinkUrl": {
                        "type": "null",
                        "oldType": "null"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 项目列表 buildFnArrayCode\n * \n * @param {string} params.name 可选: 产品名称\n * @param {string} params.type 可选: 产品类型\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {string} params.regionCategory 可选: 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n * @param {number} params.law 可选: 法律 1新法 0老法\n * @param {number} params.sellStatus 可选: 售罄状态 0-未售完 1已售完}\n * @return Promise<OCommonProductListGetItem>\n */\nexport const commonProductListGet = async (params?: ICommonProductListGet) => {\n\treturn get<OCommonProductListGetItem[]>(`/common/product/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 项目列表 buildReqGetOrPostTyped\n * @url /common/product/list\n */\nexport interface ICommonProductListGet{\n\tname?: string; // 产品名称\n\ttype?: string; // 产品类型\n\tpageNum?: number;\n\tpageSize?: number;\n\tregionCategory?: string; // 地区类别 1-农业地区 2-高失业地区 3-基建项目 4-一般地区\n\tlaw?: number; // 法律 1新法 0老法\n\tsellStatus?: number; // 售罄状态 0-未售完 1已售完\n}",
        "deleteResponseName": "OCommonProductListGet",
        "resCode": "/**\n * @description 项目列表 buildResArrayTyped\n * @url /common/product/list\n */\nexport type OCommonProductListGetItem = {\n\tfundStatus: number; // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕\n\tid: number; // 产品ID\n\tmobileLinkUrl: null;\n\tname: string; // 产品名称\n\tpcLinkUrl: null;\n\tprogressStatus: number; // 建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus: number; // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\ttype: string; // 产品类型  \n}",
        "resValueCode": "/**\n * @description 项目列表 buildResArrayTyped\n * @url /common/product/list\n */\nexport const OCommonProductListGetItemValue = {\n\tfundStatus: -1, // 发行状态(原资金状态) 1-准备发行 2-募集中 3-募集完毕\n\tid: -1, // 产品ID\n\tmobileLinkUrl: undefined,\n\tname: '', // 产品名称\n\tpcLinkUrl: undefined,\n\tprogressStatus: -1, // 建设进度状态  1-项目规划中 2-开工准备中 3-地基施工中 4-主体施工中 5-内部施工中 6-已经完工 7-项目出租中 8-项目销售中 9-出租销售完成\n\tprojectStatus: -1, // 项目状态 1-即将开始 2-申购中 3-已过户 4-暂停 5-终止\n\ttype: '', // 产品类型\n}"
    },
    {
        "bodyKey": "get_/common/product/relevant/content",
        "url": "/common/product/relevant/content",
        "pureUrl": "/common/product/relevant/content",
        "pathReqUrl": "/common/product/relevant/content",
        "method": "get",
        "apiName": "获取产品相关内容",
        "key": "CommonProductRelevantContentGet",
        "fnName": "commonProductRelevantContentGet",
        "requestBaseName": "ICommonProductRelevantContentGet",
        "requestName": [
            "ICommonProductRelevantContentGet"
        ],
        "responseBaseName": "OCommonProductRelevantContentGet",
        "responseName": [
            "OCommonProductRelevantContentGet"
        ],
        "responseValueName": [
            "OCommonProductRelevantContentGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "产品ID",
                    "type": "number",
                    "id": "Gn1iN9YgRX",
                    "enable": true,
                    "name": "productId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "news ｜ video ｜ image ｜ file",
                    "type": "string",
                    "id": "AVxAQl8As9",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取产品相关内容 buildFnGetOrPostCode\n * \n * @param {number} params.productId 必填: 产品ID\n * @param {string} params.type 可选: news ｜ video ｜ image ｜ file\n * @return Promise<OCommonProductRelevantContentGet>\n */\nexport const commonProductRelevantContentGet = async (params?: ICommonProductRelevantContentGet) => {\n\treturn get<OCommonProductRelevantContentGet>(`/common/product/relevant/content`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取产品相关内容 buildReqGetOrPostTyped\n * @url /common/product/relevant/content\n */\nexport interface ICommonProductRelevantContentGet{\n\tproductId: number; // 产品ID\n\ttype?: string; // news ｜ video ｜ image ｜ file\n}",
        "resCode": "/**\n * @description 获取产品相关内容 buildResAnyTyped\n * @url /common/product/relevant/content\n */\nexport type OCommonProductRelevantContentGet = {\n}",
        "resValueCode": "/**\n * @description 获取产品相关内容 buildResAnyTyped\n * @url /common/product/relevant/content\n */\nexport const OCommonProductRelevantContentGetValue = {\n}"
    },
    {
        "bodyKey": "post_/common/send/phone/code",
        "url": "/common/send/phone/code",
        "pureUrl": "/common/send/phone/code",
        "pathReqUrl": "/common/send/phone/code",
        "method": "post",
        "apiName": "发送手机验证码",
        "key": "CommonSendPhoneCodePost",
        "fnName": "commonSendPhoneCodePost",
        "requestBaseName": "ICommonSendPhoneCodePost",
        "requestName": [
            "ICommonSendPhoneCodePost"
        ],
        "responseBaseName": "OCommonSendPhoneCodePost",
        "responseName": [
            "OCommonSendPhoneCodePost"
        ],
        "responseValueName": [
            "OCommonSendPhoneCodePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "bizType",
                    "type": "string",
                    "description": "业务类型 目前有 register，login",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 发送手机验证码 buildFnGetOrPostCode\n * \n * @param {string} params.bizType 必填: 业务类型 目前有 register，login\n * @param {string} params.phone 必填: 手机号码\n * @return Promise<OCommonSendPhoneCodePost>\n */\nexport const commonSendPhoneCodePost = async (params?: ICommonSendPhoneCodePost) => {\n\treturn post<OCommonSendPhoneCodePost>(`/common/send/phone/code`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 发送手机验证码 buildReqGetOrPostTyped\n * @url /common/send/phone/code\n */\nexport interface ICommonSendPhoneCodePost{\n\tbizType: string; // 业务类型 目前有 register，login\n\tphone: string; // 手机号码\n}",
        "resCode": "/**\n * @description 发送手机验证码 buildResAnyTyped\n * @url /common/send/phone/code\n */\nexport type OCommonSendPhoneCodePost = {\n}",
        "resValueCode": "/**\n * @description 发送手机验证码 buildResAnyTyped\n * @url /common/send/phone/code\n */\nexport const OCommonSendPhoneCodePostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/avatar/modify",
        "url": "/investor/avatar/modify",
        "pureUrl": "/investor/avatar/modify",
        "pathReqUrl": "/investor/avatar/modify",
        "method": "post",
        "apiName": "修改图像",
        "key": "InvestorAvatarModifyPost",
        "fnName": "investorAvatarModifyPost",
        "requestBaseName": "IInvestorAvatarModifyPost",
        "requestName": [
            "IInvestorAvatarModifyPostFormData"
        ],
        "responseBaseName": "OInvestorAvatarModifyPost",
        "responseName": [
            "OInvestorAvatarModifyPost"
        ],
        "responseValueName": [
            "OInvestorAvatarModifyPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "",
                    "type": "file",
                    "id": "1jfLcx0EzX",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 修改图像 buildFnFileCode\n * \n * @param {file} params.files 可选: \n * @return Promise<OInvestorAvatarModifyPost>\n */\nexport const investorAvatarModifyPost = async (params?: IInvestorAvatarModifyPostFormData) => {\n\treturn post<OInvestorAvatarModifyPost>(`/investor/avatar/modify`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IInvestorAvatarModifyPost",
        "reqCode": "/**\n * @description 修改图像 buildReqFileTyped\n * @url /investor/avatar/modify\n */\nexport interface IInvestorAvatarModifyPostFormData extends FormData{\n\tappend: (name: 'files', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 修改图像 buildResAnyTyped\n * @url /investor/avatar/modify\n */\nexport type OInvestorAvatarModifyPost = {\n}",
        "resValueCode": "/**\n * @description 修改图像 buildResAnyTyped\n * @url /investor/avatar/modify\n */\nexport const OInvestorAvatarModifyPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/bank/account/bind",
        "url": "/investor/bank/account/bind",
        "pureUrl": "/investor/bank/account/bind",
        "pathReqUrl": "/investor/bank/account/bind",
        "method": "post",
        "apiName": "绑定/换绑 银行卡信息",
        "key": "InvestorBankAccountBindPost",
        "fnName": "investorBankAccountBindPost",
        "requestBaseName": "IInvestorBankAccountBindPost",
        "requestName": [
            "IInvestorBankAccountBindPost"
        ],
        "responseBaseName": "OInvestorBankAccountBindPost",
        "responseName": [
            "OInvestorBankAccountBindPost"
        ],
        "responseValueName": [
            "OInvestorBankAccountBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "bankName",
                    "type": "string",
                    "description": "银行名称",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankNumber",
                    "type": "string",
                    "description": "银行卡",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "bankUserName",
                    "type": "string",
                    "description": "开户名",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 绑定/换绑 银行卡信息 buildFnGetOrPostCode\n * \n * @param {string} params.bankName 必填: 银行名称\n * @param {string} params.bankNumber 必填: 银行卡\n * @param {string} params.bankUserName 必填: 开户名\n * @return Promise<OInvestorBankAccountBindPost>\n */\nexport const investorBankAccountBindPost = async (params?: IInvestorBankAccountBindPost) => {\n\treturn post<OInvestorBankAccountBindPost>(`/investor/bank/account/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定/换绑 银行卡信息 buildReqGetOrPostTyped\n * @url /investor/bank/account/bind\n */\nexport interface IInvestorBankAccountBindPost{\n\tbankName: string; // 银行名称\n\tbankNumber: string; // 银行卡\n\tbankUserName: string; // 开户名\n}",
        "resCode": "/**\n * @description 绑定/换绑 银行卡信息 buildResAnyTyped\n * @url /investor/bank/account/bind\n */\nexport type OInvestorBankAccountBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定/换绑 银行卡信息 buildResAnyTyped\n * @url /investor/bank/account/bind\n */\nexport const OInvestorBankAccountBindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/bank/account",
        "url": "/investor/bank/account",
        "pureUrl": "/investor/bank/account",
        "pathReqUrl": "/investor/bank/account",
        "method": "get",
        "apiName": "获取银行卡信息",
        "key": "InvestorBankAccountGet",
        "fnName": "investorBankAccountGet",
        "requestBaseName": "IInvestorBankAccountGet",
        "requestName": [
            "IInvestorBankAccountGet"
        ],
        "responseBaseName": "OInvestorBankAccountGet",
        "responseName": [
            "OInvestorBankAccountGet"
        ],
        "responseValueName": [
            "OInvestorBankAccountGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取银行卡信息 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorBankAccountGet>\n */\nexport const investorBankAccountGet = async (params?: IInvestorBankAccountGet) => {\n\treturn get<OInvestorBankAccountGet>(`/investor/bank/account`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取银行卡信息 buildReqGetOrPostTyped\n * @url /investor/bank/account\n */\nexport interface IInvestorBankAccountGet{\n}",
        "resCode": "/**\n * @description 获取银行卡信息 buildResAnyTyped\n * @url /investor/bank/account\n */\nexport type OInvestorBankAccountGet = {\n}",
        "resValueCode": "/**\n * @description 获取银行卡信息 buildResAnyTyped\n * @url /investor/bank/account\n */\nexport const OInvestorBankAccountGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/bank/account/unbind",
        "url": "/investor/bank/account/unbind",
        "pureUrl": "/investor/bank/account/unbind",
        "pathReqUrl": "/investor/bank/account/unbind",
        "method": "post",
        "apiName": "解绑 银行卡信息",
        "key": "InvestorBankAccountUnbindPost",
        "fnName": "investorBankAccountUnbindPost",
        "requestBaseName": "IInvestorBankAccountUnbindPost",
        "requestName": [
            "IInvestorBankAccountUnbindPost"
        ],
        "responseBaseName": "OInvestorBankAccountUnbindPost",
        "responseName": [
            "OInvestorBankAccountUnbindPost"
        ],
        "responseValueName": [
            "OInvestorBankAccountUnbindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 解绑 银行卡信息 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorBankAccountUnbindPost>\n */\nexport const investorBankAccountUnbindPost = async (params?: IInvestorBankAccountUnbindPost) => {\n\treturn post<OInvestorBankAccountUnbindPost>(`/investor/bank/account/unbind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 解绑 银行卡信息 buildReqGetOrPostTyped\n * @url /investor/bank/account/unbind\n */\nexport interface IInvestorBankAccountUnbindPost{\n}",
        "resCode": "/**\n * @description 解绑 银行卡信息 buildResAnyTyped\n * @url /investor/bank/account/unbind\n */\nexport type OInvestorBankAccountUnbindPost = {\n}",
        "resValueCode": "/**\n * @description 解绑 银行卡信息 buildResAnyTyped\n * @url /investor/bank/account/unbind\n */\nexport const OInvestorBankAccountUnbindPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/bindEmail",
        "url": "/investor/bindEmail",
        "pureUrl": "/investor/bindEmail",
        "pathReqUrl": "/investor/bindEmail",
        "method": "post",
        "apiName": "绑定邮箱",
        "key": "InvestorBindEmailPost",
        "fnName": "investorBindEmailPost",
        "requestBaseName": "IInvestorBindEmailPost",
        "requestName": [
            "IInvestorBindEmailPost"
        ],
        "responseBaseName": "OInvestorBindEmailPost",
        "responseName": [
            "OInvestorBindEmailPost"
        ],
        "responseValueName": [
            "OInvestorBindEmailPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "验证码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "newEmail",
                    "type": "string",
                    "description": "新邮箱",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定邮箱 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: 验证码\n * @param {string} params.newEmail 必填: 新邮箱\n * @return Promise<OInvestorBindEmailPost>\n */\nexport const investorBindEmailPost = async (params?: IInvestorBindEmailPost) => {\n\treturn post<OInvestorBindEmailPost>(`/investor/bindEmail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定邮箱 buildReqGetOrPostTyped\n * @url /investor/bindEmail\n */\nexport interface IInvestorBindEmailPost{\n\tcode: string; // 验证码\n\tnewEmail: string; // 新邮箱\n}",
        "resCode": "/**\n * @description 绑定邮箱 buildResAnyTyped\n * @url /investor/bindEmail\n */\nexport type OInvestorBindEmailPost = {\n}",
        "resValueCode": "/**\n * @description 绑定邮箱 buildResAnyTyped\n * @url /investor/bindEmail\n */\nexport const OInvestorBindEmailPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/broker/list",
        "url": "/investor/broker/list",
        "pureUrl": "/investor/broker/list",
        "pathReqUrl": "/investor/broker/list",
        "method": "get",
        "apiName": "我的顾问",
        "key": "InvestorBrokerListGet",
        "fnName": "investorBrokerListGet",
        "requestBaseName": "IInvestorBrokerListGet",
        "requestName": [
            "IInvestorBrokerListGet"
        ],
        "responseBaseName": "OInvestorBrokerListGet",
        "responseName": [
            "OInvestorBrokerListGet"
        ],
        "responseValueName": [
            "OInvestorBrokerListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-当前 1-历史",
                    "type": "number",
                    "id": "voTDJOAuXq",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单id",
                    "type": "number",
                    "id": "wMLKagGLrP",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的顾问 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-当前 1-历史\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OInvestorBrokerListGet>\n */\nexport const investorBrokerListGet = async (params?: IInvestorBrokerListGet) => {\n\treturn get<OInvestorBrokerListGet>(`/investor/broker/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的顾问 buildReqGetOrPostTyped\n * @url /investor/broker/list\n */\nexport interface IInvestorBrokerListGet{\n\tstatus?: number; // 状态 0-当前 1-历史\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 我的顾问 buildResAnyTyped\n * @url /investor/broker/list\n */\nexport type OInvestorBrokerListGet = {\n}",
        "resValueCode": "/**\n * @description 我的顾问 buildResAnyTyped\n * @url /investor/broker/list\n */\nexport const OInvestorBrokerListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/chooseIdentity",
        "url": "/investor/chooseIdentity",
        "pureUrl": "/investor/chooseIdentity",
        "pathReqUrl": "/investor/chooseIdentity",
        "method": "post",
        "apiName": "选择合格投资者regs/regd",
        "key": "InvestorChooseIdentityPost",
        "fnName": "investorChooseIdentityPost",
        "requestBaseName": "IInvestorChooseIdentityPost",
        "requestName": [
            "IInvestorChooseIdentityPost"
        ],
        "responseBaseName": "OInvestorChooseIdentityPost",
        "responseName": [
            "OInvestorChooseIdentityPost"
        ],
        "responseValueName": [
            "OInvestorChooseIdentityPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "type",
                    "type": "number",
                    "description": "投资者身份，1-Reg S，2-Reg D",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 选择合格投资者regs/regd buildFnGetOrPostCode\n * \n * @param {number} params.type 必填: 投资者身份，1-Reg S，2-Reg D\n * @return Promise<OInvestorChooseIdentityPost>\n */\nexport const investorChooseIdentityPost = async (params?: IInvestorChooseIdentityPost) => {\n\treturn post<OInvestorChooseIdentityPost>(`/investor/chooseIdentity`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 选择合格投资者regs/regd buildReqGetOrPostTyped\n * @url /investor/chooseIdentity\n */\nexport interface IInvestorChooseIdentityPost{\n\ttype: number; // 投资者身份，1-Reg S，2-Reg D\n}",
        "resCode": "/**\n * @description 选择合格投资者regs/regd buildResAnyTyped\n * @url /investor/chooseIdentity\n */\nexport type OInvestorChooseIdentityPost = {\n}",
        "resValueCode": "/**\n * @description 选择合格投资者regs/regd buildResAnyTyped\n * @url /investor/chooseIdentity\n */\nexport const OInvestorChooseIdentityPostValue = {\n}"
    },
    {
        "bodyKey": "delete_/investor/collection/{x}",
        "url": "/investor/collection/{collectionNo}",
        "pureUrl": "/investor/collection/{x}",
        "pathReqUrl": "/investor/collection/${collectionNo}",
        "method": "delete",
        "apiName": "删除收藏",
        "key": "InvestorCollectionCollectionNoDelete",
        "fnName": "investorCollectionCollectionNoDelete",
        "requestBaseName": "IInvestorCollectionCollectionNoDelete",
        "requestName": [
            "IInvestorCollectionCollectionNoDelete"
        ],
        "responseBaseName": "OInvestorCollectionCollectionNoDelete",
        "responseName": [
            "OInvestorCollectionCollectionNoDelete"
        ],
        "responseValueName": [
            "OInvestorCollectionCollectionNoDeleteValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "collectionNo#0",
                    "name": "collectionNo",
                    "required": true,
                    "description": "",
                    "type": "string",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 删除收藏 buildFnPathCode\n * @path {string collectionNo 必填: }\n * @return Promise<OInvestorCollectionCollectionNoDelete>\n */\nexport const investorCollectionCollectionNoDelete = async (collectionNo: string) => {\n\treturn del<OInvestorCollectionCollectionNoDelete>(`/investor/collection/${collectionNo}`)\n}",
        "reqCode": "/**\n * @description 删除收藏 buildReqGetOrPostTyped\n * @url /investor/collection/{collectionNo}\n */\nexport interface IInvestorCollectionCollectionNoDelete{\n}",
        "resCode": "/**\n * @description 删除收藏 buildResAnyTyped\n * @url /investor/collection/{x}\n */\nexport type OInvestorCollectionCollectionNoDelete = {\n}",
        "resValueCode": "/**\n * @description 删除收藏 buildResAnyTyped\n * @url /investor/collection/{x}\n */\nexport const OInvestorCollectionCollectionNoDeleteValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/collection/live",
        "url": "/investor/collection/live",
        "pureUrl": "/investor/collection/live",
        "pathReqUrl": "/investor/collection/live",
        "method": "get",
        "apiName": "收藏列表-直播",
        "key": "InvestorCollectionLiveGet",
        "fnName": "investorCollectionLiveGet",
        "requestBaseName": "IInvestorCollectionLiveGet",
        "requestName": [
            "IInvestorCollectionLiveGet"
        ],
        "responseBaseName": "OInvestorCollectionLiveGet",
        "responseName": [
            "OInvestorCollectionLiveGet"
        ],
        "responseValueName": [
            "OInvestorCollectionLiveGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "PROJECT:项目 LIVE:直播 NEWS:新闻",
                    "type": "string",
                    "id": "ogXGkTRUEU",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "O0U6E7adRd",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "eDBz6cgTm3",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 收藏列表-直播 buildFnGetOrPostCode\n * \n * @param {string} params.type 可选: PROJECT:项目 LIVE:直播 NEWS:新闻\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorCollectionLiveGet>\n */\nexport const investorCollectionLiveGet = async (params?: IInvestorCollectionLiveGet) => {\n\treturn get<OInvestorCollectionLiveGet>(`/investor/collection/live`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 收藏列表-直播 buildReqGetOrPostTyped\n * @url /investor/collection/live\n */\nexport interface IInvestorCollectionLiveGet{\n\ttype?: string; // PROJECT:项目 LIVE:直播 NEWS:新闻\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 收藏列表-直播 buildResAnyTyped\n * @url /investor/collection/live\n */\nexport type OInvestorCollectionLiveGet = {\n}",
        "resValueCode": "/**\n * @description 收藏列表-直播 buildResAnyTyped\n * @url /investor/collection/live\n */\nexport const OInvestorCollectionLiveGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/collection/news",
        "url": "/investor/collection/news",
        "pureUrl": "/investor/collection/news",
        "pathReqUrl": "/investor/collection/news",
        "method": "get",
        "apiName": "收藏列表-新闻",
        "key": "InvestorCollectionNewsGet",
        "fnName": "investorCollectionNewsGet",
        "requestBaseName": "IInvestorCollectionNewsGet",
        "requestName": [
            "IInvestorCollectionNewsGet"
        ],
        "responseBaseName": "OInvestorCollectionNewsGet",
        "responseName": [
            "OInvestorCollectionNewsGet"
        ],
        "responseValueName": [
            "OInvestorCollectionNewsGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "PROJECT:项目 LIVE:直播 NEWS:新闻",
                    "type": "string",
                    "id": "ogXGkTRUEU",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "O0U6E7adRd",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "eDBz6cgTm3",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 收藏列表-新闻 buildFnGetOrPostCode\n * \n * @param {string} params.type 可选: PROJECT:项目 LIVE:直播 NEWS:新闻\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorCollectionNewsGet>\n */\nexport const investorCollectionNewsGet = async (params?: IInvestorCollectionNewsGet) => {\n\treturn get<OInvestorCollectionNewsGet>(`/investor/collection/news`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 收藏列表-新闻 buildReqGetOrPostTyped\n * @url /investor/collection/news\n */\nexport interface IInvestorCollectionNewsGet{\n\ttype?: string; // PROJECT:项目 LIVE:直播 NEWS:新闻\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 收藏列表-新闻 buildResAnyTyped\n * @url /investor/collection/news\n */\nexport type OInvestorCollectionNewsGet = {\n}",
        "resValueCode": "/**\n * @description 收藏列表-新闻 buildResAnyTyped\n * @url /investor/collection/news\n */\nexport const OInvestorCollectionNewsGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/collection",
        "url": "/investor/collection",
        "pureUrl": "/investor/collection",
        "pathReqUrl": "/investor/collection",
        "method": "post",
        "apiName": "新增收藏",
        "key": "InvestorCollectionPost",
        "fnName": "investorCollectionPost",
        "requestBaseName": "IInvestorCollectionPost",
        "requestName": [
            "IInvestorCollectionPost"
        ],
        "responseBaseName": "OInvestorCollectionPost",
        "responseName": [
            "OInvestorCollectionPost"
        ],
        "responseValueName": [
            "OInvestorCollectionPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": false,
                    "description": "对象ID",
                    "type": "number",
                    "id": "yzd1pfhmCI",
                    "enable": true,
                    "name": "objId",
                    "sampleValue": "",
                    "oldType": "number"
                },
                {
                    "required": false,
                    "description": "对象类型 PROJECT:项目  LIVE:直播  NEWS:文章",
                    "type": "string",
                    "id": "Cha0sHauoP",
                    "enable": true,
                    "name": "objType",
                    "sampleValue": "",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 新增收藏 buildFnGetOrPostCode\n * \n * @param {number} params.objId 可选: 对象ID\n * @param {string} params.objType 可选: 对象类型 PROJECT:项目  LIVE:直播  NEWS:文章\n * @return Promise<OInvestorCollectionPost>\n */\nexport const investorCollectionPost = async (params?: IInvestorCollectionPost) => {\n\treturn post<OInvestorCollectionPost>(`/investor/collection`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 新增收藏 buildReqGetOrPostTyped\n * @url /investor/collection\n */\nexport interface IInvestorCollectionPost{\n\tobjId?: number; // 对象ID\n\tobjType?: string; // 对象类型 PROJECT:项目  LIVE:直播  NEWS:文章\n}",
        "resCode": "/**\n * @description 新增收藏 buildResAnyTyped\n * @url /investor/collection\n */\nexport type OInvestorCollectionPost = {\n}",
        "resValueCode": "/**\n * @description 新增收藏 buildResAnyTyped\n * @url /investor/collection\n */\nexport const OInvestorCollectionPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/collection/project",
        "url": "/investor/collection/project",
        "pureUrl": "/investor/collection/project",
        "pathReqUrl": "/investor/collection/project",
        "method": "get",
        "apiName": "收藏列表-项目",
        "key": "InvestorCollectionProjectGet",
        "fnName": "investorCollectionProjectGet",
        "requestBaseName": "IInvestorCollectionProjectGet",
        "requestName": [
            "IInvestorCollectionProjectGet"
        ],
        "responseBaseName": "OInvestorCollectionProjectGet",
        "responseName": [
            "OInvestorCollectionProjectGet"
        ],
        "responseValueName": [
            "OInvestorCollectionProjectGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "PROJECT:项目 LIVE:直播 NEWS:新闻",
                    "type": "string",
                    "id": "ogXGkTRUEU",
                    "enable": true,
                    "name": "type",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "O0U6E7adRd",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "eDBz6cgTm3",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 收藏列表-项目 buildFnGetOrPostCode\n * \n * @param {string} params.type 可选: PROJECT:项目 LIVE:直播 NEWS:新闻\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorCollectionProjectGet>\n */\nexport const investorCollectionProjectGet = async (params?: IInvestorCollectionProjectGet) => {\n\treturn get<OInvestorCollectionProjectGet>(`/investor/collection/project`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 收藏列表-项目 buildReqGetOrPostTyped\n * @url /investor/collection/project\n */\nexport interface IInvestorCollectionProjectGet{\n\ttype?: string; // PROJECT:项目 LIVE:直播 NEWS:新闻\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 收藏列表-项目 buildResAnyTyped\n * @url /investor/collection/project\n */\nexport type OInvestorCollectionProjectGet = {\n}",
        "resValueCode": "/**\n * @description 收藏列表-项目 buildResAnyTyped\n * @url /investor/collection/project\n */\nexport const OInvestorCollectionProjectGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/copywriting/list",
        "url": "/investor/copywriting/list",
        "pureUrl": "/investor/copywriting/list",
        "pathReqUrl": "/investor/copywriting/list",
        "method": "get",
        "apiName": "我的文案",
        "key": "InvestorCopywritingListGet",
        "fnName": "investorCopywritingListGet",
        "requestBaseName": "IInvestorCopywritingListGet",
        "requestName": [
            "IInvestorCopywritingListGet"
        ],
        "responseBaseName": "OInvestorCopywritingListGet",
        "responseName": [
            "OInvestorCopywritingListGet"
        ],
        "responseValueName": [
            "OInvestorCopywritingListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-当前 1-历史",
                    "type": "number",
                    "id": "voTDJOAuXq",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单id",
                    "type": "number",
                    "id": "5FXpCl3W0F",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的文案 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-当前 1-历史\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OInvestorCopywritingListGet>\n */\nexport const investorCopywritingListGet = async (params?: IInvestorCopywritingListGet) => {\n\treturn get<OInvestorCopywritingListGet>(`/investor/copywriting/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的文案 buildReqGetOrPostTyped\n * @url /investor/copywriting/list\n */\nexport interface IInvestorCopywritingListGet{\n\tstatus?: number; // 状态 0-当前 1-历史\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 我的文案 buildResAnyTyped\n * @url /investor/copywriting/list\n */\nexport type OInvestorCopywritingListGet = {\n}",
        "resValueCode": "/**\n * @description 我的文案 buildResAnyTyped\n * @url /investor/copywriting/list\n */\nexport const OInvestorCopywritingListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/coupon",
        "url": "/investor/coupon",
        "pureUrl": "/investor/coupon",
        "pathReqUrl": "/investor/coupon",
        "method": "get",
        "apiName": "我的优惠券",
        "key": "InvestorCouponGet",
        "fnName": "investorCouponGet",
        "requestBaseName": "IInvestorCouponGet",
        "requestName": [
            "IInvestorCouponGet"
        ],
        "responseBaseName": "OInvestorCouponGet",
        "responseName": [
            "OInvestorCouponGet"
        ],
        "responseValueName": [
            "OInvestorCouponGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "knJlh8auEO",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "BSNyojOQws",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "类别 PLATFORM:平台 OTHER:其他",
                    "type": "string",
                    "id": "Fxk6kO3Hs3",
                    "enable": true,
                    "name": "category",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "类型 0-预定费 1-咨询费 2-律师费",
                    "type": "number",
                    "id": "joLL0vPZ3a",
                    "enable": true,
                    "name": "couponType",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的优惠券 buildFnGetOrPostCode\n * \n * @param {number} params.pageSize 可选: \n * @param {number} params.pageNum 可选: \n * @param {string} params.category 可选: 类别 PLATFORM:平台 OTHER:其他\n * @param {number} params.couponType 可选: 类型 0-预定费 1-咨询费 2-律师费\n * @return Promise<OInvestorCouponGet>\n */\nexport const investorCouponGet = async (params?: IInvestorCouponGet) => {\n\treturn get<OInvestorCouponGet>(`/investor/coupon`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的优惠券 buildReqGetOrPostTyped\n * @url /investor/coupon\n */\nexport interface IInvestorCouponGet{\n\tpageSize?: number;\n\tpageNum?: number;\n\tcategory?: string; // 类别 PLATFORM:平台 OTHER:其他\n\tcouponType?: number; // 类型 0-预定费 1-咨询费 2-律师费\n}",
        "resCode": "/**\n * @description 我的优惠券 buildResAnyTyped\n * @url /investor/coupon\n */\nexport type OInvestorCouponGet = {\n}",
        "resValueCode": "/**\n * @description 我的优惠券 buildResAnyTyped\n * @url /investor/coupon\n */\nexport const OInvestorCouponGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/coupon/receive",
        "url": "/investor/coupon/receive",
        "pureUrl": "/investor/coupon/receive",
        "pathReqUrl": "/investor/coupon/receive",
        "method": "post",
        "apiName": "领取转让的优惠券",
        "key": "InvestorCouponReceivePost",
        "fnName": "investorCouponReceivePost",
        "requestBaseName": "IInvestorCouponReceivePost",
        "requestName": [
            "IInvestorCouponReceivePost"
        ],
        "responseBaseName": "OInvestorCouponReceivePost",
        "responseName": [
            "OInvestorCouponReceivePost"
        ],
        "responseValueName": [
            "OInvestorCouponReceivePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "transferNo",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 领取转让的优惠券 buildFnGetOrPostCode\n * \n * @param {number} params.transferNo 必填: \n * @return Promise<OInvestorCouponReceivePost>\n */\nexport const investorCouponReceivePost = async (params?: IInvestorCouponReceivePost) => {\n\treturn post<OInvestorCouponReceivePost>(`/investor/coupon/receive`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 领取转让的优惠券 buildReqGetOrPostTyped\n * @url /investor/coupon/receive\n */\nexport interface IInvestorCouponReceivePost{\n\ttransferNo: number;\n}",
        "resCode": "/**\n * @description 领取转让的优惠券 buildResAnyTyped\n * @url /investor/coupon/receive\n */\nexport type OInvestorCouponReceivePost = {\n}",
        "resValueCode": "/**\n * @description 领取转让的优惠券 buildResAnyTyped\n * @url /investor/coupon/receive\n */\nexport const OInvestorCouponReceivePostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/coupon/transfer",
        "url": "/investor/coupon/transfer",
        "pureUrl": "/investor/coupon/transfer",
        "pathReqUrl": "/investor/coupon/transfer",
        "method": "get",
        "apiName": "获取转让优惠券",
        "key": "InvestorCouponTransferGet",
        "fnName": "investorCouponTransferGet",
        "requestBaseName": "IInvestorCouponTransferGet",
        "requestName": [
            "IInvestorCouponTransferGet"
        ],
        "responseBaseName": "OInvestorCouponTransferGet",
        "responseName": [
            "OInvestorCouponTransferGet"
        ],
        "responseValueName": [
            "OInvestorCouponTransferGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "转让编号",
                    "type": "string",
                    "id": "N26y2Ociee",
                    "enable": true,
                    "name": "transferNo",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取转让优惠券 buildFnGetOrPostCode\n * \n * @param {string} params.transferNo 可选: 转让编号\n * @return Promise<OInvestorCouponTransferGet>\n */\nexport const investorCouponTransferGet = async (params?: IInvestorCouponTransferGet) => {\n\treturn get<OInvestorCouponTransferGet>(`/investor/coupon/transfer`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取转让优惠券 buildReqGetOrPostTyped\n * @url /investor/coupon/transfer\n */\nexport interface IInvestorCouponTransferGet{\n\ttransferNo?: string; // 转让编号\n}",
        "resCode": "/**\n * @description 获取转让优惠券 buildResAnyTyped\n * @url /investor/coupon/transfer\n */\nexport type OInvestorCouponTransferGet = {\n}",
        "resValueCode": "/**\n * @description 获取转让优惠券 buildResAnyTyped\n * @url /investor/coupon/transfer\n */\nexport const OInvestorCouponTransferGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/coupon/transfer/list",
        "url": "/investor/coupon/transfer/list",
        "pureUrl": "/investor/coupon/transfer/list",
        "pathReqUrl": "/investor/coupon/transfer/list",
        "method": "get",
        "apiName": "获取我的转让列表",
        "key": "InvestorCouponTransferListGet",
        "fnName": "investorCouponTransferListGet",
        "requestBaseName": "IInvestorCouponTransferListGet",
        "requestName": [
            "IInvestorCouponTransferListGet"
        ],
        "responseBaseName": "OInvestorCouponTransferListGet",
        "responseName": [
            "OInvestorCouponTransferListGet"
        ],
        "responseValueName": [
            "OInvestorCouponTransferListGetValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取我的转让列表 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorCouponTransferListGet>\n */\nexport const investorCouponTransferListGet = async (params?: IInvestorCouponTransferListGet) => {\n\treturn get<OInvestorCouponTransferListGet>(`/investor/coupon/transfer/list`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 获取我的转让列表 buildReqGetOrPostTyped\n * @url /investor/coupon/transfer/list\n */\nexport interface IInvestorCouponTransferListGet{\n}",
        "resCode": "/**\n * @description 获取我的转让列表 buildResAnyTyped\n * @url /investor/coupon/transfer/list\n */\nexport type OInvestorCouponTransferListGet = {\n}",
        "resValueCode": "/**\n * @description 获取我的转让列表 buildResAnyTyped\n * @url /investor/coupon/transfer/list\n */\nexport const OInvestorCouponTransferListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/coupon/transfer",
        "url": "/investor/coupon/transfer",
        "pureUrl": "/investor/coupon/transfer",
        "pathReqUrl": "/investor/coupon/transfer",
        "method": "post",
        "apiName": "优惠券转让",
        "key": "InvestorCouponTransferPost",
        "fnName": "investorCouponTransferPost",
        "requestBaseName": "IInvestorCouponTransferPost",
        "requestName": [
            "IInvestorCouponTransferPost"
        ],
        "responseBaseName": "OInvestorCouponTransferPost",
        "responseName": [
            "OInvestorCouponTransferPost"
        ],
        "responseValueName": [
            "OInvestorCouponTransferPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "invCouponId",
                    "type": "number",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 优惠券转让 buildFnGetOrPostCode\n * \n * @param {number} params.invCouponId 必填: \n * @return Promise<OInvestorCouponTransferPost>\n */\nexport const investorCouponTransferPost = async (params?: IInvestorCouponTransferPost) => {\n\treturn post<OInvestorCouponTransferPost>(`/investor/coupon/transfer`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 优惠券转让 buildReqGetOrPostTyped\n * @url /investor/coupon/transfer\n */\nexport interface IInvestorCouponTransferPost{\n\tinvCouponId: number;\n}",
        "resCode": "/**\n * @description 优惠券转让 buildResAnyTyped\n * @url /investor/coupon/transfer\n */\nexport type OInvestorCouponTransferPost = {\n}",
        "resValueCode": "/**\n * @description 优惠券转让 buildResAnyTyped\n * @url /investor/coupon/transfer\n */\nexport const OInvestorCouponTransferPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/customer/list",
        "url": "/investor/customer/list",
        "pureUrl": "/investor/customer/list",
        "pathReqUrl": "/investor/customer/list",
        "method": "get",
        "apiName": "我的客服",
        "key": "InvestorCustomerListGet",
        "fnName": "investorCustomerListGet",
        "requestBaseName": "IInvestorCustomerListGet",
        "requestName": [
            "IInvestorCustomerListGet"
        ],
        "responseBaseName": "OInvestorCustomerListGet",
        "responseName": [
            "OInvestorCustomerListGet"
        ],
        "responseValueName": [
            "OInvestorCustomerListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-当前 1-历史",
                    "type": "number",
                    "id": "voTDJOAuXq",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "I6ltJlNzS6",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的客服 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-当前 1-历史\n * @param {number} params.orderId 可选: 订单ID\n * @return Promise<OInvestorCustomerListGet>\n */\nexport const investorCustomerListGet = async (params?: IInvestorCustomerListGet) => {\n\treturn get<OInvestorCustomerListGet>(`/investor/customer/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的客服 buildReqGetOrPostTyped\n * @url /investor/customer/list\n */\nexport interface IInvestorCustomerListGet{\n\tstatus?: number; // 状态 0-当前 1-历史\n\torderId?: number; // 订单ID\n}",
        "resCode": "/**\n * @description 我的客服 buildResAnyTyped\n * @url /investor/customer/list\n */\nexport type OInvestorCustomerListGet = {\n}",
        "resValueCode": "/**\n * @description 我的客服 buildResAnyTyped\n * @url /investor/customer/list\n */\nexport const OInvestorCustomerListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/eb5fund/list",
        "url": "/investor/eb5fund/list",
        "pureUrl": "/investor/eb5fund/list",
        "pathReqUrl": "/investor/eb5fund/list",
        "method": "get",
        "apiName": "EB-5基金",
        "key": "InvestorEb5fundListGet",
        "fnName": "investorEb5fundListGet",
        "requestBaseName": "IInvestorEb5fundListGet",
        "requestName": [
            "IInvestorEb5fundListGet"
        ],
        "responseBaseName": "OInvestorEb5fundListGet",
        "responseName": [
            "OInvestorEb5fundListGet"
        ],
        "responseValueName": [
            "OInvestorEb5fundListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description EB-5基金 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorEb5fundListGet>\n */\nexport const investorEb5fundListGet = async (params?: IInvestorEb5fundListGet) => {\n\treturn get<OInvestorEb5fundListGet>(`/investor/eb5fund/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description EB-5基金 buildReqGetOrPostTyped\n * @url /investor/eb5fund/list\n */\nexport interface IInvestorEb5fundListGet{\n}",
        "resCode": "/**\n * @description EB-5基金 buildResAnyTyped\n * @url /investor/eb5fund/list\n */\nexport type OInvestorEb5fundListGet = {\n}",
        "resValueCode": "/**\n * @description EB-5基金 buildResAnyTyped\n * @url /investor/eb5fund/list\n */\nexport const OInvestorEb5fundListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/email/bind",
        "url": "/investor/email/bind",
        "pureUrl": "/investor/email/bind",
        "pathReqUrl": "/investor/email/bind",
        "method": "post",
        "apiName": "绑定邮箱-发送验证邮件",
        "key": "InvestorEmailBindPost",
        "fnName": "investorEmailBindPost",
        "requestBaseName": "IInvestorEmailBindPost",
        "requestName": [
            "IInvestorEmailBindPost"
        ],
        "responseBaseName": "OInvestorEmailBindPost",
        "responseName": [
            "OInvestorEmailBindPost"
        ],
        "responseValueName": [
            "OInvestorEmailBindPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 绑定邮箱-发送验证邮件 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: 邮箱\n * @return Promise<OInvestorEmailBindPost>\n */\nexport const investorEmailBindPost = async (params?: IInvestorEmailBindPost) => {\n\treturn post<OInvestorEmailBindPost>(`/investor/email/bind`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 绑定邮箱-发送验证邮件 buildReqGetOrPostTyped\n * @url /investor/email/bind\n */\nexport interface IInvestorEmailBindPost{\n\temail: string; // 邮箱\n}",
        "resCode": "/**\n * @description 绑定邮箱-发送验证邮件 buildResAnyTyped\n * @url /investor/email/bind\n */\nexport type OInvestorEmailBindPost = {\n}",
        "resValueCode": "/**\n * @description 绑定邮箱-发送验证邮件 buildResAnyTyped\n * @url /investor/email/bind\n */\nexport const OInvestorEmailBindPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/email/unbind",
        "url": "/investor/email/unbind",
        "pureUrl": "/investor/email/unbind",
        "pathReqUrl": "/investor/email/unbind",
        "method": "post",
        "apiName": "解绑邮箱-发送验证邮件",
        "key": "InvestorEmailUnbindPost",
        "fnName": "investorEmailUnbindPost",
        "requestBaseName": "IInvestorEmailUnbindPost",
        "requestName": [
            "IInvestorEmailUnbindPost"
        ],
        "responseBaseName": "OInvestorEmailUnbindPost",
        "responseName": [
            "OInvestorEmailUnbindPost"
        ],
        "responseValueName": [
            "OInvestorEmailUnbindPostValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 解绑邮箱-发送验证邮件 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorEmailUnbindPost>\n */\nexport const investorEmailUnbindPost = async (params?: IInvestorEmailUnbindPost) => {\n\treturn post<OInvestorEmailUnbindPost>(`/investor/email/unbind`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 解绑邮箱-发送验证邮件 buildReqGetOrPostTyped\n * @url /investor/email/unbind\n */\nexport interface IInvestorEmailUnbindPost{\n}",
        "resCode": "/**\n * @description 解绑邮箱-发送验证邮件 buildResAnyTyped\n * @url /investor/email/unbind\n */\nexport type OInvestorEmailUnbindPost = {\n}",
        "resValueCode": "/**\n * @description 解绑邮箱-发送验证邮件 buildResAnyTyped\n * @url /investor/email/unbind\n */\nexport const OInvestorEmailUnbindPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/file/list",
        "url": "/investor/file/list",
        "pureUrl": "/investor/file/list",
        "pathReqUrl": "/investor/file/list",
        "method": "get",
        "apiName": "文件列表",
        "key": "InvestorFileListGet",
        "fnName": "investorFileListGet",
        "requestBaseName": "IInvestorFileListGet",
        "requestName": [
            "IInvestorFileListGet"
        ],
        "responseBaseName": "OInvestorFileListGet",
        "responseName": [
            "OInvestorFileListGet"
        ],
        "responseValueName": [
            "OInvestorFileListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "unDr7LZZAY",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "7kKvfkVVLe",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "组件ID",
                    "type": "number",
                    "id": "iqk2olvQJa",
                    "enable": true,
                    "name": "componentId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "子订单ID",
                    "type": "number",
                    "id": "aLlC9J3ZX8",
                    "enable": true,
                    "name": "orderSubId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "MHfzibqUuU",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 文件列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.componentId 可选: 组件ID\n * @param {number} params.orderSubId 可选: 子订单ID\n * @param {number} params.orderId 可选: 订单ID\n * @return Promise<OInvestorFileListGet>\n */\nexport const investorFileListGet = async (params?: IInvestorFileListGet) => {\n\treturn get<OInvestorFileListGet>(`/investor/file/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 文件列表 buildReqGetOrPostTyped\n * @url /investor/file/list\n */\nexport interface IInvestorFileListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\tcomponentId?: number; // 组件ID\n\torderSubId?: number; // 子订单ID\n\torderId?: number; // 订单ID\n}",
        "resCode": "/**\n * @description 文件列表 buildResAnyTyped\n * @url /investor/file/list\n */\nexport type OInvestorFileListGet = {\n}",
        "resValueCode": "/**\n * @description 文件列表 buildResAnyTyped\n * @url /investor/file/list\n */\nexport const OInvestorFileListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/history/file/list",
        "url": "/investor/history/file/list",
        "pureUrl": "/investor/history/file/list",
        "pathReqUrl": "/investor/history/file/list",
        "method": "get",
        "apiName": "历史文件",
        "key": "InvestorHistoryFileListGet",
        "fnName": "investorHistoryFileListGet",
        "requestBaseName": "IInvestorHistoryFileListGet",
        "requestName": [
            "IInvestorHistoryFileListGet"
        ],
        "responseBaseName": "OInvestorHistoryFileListGet",
        "responseName": [
            "OInvestorHistoryFileListGet"
        ],
        "responseValueName": [
            "OInvestorHistoryFileListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "子订单ID",
                    "type": "number",
                    "id": "w9kzsNHTR6",
                    "enable": true,
                    "name": "orderSubId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "KBSZ6OlRsF",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "LODTiCNqv0",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 历史文件 buildFnGetOrPostCode\n * \n * @param {number} params.orderSubId 可选: 子订单ID\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorHistoryFileListGet>\n */\nexport const investorHistoryFileListGet = async (params?: IInvestorHistoryFileListGet) => {\n\treturn get<OInvestorHistoryFileListGet>(`/investor/history/file/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 历史文件 buildReqGetOrPostTyped\n * @url /investor/history/file/list\n */\nexport interface IInvestorHistoryFileListGet{\n\torderSubId?: number; // 子订单ID\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 历史文件 buildResAnyTyped\n * @url /investor/history/file/list\n */\nexport type OInvestorHistoryFileListGet = {\n}",
        "resValueCode": "/**\n * @description 历史文件 buildResAnyTyped\n * @url /investor/history/file/list\n */\nexport const OInvestorHistoryFileListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/invitation/info",
        "url": "/investor/invitation/info",
        "pureUrl": "/investor/invitation/info",
        "pathReqUrl": "/investor/invitation/info",
        "method": "get",
        "apiName": "邀请码信息",
        "key": "InvestorInvitationInfoGet",
        "fnName": "investorInvitationInfoGet",
        "requestBaseName": "IInvestorInvitationInfoGet",
        "requestName": [
            "IInvestorInvitationInfoGet"
        ],
        "responseBaseName": "OInvestorInvitationInfoGet",
        "responseName": [
            "OInvestorInvitationInfoGet"
        ],
        "responseValueName": [
            "OInvestorInvitationInfoGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 邀请码信息 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorInvitationInfoGet>\n */\nexport const investorInvitationInfoGet = async (params?: IInvestorInvitationInfoGet) => {\n\treturn get<OInvestorInvitationInfoGet>(`/investor/invitation/info`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 邀请码信息 buildReqGetOrPostTyped\n * @url /investor/invitation/info\n */\nexport interface IInvestorInvitationInfoGet{\n}",
        "resCode": "/**\n * @description 邀请码信息 buildResAnyTyped\n * @url /investor/invitation/info\n */\nexport type OInvestorInvitationInfoGet = {\n}",
        "resValueCode": "/**\n * @description 邀请码信息 buildResAnyTyped\n * @url /investor/invitation/info\n */\nexport const OInvestorInvitationInfoGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/invitation/list",
        "url": "/investor/invitation/list",
        "pureUrl": "/investor/invitation/list",
        "pathReqUrl": "/investor/invitation/list",
        "method": "get",
        "apiName": "邀请记录",
        "key": "InvestorInvitationListGet",
        "fnName": "investorInvitationListGet",
        "requestBaseName": "IInvestorInvitationListGet",
        "requestName": [
            "IInvestorInvitationListGet"
        ],
        "responseBaseName": "OInvestorInvitationListGet",
        "responseName": [
            "OInvestorInvitationListGet"
        ],
        "responseValueName": [
            "OInvestorInvitationListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "bwFYTI4a7o",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "oiCRWsk16u",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 邀请记录 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorInvitationListGet>\n */\nexport const investorInvitationListGet = async (params?: IInvestorInvitationListGet) => {\n\treturn get<OInvestorInvitationListGet>(`/investor/invitation/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 邀请记录 buildReqGetOrPostTyped\n * @url /investor/invitation/list\n */\nexport interface IInvestorInvitationListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 邀请记录 buildResAnyTyped\n * @url /investor/invitation/list\n */\nexport type OInvestorInvitationListGet = {\n}",
        "resValueCode": "/**\n * @description 邀请记录 buildResAnyTyped\n * @url /investor/invitation/list\n */\nexport const OInvestorInvitationListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/invitation/order/list",
        "url": "/investor/invitation/order/list",
        "pureUrl": "/investor/invitation/order/list",
        "pathReqUrl": "/investor/invitation/order/list",
        "method": "get",
        "apiName": "邀请记录订单列表",
        "key": "InvestorInvitationOrderListGet",
        "fnName": "investorInvitationOrderListGet",
        "requestBaseName": "IInvestorInvitationOrderListGet",
        "requestName": [
            "IInvestorInvitationOrderListGet"
        ],
        "responseBaseName": "OInvestorInvitationOrderListGet",
        "responseName": [
            "OInvestorInvitationOrderListGet"
        ],
        "responseValueName": [
            "OInvestorInvitationOrderListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "bwFYTI4a7o",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "oiCRWsk16u",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "i7GblLoIUA",
                    "enable": true,
                    "name": "hisId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 邀请记录订单列表 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.hisId 可选: \n * @return Promise<OInvestorInvitationOrderListGet>\n */\nexport const investorInvitationOrderListGet = async (params?: IInvestorInvitationOrderListGet) => {\n\treturn get<OInvestorInvitationOrderListGet>(`/investor/invitation/order/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 邀请记录订单列表 buildReqGetOrPostTyped\n * @url /investor/invitation/order/list\n */\nexport interface IInvestorInvitationOrderListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\thisId?: number;\n}",
        "resCode": "/**\n * @description 邀请记录订单列表 buildResAnyTyped\n * @url /investor/invitation/order/list\n */\nexport type OInvestorInvitationOrderListGet = {\n}",
        "resValueCode": "/**\n * @description 邀请记录订单列表 buildResAnyTyped\n * @url /investor/invitation/order/list\n */\nexport const OInvestorInvitationOrderListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/lawyer/list",
        "url": "/investor/lawyer/list",
        "pureUrl": "/investor/lawyer/list",
        "pathReqUrl": "/investor/lawyer/list",
        "method": "get",
        "apiName": "我的律师",
        "key": "InvestorLawyerListGet",
        "fnName": "investorLawyerListGet",
        "requestBaseName": "IInvestorLawyerListGet",
        "requestName": [
            "IInvestorLawyerListGet"
        ],
        "responseBaseName": "OInvestorLawyerListGet",
        "responseName": [
            "OInvestorLawyerListGet"
        ],
        "responseValueName": [
            "OInvestorLawyerListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-当前 1-历史",
                    "type": "number",
                    "id": "voTDJOAuXq",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "QuPjqPIlTR",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的律师 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-当前 1-历史\n * @param {number} params.orderId 可选: 订单ID\n * @return Promise<OInvestorLawyerListGet>\n */\nexport const investorLawyerListGet = async (params?: IInvestorLawyerListGet) => {\n\treturn get<OInvestorLawyerListGet>(`/investor/lawyer/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的律师 buildReqGetOrPostTyped\n * @url /investor/lawyer/list\n */\nexport interface IInvestorLawyerListGet{\n\tstatus?: number; // 状态 0-当前 1-历史\n\torderId?: number; // 订单ID\n}",
        "resCode": "/**\n * @description 我的律师 buildResAnyTyped\n * @url /investor/lawyer/list\n */\nexport type OInvestorLawyerListGet = {\n}",
        "resValueCode": "/**\n * @description 我的律师 buildResAnyTyped\n * @url /investor/lawyer/list\n */\nexport const OInvestorLawyerListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/modifyPassword",
        "url": "/investor/modifyPassword",
        "pureUrl": "/investor/modifyPassword",
        "pathReqUrl": "/investor/modifyPassword",
        "method": "post",
        "apiName": "修改密码",
        "key": "InvestorModifyPasswordPost",
        "fnName": "investorModifyPasswordPost",
        "requestBaseName": "IInvestorModifyPasswordPost",
        "requestName": [
            "IInvestorModifyPasswordPost"
        ],
        "responseBaseName": "OInvestorModifyPasswordPost",
        "responseName": [
            "OInvestorModifyPasswordPost"
        ],
        "responseValueName": [
            "OInvestorModifyPasswordPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "newPassword",
                    "type": "string",
                    "description": "新密码",
                    "oldType": "string"
                },
                {
                    "name": "oldPassword",
                    "type": "string",
                    "description": "旧密码",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改密码 buildFnGetOrPostCode\n * \n * @param {string} params.newPassword 可选: 新密码\n * @param {string} params.oldPassword 可选: 旧密码\n * @return Promise<OInvestorModifyPasswordPost>\n */\nexport const investorModifyPasswordPost = async (params?: IInvestorModifyPasswordPost) => {\n\treturn post<OInvestorModifyPasswordPost>(`/investor/modifyPassword`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改密码 buildReqGetOrPostTyped\n * @url /investor/modifyPassword\n */\nexport interface IInvestorModifyPasswordPost{\n\tnewPassword?: string; // 新密码\n\toldPassword?: string; // 旧密码\n}",
        "resCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /investor/modifyPassword\n */\nexport type OInvestorModifyPasswordPost = {\n}",
        "resValueCode": "/**\n * @description 修改密码 buildResAnyTyped\n * @url /investor/modifyPassword\n */\nexport const OInvestorModifyPasswordPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/notification",
        "url": "/investor/notification",
        "pureUrl": "/investor/notification",
        "pathReqUrl": "/investor/notification",
        "method": "get",
        "apiName": "消息列表",
        "key": "InvestorNotificationGet",
        "fnName": "investorNotificationGet",
        "requestBaseName": "IInvestorNotificationGet",
        "requestName": [
            "IInvestorNotificationGet"
        ],
        "responseBaseName": "OInvestorNotificationGet",
        "responseName": [
            "OInvestorNotificationGet"
        ],
        "responseValueName": [
            "OInvestorNotificationGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "SUBSCRIBE:订阅  SYSTEM:系统消息",
                    "type": "string",
                    "id": "ycvzo4zXoI",
                    "enable": true,
                    "name": "category",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "GCzeuJOh0z",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "KjeEvss7Fh",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 消息列表 buildFnGetOrPostCode\n * \n * @param {string} params.category 可选: SUBSCRIBE:订阅  SYSTEM:系统消息\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorNotificationGet>\n */\nexport const investorNotificationGet = async (params?: IInvestorNotificationGet) => {\n\treturn get<OInvestorNotificationGet>(`/investor/notification`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 消息列表 buildReqGetOrPostTyped\n * @url /investor/notification\n */\nexport interface IInvestorNotificationGet{\n\tcategory?: string; // SUBSCRIBE:订阅  SYSTEM:系统消息\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 消息列表 buildResAnyTyped\n * @url /investor/notification\n */\nexport type OInvestorNotificationGet = {\n}",
        "resValueCode": "/**\n * @description 消息列表 buildResAnyTyped\n * @url /investor/notification\n */\nexport const OInvestorNotificationGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/notification/{x}",
        "url": "/investor/notification/{id}",
        "pureUrl": "/investor/notification/{x}",
        "pathReqUrl": "/investor/notification/${id}",
        "method": "get",
        "apiName": "消息详情",
        "key": "InvestorNotificationIdGet",
        "fnName": "investorNotificationIdGet",
        "requestBaseName": "IInvestorNotificationIdGet",
        "requestName": [
            "IInvestorNotificationIdGet"
        ],
        "responseBaseName": "OInvestorNotificationIdGet",
        "responseName": [
            "OInvestorNotificationIdGet"
        ],
        "responseValueName": [
            "OInvestorNotificationIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "id#0",
                    "name": "id",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 消息详情 buildFnPathCode\n * @path {number id 必填: }\n * @return Promise<OInvestorNotificationIdGet>\n */\nexport const investorNotificationIdGet = async (id: number) => {\n\treturn get<OInvestorNotificationIdGet>(`/investor/notification/${id}`)\n}",
        "reqCode": "/**\n * @description 消息详情 buildReqGetOrPostTyped\n * @url /investor/notification/{id}\n */\nexport interface IInvestorNotificationIdGet{\n}",
        "resCode": "/**\n * @description 消息详情 buildResAnyTyped\n * @url /investor/notification/{x}\n */\nexport type OInvestorNotificationIdGet = {\n}",
        "resValueCode": "/**\n * @description 消息详情 buildResAnyTyped\n * @url /investor/notification/{x}\n */\nexport const OInvestorNotificationIdGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/notification/read",
        "url": "/investor/notification/read",
        "pureUrl": "/investor/notification/read",
        "pathReqUrl": "/investor/notification/read",
        "method": "post",
        "apiName": "标记已读",
        "key": "InvestorNotificationReadPost",
        "fnName": "investorNotificationReadPost",
        "requestBaseName": "IInvestorNotificationReadPost",
        "requestName": [
            "IInvestorNotificationReadPost"
        ],
        "responseBaseName": "OInvestorNotificationReadPost",
        "responseName": [
            "OInvestorNotificationReadPost"
        ],
        "responseValueName": [
            "OInvestorNotificationReadPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "ids",
                    "type": "any[]",
                    "items": {
                        "type": "integer"
                    },
                    "required": true,
                    "oldType": "any[]"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 标记已读 buildFnGetOrPostCode\n * \n * @param {any[]} params.ids 必填: \n * @return Promise<OInvestorNotificationReadPost>\n */\nexport const investorNotificationReadPost = async (params?: IInvestorNotificationReadPost) => {\n\treturn post<OInvestorNotificationReadPost>(`/investor/notification/read`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 标记已读 buildReqGetOrPostTyped\n * @url /investor/notification/read\n */\nexport interface IInvestorNotificationReadPost{\n\tids: any[];\n}",
        "resCode": "/**\n * @description 标记已读 buildResAnyTyped\n * @url /investor/notification/read\n */\nexport type OInvestorNotificationReadPost = {\n}",
        "resValueCode": "/**\n * @description 标记已读 buildResAnyTyped\n * @url /investor/notification/read\n */\nexport const OInvestorNotificationReadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/notification/unread/count",
        "url": "/investor/notification/unread/count",
        "pureUrl": "/investor/notification/unread/count",
        "pathReqUrl": "/investor/notification/unread/count",
        "method": "get",
        "apiName": "获取未读数",
        "key": "InvestorNotificationUnreadCountGet",
        "fnName": "investorNotificationUnreadCountGet",
        "requestBaseName": "IInvestorNotificationUnreadCountGet",
        "requestName": [
            "IInvestorNotificationUnreadCountGet"
        ],
        "responseBaseName": "OInvestorNotificationUnreadCountGet",
        "responseName": [
            "OInvestorNotificationUnreadCountGet"
        ],
        "responseValueName": [
            "OInvestorNotificationUnreadCountGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取未读数 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorNotificationUnreadCountGet>\n */\nexport const investorNotificationUnreadCountGet = async (params?: IInvestorNotificationUnreadCountGet) => {\n\treturn get<OInvestorNotificationUnreadCountGet>(`/investor/notification/unread/count`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取未读数 buildReqGetOrPostTyped\n * @url /investor/notification/unread/count\n */\nexport interface IInvestorNotificationUnreadCountGet{\n}",
        "resCode": "/**\n * @description 获取未读数 buildResAnyTyped\n * @url /investor/notification/unread/count\n */\nexport type OInvestorNotificationUnreadCountGet = {\n}",
        "resValueCode": "/**\n * @description 获取未读数 buildResAnyTyped\n * @url /investor/notification/unread/count\n */\nexport const OInvestorNotificationUnreadCountGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/order/cancel",
        "url": "/investor/order/cancel",
        "pureUrl": "/investor/order/cancel",
        "pathReqUrl": "/investor/order/cancel",
        "method": "post",
        "apiName": "取消订单",
        "key": "InvestorOrderCancelPost",
        "fnName": "investorOrderCancelPost",
        "requestBaseName": "IInvestorOrderCancelPost",
        "requestName": [
            "IInvestorOrderCancelPost"
        ],
        "responseBaseName": "OInvestorOrderCancelPost",
        "responseName": [
            "OInvestorOrderCancelPost"
        ],
        "responseValueName": [
            "OInvestorOrderCancelPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 取消订单 buildFnGetOrPostCode\n * \n * @param {number} params.orderId 必填: 订单ID\n * @return Promise<OInvestorOrderCancelPost>\n */\nexport const investorOrderCancelPost = async (params?: IInvestorOrderCancelPost) => {\n\treturn post<OInvestorOrderCancelPost>(`/investor/order/cancel`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 取消订单 buildReqGetOrPostTyped\n * @url /investor/order/cancel\n */\nexport interface IInvestorOrderCancelPost{\n\torderId: number; // 订单ID\n}",
        "resCode": "/**\n * @description 取消订单 buildResAnyTyped\n * @url /investor/order/cancel\n */\nexport type OInvestorOrderCancelPost = {\n}",
        "resValueCode": "/**\n * @description 取消订单 buildResAnyTyped\n * @url /investor/order/cancel\n */\nexport const OInvestorOrderCancelPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/order/create",
        "url": "/investor/order/create",
        "pureUrl": "/investor/order/create",
        "pathReqUrl": "/investor/order/create",
        "method": "post",
        "apiName": "创建订单",
        "key": "InvestorOrderCreatePost",
        "fnName": "investorOrderCreatePost",
        "requestBaseName": "IInvestorOrderCreatePost",
        "requestName": [
            "IInvestorOrderCreatePost"
        ],
        "responseBaseName": "OInvestorOrderCreatePost",
        "responseName": [
            "OInvestorOrderCreatePost"
        ],
        "responseValueName": [
            "OInvestorOrderCreatePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "productType",
                    "type": "string",
                    "description": "类型 EB-5",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 创建订单 buildFnGetOrPostCode\n * \n * @param {string} params.productType 必填: 类型 EB-5\n * @return Promise<OInvestorOrderCreatePost>\n */\nexport const investorOrderCreatePost = async (params?: IInvestorOrderCreatePost) => {\n\treturn post<OInvestorOrderCreatePost>(`/investor/order/create`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 创建订单 buildReqGetOrPostTyped\n * @url /investor/order/create\n */\nexport interface IInvestorOrderCreatePost{\n\tproductType: string; // 类型 EB-5\n}",
        "resCode": "/**\n * @description 创建订单 buildResAnyTyped\n * @url /investor/order/create\n */\nexport type OInvestorOrderCreatePost = {\n}",
        "resValueCode": "/**\n * @description 创建订单 buildResAnyTyped\n * @url /investor/order/create\n */\nexport const OInvestorOrderCreatePostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/order/list",
        "url": "/investor/order/list",
        "pureUrl": "/investor/order/list",
        "pathReqUrl": "/investor/order/list",
        "method": "get",
        "apiName": "订单列表",
        "key": "InvestorOrderListGet",
        "fnName": "investorOrderListGet",
        "requestBaseName": "IInvestorOrderListGet",
        "requestName": [
            "IInvestorOrderListGet"
        ],
        "responseBaseName": "OInvestorOrderListGet",
        "responseName": [
            "OInvestorOrderListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Hwx6oe4lzR",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "M2TEgp50wC",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单状态 0-进行中 1-已完成 100-已取消",
                    "type": "number",
                    "id": "1eHbzApV4A",
                    "enable": true,
                    "name": "orderStatus",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorOrderListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "orderNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "productName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "productType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "step": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "curStep": {
                        "type": "null",
                        "oldType": "null"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 订单列表 buildFnArrayCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.orderStatus 可选: 订单状态 0-进行中 1-已完成 100-已取消}\n * @return Promise<OInvestorOrderListGetItem>\n */\nexport const investorOrderListGet = async (params?: IInvestorOrderListGet) => {\n\treturn get<OInvestorOrderListGetItem[]>(`/investor/order/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 订单列表 buildReqGetOrPostTyped\n * @url /investor/order/list\n */\nexport interface IInvestorOrderListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\torderStatus?: number; // 订单状态 0-进行中 1-已完成 100-已取消\n}",
        "deleteResponseName": "OInvestorOrderListGet",
        "resCode": "/**\n * @description 订单列表 buildResArrayTyped\n * @url /investor/order/list\n */\nexport type OInvestorOrderListGetItem = {\n\tcreateTime: string;\n\tcurStep: null;\n\tid: number;\n\torderNo: string;\n\tproductName: string;\n\tproductType: string;\n\tstep: number;  \n}",
        "resValueCode": "/**\n * @description 订单列表 buildResArrayTyped\n * @url /investor/order/list\n */\nexport const OInvestorOrderListGetItemValue = {\n\tcreateTime: '',\n\tcurStep: undefined,\n\tid: -1,\n\torderNo: '',\n\tproductName: '',\n\tproductType: '',\n\tstep: -1,\n}"
    },
    {
        "bodyKey": "get_/investor/order/oper/record",
        "url": "/investor/order/oper/record",
        "pureUrl": "/investor/order/oper/record",
        "pathReqUrl": "/investor/order/oper/record",
        "method": "get",
        "apiName": "查询订单操作记录",
        "key": "InvestorOrderOperRecordGet",
        "fnName": "investorOrderOperRecordGet",
        "requestBaseName": "IInvestorOrderOperRecordGet",
        "requestName": [
            "IInvestorOrderOperRecordGet"
        ],
        "responseBaseName": "OInvestorOrderOperRecordGet",
        "responseName": [
            "OInvestorOrderOperRecordGet"
        ],
        "responseValueName": [
            "OInvestorOrderOperRecordGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "对象ID",
                    "type": "number",
                    "id": "HV00JjvRje",
                    "enable": true,
                    "name": "objId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "对象类型",
                    "type": "string",
                    "id": "6I8egZKu2C",
                    "enable": true,
                    "name": "objType",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "组件ID",
                    "type": "number",
                    "id": "f5fQRM4QX0",
                    "enable": true,
                    "name": "componentId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "步骤ID",
                    "type": "number",
                    "id": "SfE3Cko0Qd",
                    "enable": true,
                    "name": "phaseChildId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "阶段ID",
                    "type": "number",
                    "id": "RNHXUy0Dh1",
                    "enable": true,
                    "name": "phaseId",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "NqViiKFZCO",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "uoJHEZRilx",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "0VZFFmvqLB",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询订单操作记录 buildFnGetOrPostCode\n * \n * @param {number} params.objId 可选: 对象ID\n * @param {string} params.objType 可选: 对象类型\n * @param {number} params.componentId 可选: 组件ID\n * @param {number} params.phaseChildId 可选: 步骤ID\n * @param {number} params.phaseId 可选: 阶段ID\n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.orderId 可选: 订单ID\n * @return Promise<OInvestorOrderOperRecordGet>\n */\nexport const investorOrderOperRecordGet = async (params?: IInvestorOrderOperRecordGet) => {\n\treturn get<OInvestorOrderOperRecordGet>(`/investor/order/oper/record`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询订单操作记录 buildReqGetOrPostTyped\n * @url /investor/order/oper/record\n */\nexport interface IInvestorOrderOperRecordGet{\n\tobjId?: number; // 对象ID\n\tobjType?: string; // 对象类型\n\tcomponentId?: number; // 组件ID\n\tphaseChildId?: number; // 步骤ID\n\tphaseId?: number; // 阶段ID\n\tpageNum?: number;\n\tpageSize?: number;\n\torderId?: number; // 订单ID\n}",
        "resCode": "/**\n * @description 查询订单操作记录 buildResAnyTyped\n * @url /investor/order/oper/record\n */\nexport type OInvestorOrderOperRecordGet = {\n}",
        "resValueCode": "/**\n * @description 查询订单操作记录 buildResAnyTyped\n * @url /investor/order/oper/record\n */\nexport const OInvestorOrderOperRecordGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/order/{x}",
        "url": "/investor/order/{orderId}",
        "pureUrl": "/investor/order/{x}",
        "pathReqUrl": "/investor/order/${orderId}",
        "method": "get",
        "apiName": "订单详情",
        "key": "InvestorOrderOrderIdGet",
        "fnName": "investorOrderOrderIdGet",
        "requestBaseName": "IInvestorOrderOrderIdGet",
        "requestName": [
            "IInvestorOrderOrderIdGet"
        ],
        "responseBaseName": "OInvestorOrderOrderIdGet",
        "responseName": [
            "OInvestorOrderOrderIdGet"
        ],
        "responseValueName": [
            "OInvestorOrderOrderIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "orderId#0",
                    "name": "orderId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 订单详情 buildFnPathCode\n * @path {number orderId 必填: }\n * @return Promise<OInvestorOrderOrderIdGet>\n */\nexport const investorOrderOrderIdGet = async (orderId: number) => {\n\treturn get<OInvestorOrderOrderIdGet>(`/investor/order/${orderId}`)\n}",
        "reqCode": "/**\n * @description 订单详情 buildReqGetOrPostTyped\n * @url /investor/order/{orderId}\n */\nexport interface IInvestorOrderOrderIdGet{\n}",
        "resCode": "/**\n * @description 订单详情 buildResAnyTyped\n * @url /investor/order/{x}\n */\nexport type OInvestorOrderOrderIdGet = {\n}",
        "resValueCode": "/**\n * @description 订单详情 buildResAnyTyped\n * @url /investor/order/{x}\n */\nexport const OInvestorOrderOrderIdGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/order/reserve",
        "url": "/investor/order/reserve",
        "pureUrl": "/investor/order/reserve",
        "pathReqUrl": "/investor/order/reserve",
        "method": "get",
        "apiName": "查询我的预约",
        "key": "InvestorOrderReserveGet",
        "fnName": "investorOrderReserveGet",
        "requestBaseName": "IInvestorOrderReserveGet",
        "requestName": [
            "IInvestorOrderReserveGet"
        ],
        "responseBaseName": "OInvestorOrderReserveGet",
        "responseName": [
            "OInvestorOrderReserveGet"
        ],
        "responseValueName": [
            "OInvestorOrderReserveGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "产品类型 ['EB-5','EB-1A','NIW'];",
                    "type": "string",
                    "id": "F57NdfKqJZ",
                    "enable": true,
                    "name": "productType",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询我的预约 buildFnGetOrPostCode\n * \n * @param {string} params.productType 可选: 产品类型 ['EB-5','EB-1A','NIW'];\n * @return Promise<OInvestorOrderReserveGet>\n */\nexport const investorOrderReserveGet = async (params?: IInvestorOrderReserveGet) => {\n\treturn get<OInvestorOrderReserveGet>(`/investor/order/reserve`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询我的预约 buildReqGetOrPostTyped\n * @url /investor/order/reserve\n */\nexport interface IInvestorOrderReserveGet{\n\tproductType?: string; // 产品类型 ['EB-5','EB-1A','NIW'];\n}",
        "resCode": "/**\n * @description 查询我的预约 buildResAnyTyped\n * @url /investor/order/reserve\n */\nexport type OInvestorOrderReserveGet = {\n}",
        "resValueCode": "/**\n * @description 查询我的预约 buildResAnyTyped\n * @url /investor/order/reserve\n */\nexport const OInvestorOrderReserveGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/order/reserve",
        "url": "/investor/order/reserve",
        "pureUrl": "/investor/order/reserve",
        "pathReqUrl": "/investor/order/reserve",
        "method": "post",
        "apiName": "预约项目订单",
        "key": "InvestorOrderReservePost",
        "fnName": "investorOrderReservePost",
        "requestBaseName": "IInvestorOrderReservePost",
        "requestName": [
            "IInvestorOrderReservePost"
        ],
        "responseBaseName": "OInvestorOrderReservePost",
        "responseName": [
            "OInvestorOrderReservePost"
        ],
        "responseValueName": [
            "OInvestorOrderReservePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "productType",
                    "type": "string",
                    "description": "产品类型",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 预约项目订单 buildFnGetOrPostCode\n * \n * @param {string} params.productType 必填: 产品类型\n * @return Promise<OInvestorOrderReservePost>\n */\nexport const investorOrderReservePost = async (params?: IInvestorOrderReservePost) => {\n\treturn post<OInvestorOrderReservePost>(`/investor/order/reserve`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 预约项目订单 buildReqGetOrPostTyped\n * @url /investor/order/reserve\n */\nexport interface IInvestorOrderReservePost{\n\tproductType: string; // 产品类型\n}",
        "resCode": "/**\n * @description 预约项目订单 buildResAnyTyped\n * @url /investor/order/reserve\n */\nexport type OInvestorOrderReservePost = {\n}",
        "resValueCode": "/**\n * @description 预约项目订单 buildResAnyTyped\n * @url /investor/order/reserve\n */\nexport const OInvestorOrderReservePostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/order/sign/callback",
        "url": "/investor/order/sign/callback",
        "pureUrl": "/investor/order/sign/callback",
        "pathReqUrl": "/investor/order/sign/callback",
        "method": "post",
        "apiName": "签署回调",
        "key": "InvestorOrderSignCallbackPost",
        "fnName": "investorOrderSignCallbackPost",
        "requestBaseName": "IInvestorOrderSignCallbackPost",
        "requestName": [
            "IInvestorOrderSignCallbackPost"
        ],
        "responseBaseName": "OInvestorOrderSignCallbackPost",
        "responseName": [
            "OInvestorOrderSignCallbackPost"
        ],
        "responseValueName": [
            "OInvestorOrderSignCallbackPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "componentList",
                    "type": "any[]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "seal,name,birthday,idcard,spouseName,address,phone,childName,email,wechat"
                            },
                            "value": {
                                "type": "string",
                                "description": "对应type 的值"
                            }
                        },
                        "x-apifox-orders": [
                            "type",
                            "value"
                        ],
                        "required": [
                            "type",
                            "value"
                        ]
                    },
                    "description": "签署组件列表",
                    "required": true,
                    "oldType": "any[]"
                },
                {
                    "name": "signNo",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 签署回调 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: \n * @param {any[]} params.componentList 必填: 签署组件列表\n * @param {string} params.signNo 必填: \n * @return Promise<OInvestorOrderSignCallbackPost>\n */\nexport const investorOrderSignCallbackPost = async (params?: IInvestorOrderSignCallbackPost) => {\n\treturn post<OInvestorOrderSignCallbackPost>(`/investor/order/sign/callback`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 签署回调 buildReqGetOrPostTyped\n * @url /investor/order/sign/callback\n */\nexport interface IInvestorOrderSignCallbackPost{\n\tcode: string;\n\tcomponentList: any[]; // 签署组件列表\n\tsignNo: string;\n}",
        "resCode": "/**\n * @description 签署回调 buildResAnyTyped\n * @url /investor/order/sign/callback\n */\nexport type OInvestorOrderSignCallbackPost = {\n}",
        "resValueCode": "/**\n * @description 签署回调 buildResAnyTyped\n * @url /investor/order/sign/callback\n */\nexport const OInvestorOrderSignCallbackPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/order/status/{x}",
        "url": "/investor/order/status/{orderSubId}",
        "pureUrl": "/investor/order/status/{x}",
        "pathReqUrl": "/investor/order/status/${orderSubId}",
        "method": "get",
        "apiName": "查询子订单状态",
        "key": "InvestorOrderStatusOrderSubIdGet",
        "fnName": "investorOrderStatusOrderSubIdGet",
        "requestBaseName": "IInvestorOrderStatusOrderSubIdGet",
        "requestName": [
            "IInvestorOrderStatusOrderSubIdGet"
        ],
        "responseBaseName": "OInvestorOrderStatusOrderSubIdGet",
        "responseName": [
            "OInvestorOrderStatusOrderSubIdGet"
        ],
        "responseValueName": [
            "OInvestorOrderStatusOrderSubIdGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "orderSubId#0",
                    "name": "orderSubId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询子订单状态 buildFnPathCode\n * @path {number orderSubId 必填: }\n * @return Promise<OInvestorOrderStatusOrderSubIdGet>\n */\nexport const investorOrderStatusOrderSubIdGet = async (orderSubId: number) => {\n\treturn get<OInvestorOrderStatusOrderSubIdGet>(`/investor/order/status/${orderSubId}`)\n}",
        "reqCode": "/**\n * @description 查询子订单状态 buildReqGetOrPostTyped\n * @url /investor/order/status/{orderSubId}\n */\nexport interface IInvestorOrderStatusOrderSubIdGet{\n}",
        "resCode": "/**\n * @description 查询子订单状态 buildResAnyTyped\n * @url /investor/order/status/{x}\n */\nexport type OInvestorOrderStatusOrderSubIdGet = {\n}",
        "resValueCode": "/**\n * @description 查询子订单状态 buildResAnyTyped\n * @url /investor/order/status/{x}\n */\nexport const OInvestorOrderStatusOrderSubIdGetValue = {\n}"
    },
    {
        "bodyKey": "put_/investor/order/step",
        "url": "/investor/order/step",
        "pureUrl": "/investor/order/step",
        "pathReqUrl": "/investor/order/step",
        "method": "put",
        "apiName": "完成订单步骤",
        "key": "InvestorOrderStepPut",
        "fnName": "investorOrderStepPut",
        "requestBaseName": "IInvestorOrderStepPut",
        "requestName": [
            "IInvestorOrderStepPut"
        ],
        "responseBaseName": "OInvestorOrderStepPut",
        "responseName": [
            "OInvestorOrderStepPut"
        ],
        "responseValueName": [
            "OInvestorOrderStepPutValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "componentId",
                    "type": "number",
                    "description": "组件ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderId",
                    "type": "number",
                    "description": "订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "orderSubId",
                    "type": "number",
                    "description": "子订单ID",
                    "required": true,
                    "oldType": "number"
                },
                {
                    "name": "valueObject",
                    "type": "any",
                    "properties": {
                        "payMode": {
                            "type": "integer",
                            "description": "支付方式 1-线上 2-线下 一般用于支付组件"
                        },
                        "signUserInfo": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "birthday": {
                                    "type": "string"
                                },
                                "idcard": {
                                    "type": "string"
                                },
                                "spouseName": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "childName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "wechat": {
                                    "type": "string"
                                }
                            },
                            "x-apifox-orders": [
                                "name",
                                "birthday",
                                "idcard",
                                "spouseName",
                                "address",
                                "phone",
                                "childName",
                                "email",
                                "wechat"
                            ],
                            "description": "签署表单 一般用于签署组件"
                        },
                        "fileList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "fileUrl": {
                                        "type": "string"
                                    },
                                    "fileName": {
                                        "type": "string"
                                    }
                                },
                                "x-apifox-orders": [
                                    "fileUrl",
                                    "fileName"
                                ],
                                "required": [
                                    "fileUrl",
                                    "fileName"
                                ]
                            },
                            "description": "文件地址 一般用于文件组件"
                        }
                    },
                    "x-apifox-orders": [
                        "fileList",
                        "payMode",
                        "signUserInfo"
                    ],
                    "required": true,
                    "oldType": "any"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 完成订单步骤 buildFnGetOrPostCode\n * \n * @param {number} params.componentId 必填: 组件ID\n * @param {number} params.orderId 必填: 订单ID\n * @param {number} params.orderSubId 必填: 子订单ID\n * @param {any} params.valueObject 必填: \n * @return Promise<OInvestorOrderStepPut>\n */\nexport const investorOrderStepPut = async (params?: IInvestorOrderStepPut) => {\n\treturn put<OInvestorOrderStepPut>(`/investor/order/step`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 完成订单步骤 buildReqGetOrPostTyped\n * @url /investor/order/step\n */\nexport interface IInvestorOrderStepPut{\n\tcomponentId: number; // 组件ID\n\torderId: number; // 订单ID\n\torderSubId: number; // 子订单ID\n\tvalueObject: any;\n}",
        "resCode": "/**\n * @description 完成订单步骤 buildResAnyTyped\n * @url /investor/order/step\n */\nexport type OInvestorOrderStepPut = {\n}",
        "resValueCode": "/**\n * @description 完成订单步骤 buildResAnyTyped\n * @url /investor/order/step\n */\nexport const OInvestorOrderStepPutValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/product/relevant/perms",
        "url": "/investor/product/relevant/perms",
        "pureUrl": "/investor/product/relevant/perms",
        "pathReqUrl": "/investor/product/relevant/perms",
        "method": "post",
        "apiName": "申请产品相关内容查看权限",
        "key": "InvestorProductRelevantPermsPost",
        "fnName": "investorProductRelevantPermsPost",
        "requestBaseName": "IInvestorProductRelevantPermsPost",
        "requestName": [
            "IInvestorProductRelevantPermsPost"
        ],
        "responseBaseName": "OInvestorProductRelevantPermsPost",
        "responseName": [
            "OInvestorProductRelevantPermsPost"
        ],
        "responseValueName": [
            "OInvestorProductRelevantPermsPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "内容ID",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 申请产品相关内容查看权限 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 内容ID\n * @return Promise<OInvestorProductRelevantPermsPost>\n */\nexport const investorProductRelevantPermsPost = async (params?: IInvestorProductRelevantPermsPost) => {\n\treturn post<OInvestorProductRelevantPermsPost>(`/investor/product/relevant/perms`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 申请产品相关内容查看权限 buildReqGetOrPostTyped\n * @url /investor/product/relevant/perms\n */\nexport interface IInvestorProductRelevantPermsPost{\n\tid: number; // 内容ID\n}",
        "resCode": "/**\n * @description 申请产品相关内容查看权限 buildResAnyTyped\n * @url /investor/product/relevant/perms\n */\nexport type OInvestorProductRelevantPermsPost = {\n}",
        "resValueCode": "/**\n * @description 申请产品相关内容查看权限 buildResAnyTyped\n * @url /investor/product/relevant/perms\n */\nexport const OInvestorProductRelevantPermsPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/profile/detail",
        "url": "/investor/profile/detail",
        "pureUrl": "/investor/profile/detail",
        "pathReqUrl": "/investor/profile/detail",
        "method": "get",
        "apiName": "获取个人资料",
        "key": "InvestorProfileDetailGet",
        "fnName": "investorProfileDetailGet",
        "requestBaseName": "IInvestorProfileDetailGet",
        "requestName": [
            "IInvestorProfileDetailGet"
        ],
        "responseBaseName": "OInvestorProfileDetailGet",
        "responseName": [
            "OInvestorProfileDetailGet"
        ],
        "responseValueName": [
            "OInvestorProfileDetailGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取个人资料 buildFnGetOrPostCode\n * \n * @return Promise<OInvestorProfileDetailGet>\n */\nexport const investorProfileDetailGet = async (params?: IInvestorProfileDetailGet) => {\n\treturn get<OInvestorProfileDetailGet>(`/investor/profile/detail`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取个人资料 buildReqGetOrPostTyped\n * @url /investor/profile/detail\n */\nexport interface IInvestorProfileDetailGet{\n}",
        "resCode": "/**\n * @description 获取个人资料 buildResAnyTyped\n * @url /investor/profile/detail\n */\nexport type OInvestorProfileDetailGet = {\n}",
        "resValueCode": "/**\n * @description 获取个人资料 buildResAnyTyped\n * @url /investor/profile/detail\n */\nexport const OInvestorProfileDetailGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/profile/modify",
        "url": "/investor/profile/modify",
        "pureUrl": "/investor/profile/modify",
        "pathReqUrl": "/investor/profile/modify",
        "method": "post",
        "apiName": "修改个人资料",
        "key": "InvestorProfileModifyPost",
        "fnName": "investorProfileModifyPost",
        "requestBaseName": "IInvestorProfileModifyPost",
        "requestName": [
            "IInvestorProfileModifyPost"
        ],
        "responseBaseName": "OInvestorProfileModifyPost",
        "responseName": [
            "OInvestorProfileModifyPost"
        ],
        "responseValueName": [
            "OInvestorProfileModifyPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "birthday",
                    "type": "string",
                    "description": "出生日期",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "城市",
                    "oldType": "string"
                },
                {
                    "name": "country",
                    "type": "string",
                    "description": "国家",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "currentAddress",
                    "type": "string",
                    "description": "当前地址",
                    "oldType": "string"
                },
                {
                    "name": "firstName",
                    "type": "string",
                    "description": "名 微信返回的nickname保存至此字段",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "gender",
                    "type": "number",
                    "description": "0:male;1:female,2:unknown",
                    "oldType": "number"
                },
                {
                    "name": "lastName",
                    "type": "string",
                    "description": "姓",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "phoneNumber",
                    "type": "string",
                    "description": "手机号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "province",
                    "type": "string",
                    "description": "洲/省",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "zipCode",
                    "type": "string",
                    "description": "邮政编码",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 修改个人资料 buildFnGetOrPostCode\n * \n * @param {string} params.birthday 必填: 出生日期\n * @param {string} params.city 可选: 城市\n * @param {string} params.country 必填: 国家\n * @param {string} params.currentAddress 可选: 当前地址\n * @param {string} params.firstName 必填: 名 微信返回的nickname保存至此字段\n * @param {number} params.gender 可选: 0:male;1:female,2:unknown\n * @param {string} params.lastName 必填: 姓\n * @param {string} params.phoneNumber 必填: 手机号\n * @param {string} params.province 必填: 洲/省\n * @param {string} params.zipCode 可选: 邮政编码\n * @return Promise<OInvestorProfileModifyPost>\n */\nexport const investorProfileModifyPost = async (params?: IInvestorProfileModifyPost) => {\n\treturn post<OInvestorProfileModifyPost>(`/investor/profile/modify`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 修改个人资料 buildReqGetOrPostTyped\n * @url /investor/profile/modify\n */\nexport interface IInvestorProfileModifyPost{\n\tbirthday: string; // 出生日期\n\tcity?: string; // 城市\n\tcountry: string; // 国家\n\tcurrentAddress?: string; // 当前地址\n\tfirstName: string; // 名 微信返回的nickname保存至此字段\n\tgender?: number; // 0:male;1:female,2:unknown\n\tlastName: string; // 姓\n\tphoneNumber: string; // 手机号\n\tprovince: string; // 洲/省\n\tzipCode?: string; // 邮政编码\n}",
        "resCode": "/**\n * @description 修改个人资料 buildResAnyTyped\n * @url /investor/profile/modify\n */\nexport type OInvestorProfileModifyPost = {\n}",
        "resValueCode": "/**\n * @description 修改个人资料 buildResAnyTyped\n * @url /investor/profile/modify\n */\nexport const OInvestorProfileModifyPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/seal/create",
        "url": "/investor/seal/create",
        "pureUrl": "/investor/seal/create",
        "pathReqUrl": "/investor/seal/create",
        "method": "post",
        "apiName": "添加新印章",
        "key": "InvestorSealCreatePost",
        "fnName": "investorSealCreatePost",
        "requestBaseName": "IInvestorSealCreatePost",
        "requestName": [
            "IInvestorSealCreatePost"
        ],
        "responseBaseName": "OInvestorSealCreatePost",
        "responseName": [
            "OInvestorSealCreatePost"
        ],
        "responseValueName": [
            "OInvestorSealCreatePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "holder",
                    "type": "string",
                    "description": "印章所有人",
                    "oldType": "string"
                },
                {
                    "name": "imgUrl",
                    "type": "string",
                    "description": "印章图片url",
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 添加新印章 buildFnGetOrPostCode\n * \n * @param {string} params.holder 可选: 印章所有人\n * @param {string} params.imgUrl 可选: 印章图片url\n * @return Promise<OInvestorSealCreatePost>\n */\nexport const investorSealCreatePost = async (params?: IInvestorSealCreatePost) => {\n\treturn post<OInvestorSealCreatePost>(`/investor/seal/create`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 添加新印章 buildReqGetOrPostTyped\n * @url /investor/seal/create\n */\nexport interface IInvestorSealCreatePost{\n\tholder?: string; // 印章所有人\n\timgUrl?: string; // 印章图片url\n}",
        "resCode": "/**\n * @description 添加新印章 buildResAnyTyped\n * @url /investor/seal/create\n */\nexport type OInvestorSealCreatePost = {\n}",
        "resValueCode": "/**\n * @description 添加新印章 buildResAnyTyped\n * @url /investor/seal/create\n */\nexport const OInvestorSealCreatePostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/seal/list",
        "url": "/investor/seal/list",
        "pureUrl": "/investor/seal/list",
        "pathReqUrl": "/investor/seal/list",
        "method": "get",
        "apiName": "获取印章列表",
        "key": "InvestorSealListGet",
        "fnName": "investorSealListGet",
        "requestBaseName": "IInvestorSealListGet",
        "requestName": [
            "IInvestorSealListGet"
        ],
        "responseBaseName": "OInvestorSealListGet",
        "responseName": [
            "OInvestorSealListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorSealListGetItem",
            "description": "返回数据",
            "items": {},
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取印章列表 buildFnArrayCode\n * \n * @return Promise<OInvestorSealListGetItem>\n */\nexport const investorSealListGet = async (params?: IInvestorSealListGet) => {\n\treturn get<OInvestorSealListGetItem[]>(`/investor/seal/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取印章列表 buildReqGetOrPostTyped\n * @url /investor/seal/list\n */\nexport interface IInvestorSealListGet{\n}",
        "deleteResponseName": "OInvestorSealListGet",
        "resCode": "/**\n * @description 获取印章列表 buildResArrayTyped\n * @url /investor/seal/list\n */\nexport type OInvestorSealListGetItem = {  \n}",
        "resValueCode": "/**\n * @description 获取印章列表 buildResArrayTyped\n * @url /investor/seal/list\n */\nexport const OInvestorSealListGetItemValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/seal/record/info",
        "url": "/investor/seal/record/info",
        "pureUrl": "/investor/seal/record/info",
        "pathReqUrl": "/investor/seal/record/info",
        "method": "post",
        "apiName": "查看印章",
        "key": "InvestorSealRecordInfoPost",
        "fnName": "investorSealRecordInfoPost",
        "requestBaseName": "IInvestorSealRecordInfoPost",
        "requestName": [
            "IInvestorSealRecordInfoPost"
        ],
        "responseBaseName": "OInvestorSealRecordInfoPost",
        "responseName": [
            "OInvestorSealRecordInfoPost"
        ],
        "responseValueName": [
            "OInvestorSealRecordInfoPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "印章id",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "properties": {},
            "type": "any"
        },
        "fnCode": "/**\n * @description 查看印章 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 印章id\n * @return Promise<OInvestorSealRecordInfoPost>\n */\nexport const investorSealRecordInfoPost = async (params?: IInvestorSealRecordInfoPost) => {\n\treturn post<OInvestorSealRecordInfoPost>(`/investor/seal/record/info`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 查看印章 buildReqGetOrPostTyped\n * @url /investor/seal/record/info\n */\nexport interface IInvestorSealRecordInfoPost{\n\tid: number; // 印章id\n}",
        "resCode": "/**\n * @description 查看印章 buildResAnyTyped\n * @url /investor/seal/record/info\n */\nexport type OInvestorSealRecordInfoPost = {\n}",
        "resValueCode": "/**\n * @description 查看印章 buildResAnyTyped\n * @url /investor/seal/record/info\n */\nexport const OInvestorSealRecordInfoPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/seal/record/withdraw",
        "url": "/investor/seal/record/withdraw",
        "pureUrl": "/investor/seal/record/withdraw",
        "pathReqUrl": "/investor/seal/record/withdraw",
        "method": "post",
        "apiName": "吊销印章",
        "key": "InvestorSealRecordWithdrawPost",
        "fnName": "investorSealRecordWithdrawPost",
        "requestBaseName": "IInvestorSealRecordWithdrawPost",
        "requestName": [
            "IInvestorSealRecordWithdrawPost"
        ],
        "responseBaseName": "OInvestorSealRecordWithdrawPost",
        "responseName": [
            "OInvestorSealRecordWithdrawPost"
        ],
        "responseValueName": [
            "OInvestorSealRecordWithdrawPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "id",
                    "type": "number",
                    "description": "印章id",
                    "required": true,
                    "oldType": "number"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 吊销印章 buildFnGetOrPostCode\n * \n * @param {number} params.id 必填: 印章id\n * @return Promise<OInvestorSealRecordWithdrawPost>\n */\nexport const investorSealRecordWithdrawPost = async (params?: IInvestorSealRecordWithdrawPost) => {\n\treturn post<OInvestorSealRecordWithdrawPost>(`/investor/seal/record/withdraw`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 吊销印章 buildReqGetOrPostTyped\n * @url /investor/seal/record/withdraw\n */\nexport interface IInvestorSealRecordWithdrawPost{\n\tid: number; // 印章id\n}",
        "resCode": "/**\n * @description 吊销印章 buildResAnyTyped\n * @url /investor/seal/record/withdraw\n */\nexport type OInvestorSealRecordWithdrawPost = {\n}",
        "resValueCode": "/**\n * @description 吊销印章 buildResAnyTyped\n * @url /investor/seal/record/withdraw\n */\nexport const OInvestorSealRecordWithdrawPostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/service/list",
        "url": "/investor/service/list",
        "pureUrl": "/investor/service/list",
        "pathReqUrl": "/investor/service/list",
        "method": "get",
        "apiName": "我的服务",
        "key": "InvestorServiceListGet",
        "fnName": "investorServiceListGet",
        "requestBaseName": "IInvestorServiceListGet",
        "requestName": [
            "IInvestorServiceListGet"
        ],
        "responseBaseName": "OInvestorServiceListGet",
        "responseName": [
            "OInvestorServiceListGet"
        ],
        "responseValueName": [
            "OInvestorServiceListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "状态 0-当前 1-历史",
                    "type": "number",
                    "id": "voTDJOAuXq",
                    "enable": true,
                    "name": "status",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单id",
                    "type": "number",
                    "id": "wMLKagGLrP",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 我的服务 buildFnGetOrPostCode\n * \n * @param {number} params.status 可选: 状态 0-当前 1-历史\n * @param {number} params.orderId 可选: 订单id\n * @return Promise<OInvestorServiceListGet>\n */\nexport const investorServiceListGet = async (params?: IInvestorServiceListGet) => {\n\treturn get<OInvestorServiceListGet>(`/investor/service/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 我的服务 buildReqGetOrPostTyped\n * @url /investor/service/list\n */\nexport interface IInvestorServiceListGet{\n\tstatus?: number; // 状态 0-当前 1-历史\n\torderId?: number; // 订单id\n}",
        "resCode": "/**\n * @description 我的服务 buildResAnyTyped\n * @url /investor/service/list\n */\nexport type OInvestorServiceListGet = {\n}",
        "resValueCode": "/**\n * @description 我的服务 buildResAnyTyped\n * @url /investor/service/list\n */\nexport const OInvestorServiceListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/subscribe/info",
        "url": "/investor/subscribe/info",
        "pureUrl": "/investor/subscribe/info",
        "pathReqUrl": "/investor/subscribe/info",
        "method": "get",
        "apiName": "订阅数据",
        "key": "InvestorSubscribeInfoGet",
        "fnName": "investorSubscribeInfoGet",
        "requestBaseName": "IInvestorSubscribeInfoGet",
        "requestName": [
            "IInvestorSubscribeInfoGet"
        ],
        "responseBaseName": "OInvestorSubscribeInfoGet",
        "responseName": [
            "OInvestorSubscribeInfoGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorSubscribeInfoGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "nodeKey": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "nodeText": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "desc": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "isSubscribe": {
                        "type": "number",
                        "oldType": "integer"
                    }
                },
                "required": [
                    "nodeKey",
                    "nodeText",
                    "desc",
                    "isSubscribe"
                ]
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 订阅数据 buildFnArrayCode\n * \n * @return Promise<OInvestorSubscribeInfoGetItem>\n */\nexport const investorSubscribeInfoGet = async (params?: IInvestorSubscribeInfoGet) => {\n\treturn get<OInvestorSubscribeInfoGetItem[]>(`/investor/subscribe/info`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 订阅数据 buildReqGetOrPostTyped\n * @url /investor/subscribe/info\n */\nexport interface IInvestorSubscribeInfoGet{\n}",
        "deleteResponseName": "OInvestorSubscribeInfoGet",
        "resCode": "/**\n * @description 订阅数据 buildResArrayTyped\n * @url /investor/subscribe/info\n */\nexport type OInvestorSubscribeInfoGetItem = {\n\tdesc: string;\n\tisSubscribe: number;\n\tnodeKey: string;\n\tnodeText: string;  \n}",
        "resValueCode": "/**\n * @description 订阅数据 buildResArrayTyped\n * @url /investor/subscribe/info\n */\nexport const OInvestorSubscribeInfoGetItemValue = {\n\tdesc: '',\n\tisSubscribe: -1,\n\tnodeKey: '',\n\tnodeText: '',\n}"
    },
    {
        "bodyKey": "post_/investor/subscribe",
        "url": "/investor/subscribe",
        "pureUrl": "/investor/subscribe",
        "pathReqUrl": "/investor/subscribe",
        "method": "post",
        "apiName": "订阅",
        "key": "InvestorSubscribePost",
        "fnName": "investorSubscribePost",
        "requestBaseName": "IInvestorSubscribePost",
        "requestName": [
            "IInvestorSubscribePost"
        ],
        "responseBaseName": "OInvestorSubscribePost",
        "responseName": [
            "OInvestorSubscribePost"
        ],
        "responseValueName": [
            "OInvestorSubscribePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "subscribeNode",
                    "type": "string",
                    "description": "订阅节点 （订阅数据里的nodeKey）",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 订阅 buildFnGetOrPostCode\n * \n * @param {string} params.subscribeNode 必填: 订阅节点 （订阅数据里的nodeKey）\n * @return Promise<OInvestorSubscribePost>\n */\nexport const investorSubscribePost = async (params?: IInvestorSubscribePost) => {\n\treturn post<OInvestorSubscribePost>(`/investor/subscribe`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 订阅 buildReqGetOrPostTyped\n * @url /investor/subscribe\n */\nexport interface IInvestorSubscribePost{\n\tsubscribeNode: string; // 订阅节点 （订阅数据里的nodeKey）\n}",
        "resCode": "/**\n * @description 订阅 buildResAnyTyped\n * @url /investor/subscribe\n */\nexport type OInvestorSubscribePost = {\n}",
        "resValueCode": "/**\n * @description 订阅 buildResAnyTyped\n * @url /investor/subscribe\n */\nexport const OInvestorSubscribePostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/todo/list",
        "url": "/investor/todo/list",
        "pureUrl": "/investor/todo/list",
        "pathReqUrl": "/investor/todo/list",
        "method": "get",
        "apiName": "查询待办列表",
        "key": "InvestorTodoListGet",
        "fnName": "investorTodoListGet",
        "requestBaseName": "IInvestorTodoListGet",
        "requestName": [
            "IInvestorTodoListGet"
        ],
        "responseBaseName": "OInvestorTodoListGet",
        "responseName": [
            "OInvestorTodoListGet"
        ],
        "responseValueName": [
            "OInvestorTodoListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "string",
                    "id": "qPhcLkpEfO",
                    "enable": true,
                    "name": "title",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Js4oAcjBlW",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "BQYqUnorbD",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 查询待办列表 buildFnGetOrPostCode\n * \n * @param {string} params.title 可选: \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorTodoListGet>\n */\nexport const investorTodoListGet = async (params?: IInvestorTodoListGet) => {\n\treturn get<OInvestorTodoListGet>(`/investor/todo/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 查询待办列表 buildReqGetOrPostTyped\n * @url /investor/todo/list\n */\nexport interface IInvestorTodoListGet{\n\ttitle?: string;\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 查询待办列表 buildResAnyTyped\n * @url /investor/todo/list\n */\nexport type OInvestorTodoListGet = {\n}",
        "resValueCode": "/**\n * @description 查询待办列表 buildResAnyTyped\n * @url /investor/todo/list\n */\nexport const OInvestorTodoListGetValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/unbindEmail",
        "url": "/investor/unbindEmail",
        "pureUrl": "/investor/unbindEmail",
        "pathReqUrl": "/investor/unbindEmail",
        "method": "post",
        "apiName": "解绑邮箱,需先关闭2FA",
        "key": "InvestorUnbindEmailPost",
        "fnName": "investorUnbindEmailPost",
        "requestBaseName": "IInvestorUnbindEmailPost",
        "requestName": [
            "IInvestorUnbindEmailPost"
        ],
        "responseBaseName": "OInvestorUnbindEmailPost",
        "responseName": [
            "OInvestorUnbindEmailPost"
        ],
        "responseValueName": [
            "OInvestorUnbindEmailPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "验证码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 解绑邮箱,需先关闭2FA buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: 验证码\n * @return Promise<OInvestorUnbindEmailPost>\n */\nexport const investorUnbindEmailPost = async (params?: IInvestorUnbindEmailPost) => {\n\treturn post<OInvestorUnbindEmailPost>(`/investor/unbindEmail`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 解绑邮箱,需先关闭2FA buildReqGetOrPostTyped\n * @url /investor/unbindEmail\n */\nexport interface IInvestorUnbindEmailPost{\n\tcode: string; // 验证码\n}",
        "resCode": "/**\n * @description 解绑邮箱,需先关闭2FA buildResAnyTyped\n * @url /investor/unbindEmail\n */\nexport type OInvestorUnbindEmailPost = {\n}",
        "resValueCode": "/**\n * @description 解绑邮箱,需先关闭2FA buildResAnyTyped\n * @url /investor/unbindEmail\n */\nexport const OInvestorUnbindEmailPostValue = {\n}"
    },
    {
        "bodyKey": "post_/investor/unsubscribe",
        "url": "/investor/unsubscribe",
        "pureUrl": "/investor/unsubscribe",
        "pathReqUrl": "/investor/unsubscribe",
        "method": "post",
        "apiName": "取消订阅",
        "key": "InvestorUnsubscribePost",
        "fnName": "investorUnsubscribePost",
        "requestBaseName": "IInvestorUnsubscribePost",
        "requestName": [
            "IInvestorUnsubscribePost"
        ],
        "responseBaseName": "OInvestorUnsubscribePost",
        "responseName": [
            "OInvestorUnsubscribePost"
        ],
        "responseValueName": [
            "OInvestorUnsubscribePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "subscribeNode",
                    "type": "string",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 取消订阅 buildFnGetOrPostCode\n * \n * @param {string} params.subscribeNode 必填: \n * @return Promise<OInvestorUnsubscribePost>\n */\nexport const investorUnsubscribePost = async (params?: IInvestorUnsubscribePost) => {\n\treturn post<OInvestorUnsubscribePost>(`/investor/unsubscribe`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 取消订阅 buildReqGetOrPostTyped\n * @url /investor/unsubscribe\n */\nexport interface IInvestorUnsubscribePost{\n\tsubscribeNode: string;\n}",
        "resCode": "/**\n * @description 取消订阅 buildResAnyTyped\n * @url /investor/unsubscribe\n */\nexport type OInvestorUnsubscribePost = {\n}",
        "resValueCode": "/**\n * @description 取消订阅 buildResAnyTyped\n * @url /investor/unsubscribe\n */\nexport const OInvestorUnsubscribePostValue = {\n}"
    },
    {
        "bodyKey": "get_/investor/wallet/deposit/list",
        "url": "/investor/wallet/deposit/list",
        "pureUrl": "/investor/wallet/deposit/list",
        "pathReqUrl": "/investor/wallet/deposit/list",
        "method": "get",
        "apiName": "投资记录",
        "key": "InvestorWalletDepositListGet",
        "fnName": "investorWalletDepositListGet",
        "requestBaseName": "IInvestorWalletDepositListGet",
        "requestName": [
            "IInvestorWalletDepositListGet"
        ],
        "responseBaseName": "OInvestorWalletDepositListGet",
        "responseName": [
            "OInvestorWalletDepositListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "fBHv18D26K",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "JZG7FbUlGe",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "DKtwazv5A4",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorWalletDepositListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "afterAmount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "amount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "beforeAmount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "channelType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "depositAccountId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "depositNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorEmail": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorPhone": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "status": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "walletId": {
                        "type": "number",
                        "oldType": "integer"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 投资记录 buildFnArrayCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.orderId 可选: 订单ID}\n * @return Promise<OInvestorWalletDepositListGetItem>\n */\nexport const investorWalletDepositListGet = async (params?: IInvestorWalletDepositListGet) => {\n\treturn get<OInvestorWalletDepositListGetItem[]>(`/investor/wallet/deposit/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 投资记录 buildReqGetOrPostTyped\n * @url /investor/wallet/deposit/list\n */\nexport interface IInvestorWalletDepositListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\torderId?: number; // 订单ID\n}",
        "deleteResponseName": "OInvestorWalletDepositListGet",
        "resCode": "/**\n * @description 投资记录 buildResArrayTyped\n * @url /investor/wallet/deposit/list\n */\nexport type OInvestorWalletDepositListGetItem = {\n\tafterAmount: number;\n\tamount: number;\n\tbeforeAmount: number;\n\tchannelType: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tdepositAccountId: number;\n\tdepositNo: string;\n\tid: number;\n\toperatorEmail: string;\n\toperatorId: number;\n\toperatorName: string;\n\toperatorNo: string;\n\toperatorPhone: string;\n\toperatorType: string;\n\tremark: string;\n\tstatus: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;\n\twalletId: number;  \n}",
        "resValueCode": "/**\n * @description 投资记录 buildResArrayTyped\n * @url /investor/wallet/deposit/list\n */\nexport const OInvestorWalletDepositListGetItemValue = {\n\tafterAmount: -1,\n\tamount: -1,\n\tbeforeAmount: -1,\n\tchannelType: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tdepositAccountId: -1,\n\tdepositNo: '',\n\tid: -1,\n\toperatorEmail: '',\n\toperatorId: -1,\n\toperatorName: '',\n\toperatorNo: '',\n\toperatorPhone: '',\n\toperatorType: '',\n\tremark: '',\n\tstatus: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n\twalletId: -1,\n}"
    },
    {
        "bodyKey": "get_/investor/wallet/info",
        "url": "/investor/wallet/info",
        "pureUrl": "/investor/wallet/info",
        "pathReqUrl": "/investor/wallet/info",
        "method": "get",
        "apiName": "钱包详情",
        "key": "InvestorWalletInfoGet",
        "fnName": "investorWalletInfoGet",
        "requestBaseName": "IInvestorWalletInfoGet",
        "requestName": [
            "IInvestorWalletInfoGet"
        ],
        "responseBaseName": "OInvestorWalletInfoGet",
        "responseName": [
            "OInvestorWalletInfoGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "w16EqUfVQO",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorWalletInfoGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "bizNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "frozen": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "invested": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "investorName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "investorNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "issuedToBroker": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "issuedToFundraiser": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "issuedToLawyer": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "productId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "productType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "walletNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "walletType": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 钱包详情 buildFnArrayCode\n * \n * @param {number} params.orderId 可选: 订单ID}\n * @return Promise<OInvestorWalletInfoGetItem>\n */\nexport const investorWalletInfoGet = async (params?: IInvestorWalletInfoGet) => {\n\treturn get<OInvestorWalletInfoGetItem[]>(`/investor/wallet/info`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 钱包详情 buildReqGetOrPostTyped\n * @url /investor/wallet/info\n */\nexport interface IInvestorWalletInfoGet{\n\torderId?: number; // 订单ID\n}",
        "deleteResponseName": "OInvestorWalletInfoGet",
        "resCode": "/**\n * @description 钱包详情 buildResArrayTyped\n * @url /investor/wallet/info\n */\nexport type OInvestorWalletInfoGetItem = {\n\tavailable: number;\n\tbizNo: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tfrozen: number;\n\tid: number;\n\tinvested: number;\n\tinvestorName: string;\n\tinvestorNo: string;\n\tissuedToBroker: number;\n\tissuedToFundraiser: number;\n\tissuedToLawyer: number;\n\toperatorId: number;\n\toperatorType: string;\n\tproductId: number;\n\tproductName: string;\n\tproductType: string;\n\tremark: string;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;\n\twalletNo: string;\n\twalletType: string;  \n}",
        "resValueCode": "/**\n * @description 钱包详情 buildResArrayTyped\n * @url /investor/wallet/info\n */\nexport const OInvestorWalletInfoGetItemValue = {\n\tavailable: -1,\n\tbizNo: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tfrozen: -1,\n\tid: -1,\n\tinvested: -1,\n\tinvestorName: '',\n\tinvestorNo: '',\n\tissuedToBroker: -1,\n\tissuedToFundraiser: -1,\n\tissuedToLawyer: -1,\n\toperatorId: -1,\n\toperatorType: '',\n\tproductId: -1,\n\tproductName: '',\n\tproductType: '',\n\tremark: '',\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n\twalletNo: '',\n\twalletType: '',\n}"
    },
    {
        "bodyKey": "get_/investor/wallet/orderpay/list",
        "url": "/investor/wallet/orderpay/list",
        "pureUrl": "/investor/wallet/orderpay/list",
        "pathReqUrl": "/investor/wallet/orderpay/list",
        "method": "get",
        "apiName": "订单支付记录",
        "key": "InvestorWalletOrderpayListGet",
        "fnName": "investorWalletOrderpayListGet",
        "requestBaseName": "IInvestorWalletOrderpayListGet",
        "requestName": [
            "IInvestorWalletOrderpayListGet"
        ],
        "responseBaseName": "OInvestorWalletOrderpayListGet",
        "responseName": [
            "OInvestorWalletOrderpayListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "Gc2KX6CA8X",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "h4fHCbVNP2",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "订单ID",
                    "type": "number",
                    "id": "UFHHMmclzT",
                    "enable": true,
                    "name": "orderId",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OInvestorWalletOrderpayListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "afterAmount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "amount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "beforeAmount": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "channelType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorEmail": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "operatorName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorNo": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorPhone": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "operatorType": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "status": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "walletId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "withdrawAccount": {
                        "type": "any",
                        "properties": {
                            "accountNo": {
                                "type": "string"
                            },
                            "bankAddress": {
                                "type": "string"
                            },
                            "bankName": {
                                "type": "string"
                            },
                            "bankNumber": {
                                "type": "string"
                            },
                            "bankUserName": {
                                "type": "string"
                            },
                            "createBy": {
                                "type": "string"
                            },
                            "createById": {
                                "type": "integer"
                            },
                            "createTime": {
                                "type": "string"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "operatorId": {
                                "type": "integer"
                            },
                            "operatorType": {
                                "type": "string"
                            },
                            "remark": {
                                "type": "string"
                            },
                            "status": {
                                "type": "integer"
                            },
                            "swiftCode": {
                                "type": "string"
                            },
                            "updateBy": {
                                "type": "string"
                            },
                            "updateById": {
                                "type": "integer"
                            },
                            "updateTime": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "accountNo",
                            "bankAddress",
                            "bankName",
                            "bankNumber",
                            "bankUserName",
                            "createBy",
                            "createById",
                            "createTime",
                            "id",
                            "operatorId",
                            "operatorType",
                            "remark",
                            "status",
                            "swiftCode",
                            "updateBy",
                            "updateById",
                            "updateTime"
                        ],
                        "x-apifox-orders": [
                            "accountNo",
                            "bankAddress",
                            "bankName",
                            "bankNumber",
                            "bankUserName",
                            "createBy",
                            "createById",
                            "createTime",
                            "id",
                            "operatorId",
                            "operatorType",
                            "remark",
                            "status",
                            "swiftCode",
                            "updateBy",
                            "updateById",
                            "updateTime"
                        ],
                        "oldType": "object"
                    },
                    "withdrawAccountId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "withdrawNo": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 订单支付记录 buildFnArrayCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @param {number} params.orderId 可选: 订单ID}\n * @return Promise<OInvestorWalletOrderpayListGetItem>\n */\nexport const investorWalletOrderpayListGet = async (params?: IInvestorWalletOrderpayListGet) => {\n\treturn get<OInvestorWalletOrderpayListGetItem[]>(`/investor/wallet/orderpay/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 订单支付记录 buildReqGetOrPostTyped\n * @url /investor/wallet/orderpay/list\n */\nexport interface IInvestorWalletOrderpayListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n\torderId?: number; // 订单ID\n}",
        "deleteResponseName": "OInvestorWalletOrderpayListGet",
        "resCode": "/**\n * @description 订单支付记录 buildResArrayTyped\n * @url /investor/wallet/orderpay/list\n */\nexport type OInvestorWalletOrderpayListGetItem = {\n\tafterAmount: number;\n\tamount: number;\n\tbeforeAmount: number;\n\tchannelType: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tid: number;\n\toperatorEmail: string;\n\toperatorId: number;\n\toperatorName: string;\n\toperatorNo: string;\n\toperatorPhone: string;\n\toperatorType: string;\n\tremark: string;\n\tstatus: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;\n\twalletId: number;\n\twithdrawAccount: any;\n\twithdrawAccountId: number;\n\twithdrawNo: string;  \n}",
        "resValueCode": "/**\n * @description 订单支付记录 buildResArrayTyped\n * @url /investor/wallet/orderpay/list\n */\nexport const OInvestorWalletOrderpayListGetItemValue = {\n\tafterAmount: -1,\n\tamount: -1,\n\tbeforeAmount: -1,\n\tchannelType: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tid: -1,\n\toperatorEmail: '',\n\toperatorId: -1,\n\toperatorName: '',\n\toperatorNo: '',\n\toperatorPhone: '',\n\toperatorType: '',\n\tremark: '',\n\tstatus: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n\twalletId: -1,\n\twithdrawAccount: undefined,\n\twithdrawAccountId: -1,\n\twithdrawNo: '',\n}"
    },
    {
        "bodyKey": "get_/investor/wallet/rebate/list",
        "url": "/investor/wallet/rebate/list",
        "pureUrl": "/investor/wallet/rebate/list",
        "pathReqUrl": "/investor/wallet/rebate/list",
        "method": "get",
        "apiName": "反俑记录",
        "key": "InvestorWalletRebateListGet",
        "fnName": "investorWalletRebateListGet",
        "requestBaseName": "IInvestorWalletRebateListGet",
        "requestName": [
            "IInvestorWalletRebateListGet"
        ],
        "responseBaseName": "OInvestorWalletRebateListGet",
        "responseName": [
            "OInvestorWalletRebateListGet"
        ],
        "responseValueName": [
            "OInvestorWalletRebateListGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "dyvZYlV39i",
                    "enable": true,
                    "name": "pageNum",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "",
                    "type": "number",
                    "id": "ZBrhSx3FiX",
                    "enable": true,
                    "name": "pageSize",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 反俑记录 buildFnGetOrPostCode\n * \n * @param {number} params.pageNum 可选: \n * @param {number} params.pageSize 可选: \n * @return Promise<OInvestorWalletRebateListGet>\n */\nexport const investorWalletRebateListGet = async (params?: IInvestorWalletRebateListGet) => {\n\treturn get<OInvestorWalletRebateListGet>(`/investor/wallet/rebate/list`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 反俑记录 buildReqGetOrPostTyped\n * @url /investor/wallet/rebate/list\n */\nexport interface IInvestorWalletRebateListGet{\n\tpageNum?: number;\n\tpageSize?: number;\n}",
        "resCode": "/**\n * @description 反俑记录 buildResAnyTyped\n * @url /investor/wallet/rebate/list\n */\nexport type OInvestorWalletRebateListGet = {\n}",
        "resValueCode": "/**\n * @description 反俑记录 buildResAnyTyped\n * @url /investor/wallet/rebate/list\n */\nexport const OInvestorWalletRebateListGetValue = {\n}"
    },
    {
        "bodyKey": "get_/publish/corporate/account",
        "url": "/publish/corporate/account",
        "pureUrl": "/publish/corporate/account",
        "pathReqUrl": "/publish/corporate/account",
        "method": "get",
        "apiName": "获取对公账户",
        "key": "PublishCorporateAccountGet",
        "fnName": "publishCorporateAccountGet",
        "requestBaseName": "IPublishCorporateAccountGet",
        "requestName": [
            "IPublishCorporateAccountGet"
        ],
        "responseBaseName": "OPublishCorporateAccountGet",
        "responseName": [
            "OPublishCorporateAccountGet"
        ],
        "responseValueName": [
            "OPublishCorporateAccountGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取对公账户 buildFnGetOrPostCode\n * \n * @return Promise<OPublishCorporateAccountGet>\n */\nexport const publishCorporateAccountGet = async (params?: IPublishCorporateAccountGet) => {\n\treturn get<OPublishCorporateAccountGet>(`/publish/corporate/account`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取对公账户 buildReqGetOrPostTyped\n * @url /publish/corporate/account\n */\nexport interface IPublishCorporateAccountGet{\n}",
        "resCode": "/**\n * @description 获取对公账户 buildResAnyTyped\n * @url /publish/corporate/account\n */\nexport type OPublishCorporateAccountGet = {\n}",
        "resValueCode": "/**\n * @description 获取对公账户 buildResAnyTyped\n * @url /publish/corporate/account\n */\nexport const OPublishCorporateAccountGetValue = {\n}"
    },
    {
        "bodyKey": "get_/publish/country/children/{x}",
        "url": "/publish/country/children/{parentId}",
        "pureUrl": "/publish/country/children/{x}",
        "pathReqUrl": "/publish/country/children/${parentId}",
        "method": "get",
        "apiName": "通过父id获取下级列表",
        "key": "PublishCountryChildrenParentIdGet",
        "fnName": "publishCountryChildrenParentIdGet",
        "requestBaseName": "IPublishCountryChildrenParentIdGet",
        "requestName": [
            "IPublishCountryChildrenParentIdGet"
        ],
        "responseBaseName": "OPublishCountryChildrenParentIdGet",
        "responseName": [
            "OPublishCountryChildrenParentIdGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [
                {
                    "id": "parentId#0",
                    "name": "parentId",
                    "required": true,
                    "description": "",
                    "type": "number",
                    "enable": true
                }
            ],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OPublishCountryChildrenParentIdGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "aliasName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "ancestors": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "chName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "childrenList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "x-apifox-orders": []
                        },
                        "oldType": "array"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "enName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "parentId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "phoneCode": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "sort": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 通过父id获取下级列表 buildFnPathCode\n * @path {number parentId 必填: }\n * @return Promise<OPublishCountryChildrenParentIdGetItem[]>\n */\nexport const publishCountryChildrenParentIdGet = async (parentId: number) => {\n\treturn get<OPublishCountryChildrenParentIdGetItem[]>(`/publish/country/children/${parentId}`)\n}",
        "reqCode": "/**\n * @description 通过父id获取下级列表 buildReqGetOrPostTyped\n * @url /publish/country/children/{parentId}\n */\nexport interface IPublishCountryChildrenParentIdGet{\n}",
        "deleteResponseName": "OPublishCountryChildrenParentIdGet",
        "resCode": "/**\n * @description 通过父id获取下级列表 buildResArrayTyped\n * @url /publish/country/children/{x}\n */\nexport type OPublishCountryChildrenParentIdGetItem = {\n\taliasName: string;\n\tancestors: string;\n\tchildrenList: array;\n\tchName: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tenName: string;\n\tid: number;\n\tparentId: number;\n\tphoneCode: string;\n\tremark: string;\n\tsort: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;  \n}",
        "resValueCode": "/**\n * @description 通过父id获取下级列表 buildResArrayTyped\n * @url /publish/country/children/{x}\n */\nexport const OPublishCountryChildrenParentIdGetItemValue = {\n\taliasName: '',\n\tancestors: '',\n\tchildrenList: undefined,\n\tchName: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tenName: '',\n\tid: -1,\n\tparentId: -1,\n\tphoneCode: '',\n\tremark: '',\n\tsort: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n}"
    },
    {
        "bodyKey": "get_/publish/country/list",
        "url": "/publish/country/list",
        "pureUrl": "/publish/country/list",
        "pathReqUrl": "/publish/country/list",
        "method": "get",
        "apiName": "获取所有国家",
        "key": "PublishCountryListGet",
        "fnName": "publishCountryListGet",
        "requestBaseName": "IPublishCountryListGet",
        "requestName": [
            "IPublishCountryListGet"
        ],
        "responseBaseName": "OPublishCountryListGet",
        "responseName": [
            "OPublishCountryListGetItem"
        ],
        "responseValueName": [],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "中文名称",
                    "type": "string",
                    "id": "jg6quT92uD",
                    "enable": true,
                    "name": "chName",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "OPublishCountryListGetItem",
            "items": {
                "type": "object",
                "properties": {
                    "aliasName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "ancestors": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "chName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "childrenList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "x-apifox-orders": []
                        },
                        "oldType": "array"
                    },
                    "createBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "createById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "createTime": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "enName": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "id": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "parentId": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "phoneCode": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "remark": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "sort": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateBy": {
                        "type": "string",
                        "oldType": "string"
                    },
                    "updateById": {
                        "type": "number",
                        "oldType": "integer"
                    },
                    "updateTime": {
                        "type": "string",
                        "oldType": "string"
                    }
                }
            },
            "oldType": "array"
        },
        "fnCode": "/**\n * @description 获取所有国家 buildFnArrayCode\n * \n * @param {string} params.chName 可选: 中文名称}\n * @return Promise<OPublishCountryListGetItem>\n */\nexport const publishCountryListGet = async (params?: IPublishCountryListGet) => {\n\treturn get<OPublishCountryListGetItem[]>(`/publish/country/list`, {\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取所有国家 buildReqGetOrPostTyped\n * @url /publish/country/list\n */\nexport interface IPublishCountryListGet{\n\tchName?: string; // 中文名称\n}",
        "deleteResponseName": "OPublishCountryListGet",
        "resCode": "/**\n * @description 获取所有国家 buildResArrayTyped\n * @url /publish/country/list\n */\nexport type OPublishCountryListGetItem = {\n\taliasName: string;\n\tancestors: string;\n\tchildrenList: array;\n\tchName: string;\n\tcreateBy: string;\n\tcreateById: number;\n\tcreateTime: string;\n\tenName: string;\n\tid: number;\n\tparentId: number;\n\tphoneCode: string;\n\tremark: string;\n\tsort: number;\n\tupdateBy: string;\n\tupdateById: number;\n\tupdateTime: string;  \n}",
        "resValueCode": "/**\n * @description 获取所有国家 buildResArrayTyped\n * @url /publish/country/list\n */\nexport const OPublishCountryListGetItemValue = {\n\taliasName: '',\n\tancestors: '',\n\tchildrenList: undefined,\n\tchName: '',\n\tcreateBy: '',\n\tcreateById: -1,\n\tcreateTime: '',\n\tenName: '',\n\tid: -1,\n\tparentId: -1,\n\tphoneCode: '',\n\tremark: '',\n\tsort: -1,\n\tupdateBy: '',\n\tupdateById: -1,\n\tupdateTime: '',\n}"
    },
    {
        "bodyKey": "post_/publish/file/private/upload",
        "url": "/publish/file/private/upload",
        "pureUrl": "/publish/file/private/upload",
        "pathReqUrl": "/publish/file/private/upload",
        "method": "post",
        "apiName": "上传文件-私有",
        "key": "PublishFilePrivateUploadPost",
        "fnName": "publishFilePrivateUploadPost",
        "requestBaseName": "IPublishFilePrivateUploadPost",
        "requestName": [
            "IPublishFilePrivateUploadPostFormData"
        ],
        "responseBaseName": "OPublishFilePrivateUploadPost",
        "responseName": [
            "OPublishFilePrivateUploadPost"
        ],
        "responseValueName": [
            "OPublishFilePrivateUploadPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "",
                    "type": "file",
                    "id": "WY72oelUh3",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 上传文件-私有 buildFnFileCode\n * \n * @param {file} params.files 必填: \n * @return Promise<OPublishFilePrivateUploadPost>\n */\nexport const publishFilePrivateUploadPost = async (params?: IPublishFilePrivateUploadPostFormData) => {\n\treturn post<OPublishFilePrivateUploadPost>(`/publish/file/private/upload`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IPublishFilePrivateUploadPost",
        "reqCode": "/**\n * @description 上传文件-私有 buildReqFileTyped\n * @url /publish/file/private/upload\n */\nexport interface IPublishFilePrivateUploadPostFormData extends FormData{\n\tappend: (name: 'files', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 上传文件-私有 buildResAnyTyped\n * @url /publish/file/private/upload\n */\nexport type OPublishFilePrivateUploadPost = {\n}",
        "resValueCode": "/**\n * @description 上传文件-私有 buildResAnyTyped\n * @url /publish/file/private/upload\n */\nexport const OPublishFilePrivateUploadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/publish/file/signatureUrl",
        "url": "/publish/file/signatureUrl",
        "pureUrl": "/publish/file/signatureUrl",
        "pathReqUrl": "/publish/file/signatureUrl",
        "method": "get",
        "apiName": "获取私有文件签名地址",
        "key": "PublishFileSignatureUrlGet",
        "fnName": "publishFileSignatureUrlGet",
        "requestBaseName": "IPublishFileSignatureUrlGet",
        "requestName": [
            "IPublishFileSignatureUrlGet"
        ],
        "responseBaseName": "OPublishFileSignatureUrlGet",
        "responseName": [
            "OPublishFileSignatureUrlGet"
        ],
        "responseValueName": [
            "OPublishFileSignatureUrlGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "oss图片地址",
                    "type": "string",
                    "id": "5RV1k1hl4R",
                    "enable": true,
                    "name": "url",
                    "sampleValue": ""
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取私有文件签名地址 buildFnGetOrPostCode\n * \n * @param {string} params.url 必填: oss图片地址\n * @return Promise<OPublishFileSignatureUrlGet>\n */\nexport const publishFileSignatureUrlGet = async (params?: IPublishFileSignatureUrlGet) => {\n\treturn get<OPublishFileSignatureUrlGet>(`/publish/file/signatureUrl`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取私有文件签名地址 buildReqGetOrPostTyped\n * @url /publish/file/signatureUrl\n */\nexport interface IPublishFileSignatureUrlGet{\n\turl: string; // oss图片地址\n}",
        "resCode": "/**\n * @description 获取私有文件签名地址 buildResAnyTyped\n * @url /publish/file/signatureUrl\n */\nexport type OPublishFileSignatureUrlGet = {\n}",
        "resValueCode": "/**\n * @description 获取私有文件签名地址 buildResAnyTyped\n * @url /publish/file/signatureUrl\n */\nexport const OPublishFileSignatureUrlGetValue = {\n}"
    },
    {
        "bodyKey": "post_/publish/file/upload",
        "url": "/publish/file/upload",
        "pureUrl": "/publish/file/upload",
        "pathReqUrl": "/publish/file/upload",
        "method": "post",
        "apiName": "上传文件-公共",
        "key": "PublishFileUploadPost",
        "fnName": "publishFileUploadPost",
        "requestBaseName": "IPublishFileUploadPost",
        "requestName": [
            "IPublishFileUploadPostFormData"
        ],
        "responseBaseName": "OPublishFileUploadPost",
        "responseName": [
            "OPublishFileUploadPost"
        ],
        "responseValueName": [
            "OPublishFileUploadPostValue"
        ],
        "request": {
            "contentType": "multipart/form-data",
            "params": [
                {
                    "required": true,
                    "description": "",
                    "type": "file",
                    "id": "WY72oelUh3",
                    "enable": true,
                    "name": "files",
                    "sampleValue": "",
                    "oldType": "file"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 上传文件-公共 buildFnFileCode\n * \n * @param {file} params.files 必填: \n * @return Promise<OPublishFileUploadPost>\n */\nexport const publishFileUploadPost = async (params?: IPublishFileUploadPostFormData) => {\n\treturn post<OPublishFileUploadPost>(`/publish/file/upload`, {\n\t\tparams  \n\t})\n}",
        "deleteRequestName": "IPublishFileUploadPost",
        "reqCode": "/**\n * @description 上传文件-公共 buildReqFileTyped\n * @url /publish/file/upload\n */\nexport interface IPublishFileUploadPostFormData extends FormData{\n\tappend: (name: 'files', value: string | Blob, fileName?: string) => void;\n}",
        "resCode": "/**\n * @description 上传文件-公共 buildResAnyTyped\n * @url /publish/file/upload\n */\nexport type OPublishFileUploadPost = {\n}",
        "resValueCode": "/**\n * @description 上传文件-公共 buildResAnyTyped\n * @url /publish/file/upload\n */\nexport const OPublishFileUploadPostValue = {\n}"
    },
    {
        "bodyKey": "get_/publish/invitation/rule",
        "url": "/publish/invitation/rule",
        "pureUrl": "/publish/invitation/rule",
        "pathReqUrl": "/publish/invitation/rule",
        "method": "get",
        "apiName": "获取邀请规则",
        "key": "PublishInvitationRuleGet",
        "fnName": "publishInvitationRuleGet",
        "requestBaseName": "IPublishInvitationRuleGet",
        "requestName": [
            "IPublishInvitationRuleGet"
        ],
        "responseBaseName": "OPublishInvitationRuleGet",
        "responseName": [
            "OPublishInvitationRuleGet"
        ],
        "responseValueName": [
            "OPublishInvitationRuleGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 获取邀请规则 buildFnGetOrPostCode\n * \n * @return Promise<OPublishInvitationRuleGet>\n */\nexport const publishInvitationRuleGet = async (params?: IPublishInvitationRuleGet) => {\n\treturn get<OPublishInvitationRuleGet>(`/publish/invitation/rule`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 获取邀请规则 buildReqGetOrPostTyped\n * @url /publish/invitation/rule\n */\nexport interface IPublishInvitationRuleGet{\n}",
        "resCode": "/**\n * @description 获取邀请规则 buildResAnyTyped\n * @url /publish/invitation/rule\n */\nexport type OPublishInvitationRuleGet = {\n}",
        "resValueCode": "/**\n * @description 获取邀请规则 buildResAnyTyped\n * @url /publish/invitation/rule\n */\nexport const OPublishInvitationRuleGetValue = {\n}"
    },
    {
        "bodyKey": "post_/tourist/email/forgetPasswordSend",
        "url": "/tourist/email/forgetPasswordSend",
        "pureUrl": "/tourist/email/forgetPasswordSend",
        "pathReqUrl": "/tourist/email/forgetPasswordSend",
        "method": "post",
        "apiName": "忘记密码-发送重置密码链接邮件",
        "key": "TouristEmailForgetPasswordSendPost",
        "fnName": "touristEmailForgetPasswordSendPost",
        "requestBaseName": "ITouristEmailForgetPasswordSendPost",
        "requestName": [
            "ITouristEmailForgetPasswordSendPost"
        ],
        "responseBaseName": "OTouristEmailForgetPasswordSendPost",
        "responseName": [
            "OTouristEmailForgetPasswordSendPost"
        ],
        "responseValueName": [
            "OTouristEmailForgetPasswordSendPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 忘记密码-发送重置密码链接邮件 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: 邮箱\n * @return Promise<OTouristEmailForgetPasswordSendPost>\n */\nexport const touristEmailForgetPasswordSendPost = async (params?: ITouristEmailForgetPasswordSendPost) => {\n\treturn post<OTouristEmailForgetPasswordSendPost>(`/tourist/email/forgetPasswordSend`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 忘记密码-发送重置密码链接邮件 buildReqGetOrPostTyped\n * @url /tourist/email/forgetPasswordSend\n */\nexport interface ITouristEmailForgetPasswordSendPost{\n\temail: string; // 邮箱\n}",
        "resCode": "/**\n * @description 忘记密码-发送重置密码链接邮件 buildResAnyTyped\n * @url /tourist/email/forgetPasswordSend\n */\nexport type OTouristEmailForgetPasswordSendPost = {\n}",
        "resValueCode": "/**\n * @description 忘记密码-发送重置密码链接邮件 buildResAnyTyped\n * @url /tourist/email/forgetPasswordSend\n */\nexport const OTouristEmailForgetPasswordSendPostValue = {\n}"
    },
    {
        "bodyKey": "post_/tourist/email/registerCode",
        "url": "/tourist/email/registerCode",
        "pureUrl": "/tourist/email/registerCode",
        "pathReqUrl": "/tourist/email/registerCode",
        "method": "post",
        "apiName": "注册-发送邮箱验证码",
        "key": "TouristEmailRegisterCodePost",
        "fnName": "touristEmailRegisterCodePost",
        "requestBaseName": "ITouristEmailRegisterCodePost",
        "requestName": [
            "ITouristEmailRegisterCodePost"
        ],
        "responseBaseName": "OTouristEmailRegisterCodePost",
        "responseName": [
            "OTouristEmailRegisterCodePost"
        ],
        "responseValueName": [
            "OTouristEmailRegisterCodePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 注册-发送邮箱验证码 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: 邮箱\n * @return Promise<OTouristEmailRegisterCodePost>\n */\nexport const touristEmailRegisterCodePost = async (params?: ITouristEmailRegisterCodePost) => {\n\treturn post<OTouristEmailRegisterCodePost>(`/tourist/email/registerCode`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 注册-发送邮箱验证码 buildReqGetOrPostTyped\n * @url /tourist/email/registerCode\n */\nexport interface ITouristEmailRegisterCodePost{\n\temail: string; // 邮箱\n}",
        "resCode": "/**\n * @description 注册-发送邮箱验证码 buildResAnyTyped\n * @url /tourist/email/registerCode\n */\nexport type OTouristEmailRegisterCodePost = {\n}",
        "resValueCode": "/**\n * @description 注册-发送邮箱验证码 buildResAnyTyped\n * @url /tourist/email/registerCode\n */\nexport const OTouristEmailRegisterCodePostValue = {\n}"
    },
    {
        "bodyKey": "post_/tourist/forgetPassword",
        "url": "/tourist/forgetPassword",
        "pureUrl": "/tourist/forgetPassword",
        "pathReqUrl": "/tourist/forgetPassword",
        "method": "post",
        "apiName": "重置密码",
        "key": "TouristForgetPasswordPost",
        "fnName": "touristForgetPasswordPost",
        "requestBaseName": "ITouristForgetPasswordPost",
        "requestName": [
            "ITouristForgetPasswordPost"
        ],
        "responseBaseName": "OTouristForgetPasswordPost",
        "responseName": [
            "OTouristForgetPasswordPost"
        ],
        "responseValueName": [
            "OTouristForgetPasswordPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "code",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "新密码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 重置密码 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: code\n * @param {string} params.password 必填: 新密码\n * @return Promise<OTouristForgetPasswordPost>\n */\nexport const touristForgetPasswordPost = async (params?: ITouristForgetPasswordPost) => {\n\treturn post<OTouristForgetPasswordPost>(`/tourist/forgetPassword`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 重置密码 buildReqGetOrPostTyped\n * @url /tourist/forgetPassword\n */\nexport interface ITouristForgetPasswordPost{\n\tcode: string; // code\n\tpassword: string; // 新密码\n}",
        "resCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /tourist/forgetPassword\n */\nexport type OTouristForgetPasswordPost = {\n}",
        "resValueCode": "/**\n * @description 重置密码 buildResAnyTyped\n * @url /tourist/forgetPassword\n */\nexport const OTouristForgetPasswordPostValue = {\n}"
    },
    {
        "bodyKey": "post_/tourist/login/phone",
        "url": "/tourist/login/phone",
        "pureUrl": "/tourist/login/phone",
        "pathReqUrl": "/tourist/login/phone",
        "method": "post",
        "apiName": "登录-手机",
        "key": "TouristLoginPhonePost",
        "fnName": "touristLoginPhonePost",
        "requestBaseName": "ITouristLoginPhonePost",
        "requestName": [
            "ITouristLoginPhonePost"
        ],
        "responseBaseName": "OTouristLoginPhonePost",
        "responseName": [
            "OTouristLoginPhonePost"
        ],
        "responseValueName": [
            "OTouristLoginPhonePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "验证码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "type": "string",
                    "description": "手机号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "uuid",
                    "type": "string",
                    "description": "验证码token",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "type": "OTouristLoginPhonePost",
            "x-apifox-refs": {
                "01GM9YX4XPB1AGJQBJETKAF218": {
                    "$ref": "#/definitions/34077680",
                    "x-apifox-overrides": {}
                }
            },
            "properties": {
                "googleCode": {
                    "type": "boolean",
                    "description": "绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。"
                }
            },
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 登录-手机 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: 验证码\n * @param {string} params.phone 必填: 手机号\n * @param {string} params.uuid 必填: 验证码token\n * @return Promise<OTouristLoginPhonePost>\n */\nexport const touristLoginPhonePost = async (params?: ITouristLoginPhonePost) => {\n\treturn post<OTouristLoginPhonePost>(`/tourist/login/phone`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 登录-手机 buildReqGetOrPostTyped\n * @url /tourist/login/phone\n */\nexport interface ITouristLoginPhonePost{\n\tcode: string; // 验证码\n\tphone: string; // 手机号\n\tuuid: string; // 验证码token\n}",
        "resCode": "/**\n * @description 登录-手机 buildResAnyTyped\n * @url /tourist/login/phone\n */\nexport type OTouristLoginPhonePost = {\n\tgoogleCode: boolean; // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}",
        "resValueCode": "/**\n * @description 登录-手机 buildResAnyTyped\n * @url /tourist/login/phone\n */\nexport const OTouristLoginPhonePostValue = {\n\tgoogleCode: false, // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}"
    },
    {
        "bodyKey": "post_/tourist/login",
        "url": "/tourist/login",
        "pureUrl": "/tourist/login",
        "pathReqUrl": "/tourist/login",
        "method": "post",
        "apiName": "登录",
        "key": "TouristLoginPost",
        "fnName": "touristLoginPost",
        "requestBaseName": "ITouristLoginPost",
        "requestName": [
            "ITouristLoginPost"
        ],
        "responseBaseName": "OTouristLoginPost",
        "responseName": [
            "OTouristLoginPost"
        ],
        "responseValueName": [
            "OTouristLoginPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "googleCode",
                    "type": "string",
                    "description": "谷歌验证码；绑定并开启时需要传。",
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "密码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "description": "返回数据",
            "type": "OTouristLoginPost",
            "x-apifox-refs": {
                "01GM9YX4XPB1AGJQBJETKAF218": {
                    "$ref": "#/definitions/34077680",
                    "x-apifox-overrides": {}
                }
            },
            "properties": {
                "googleCode": {
                    "type": "boolean",
                    "description": "绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。"
                }
            },
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 登录 buildFnGetOrPostCode\n * \n * @param {string} params.email 必填: 邮箱\n * @param {string} params.googleCode 可选: 谷歌验证码；绑定并开启时需要传。\n * @param {string} params.password 必填: 密码\n * @return Promise<OTouristLoginPost>\n */\nexport const touristLoginPost = async (params?: ITouristLoginPost) => {\n\treturn post<OTouristLoginPost>(`/tourist/login`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 登录 buildReqGetOrPostTyped\n * @url /tourist/login\n */\nexport interface ITouristLoginPost{\n\temail: string; // 邮箱\n\tgoogleCode?: string; // 谷歌验证码；绑定并开启时需要传。\n\tpassword: string; // 密码\n}",
        "resCode": "/**\n * @description 登录 buildResAnyTyped\n * @url /tourist/login\n */\nexport type OTouristLoginPost = {\n\tgoogleCode: boolean; // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}",
        "resValueCode": "/**\n * @description 登录 buildResAnyTyped\n * @url /tourist/login\n */\nexport const OTouristLoginPostValue = {\n\tgoogleCode: false, // 绑定谷歌验证并已开启谷歌二次验证；该字段返回true则表示在登录时需要填写谷歌验证码，此时token不会返回。\n}"
    },
    {
        "bodyKey": "post_/tourist/register/phone",
        "url": "/tourist/register/phone",
        "pureUrl": "/tourist/register/phone",
        "pathReqUrl": "/tourist/register/phone",
        "method": "post",
        "apiName": "注册-手机",
        "key": "TouristRegisterPhonePost",
        "fnName": "touristRegisterPhonePost",
        "requestBaseName": "ITouristRegisterPhonePost",
        "requestName": [
            "ITouristRegisterPhonePost"
        ],
        "responseBaseName": "OTouristRegisterPhonePost",
        "responseName": [
            "OTouristRegisterPhonePost"
        ],
        "responseValueName": [
            "OTouristRegisterPhonePostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "验证码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "invitationNo",
                    "type": "string",
                    "description": "邀请链接no",
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "登录密码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "phone",
                    "pattern": "[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?",
                    "type": "string",
                    "description": "手机号",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "uuid",
                    "type": "string",
                    "description": "验证码token",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 注册-手机 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: 验证码\n * @param {string} params.invitationNo 可选: 邀请链接no\n * @param {string} params.password 必填: 登录密码\n * @param {string} params.phone 必填: 手机号\n * @param {string} params.uuid 必填: 验证码token\n * @return Promise<OTouristRegisterPhonePost>\n */\nexport const touristRegisterPhonePost = async (params?: ITouristRegisterPhonePost) => {\n\treturn post<OTouristRegisterPhonePost>(`/tourist/register/phone`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 注册-手机 buildReqGetOrPostTyped\n * @url /tourist/register/phone\n */\nexport interface ITouristRegisterPhonePost{\n\tcode: string; // 验证码\n\tinvitationNo?: string; // 邀请链接no\n\tpassword: string; // 登录密码\n\tphone: string; // 手机号\n\tuuid: string; // 验证码token\n}",
        "resCode": "/**\n * @description 注册-手机 buildResAnyTyped\n * @url /tourist/register/phone\n */\nexport type OTouristRegisterPhonePost = {\n}",
        "resValueCode": "/**\n * @description 注册-手机 buildResAnyTyped\n * @url /tourist/register/phone\n */\nexport const OTouristRegisterPhonePostValue = {\n}"
    },
    {
        "bodyKey": "post_/tourist/register",
        "url": "/tourist/register",
        "pureUrl": "/tourist/register",
        "pathReqUrl": "/tourist/register",
        "method": "post",
        "apiName": "注册",
        "key": "TouristRegisterPost",
        "fnName": "touristRegisterPost",
        "requestBaseName": "ITouristRegisterPost",
        "requestName": [
            "ITouristRegisterPost"
        ],
        "responseBaseName": "OTouristRegisterPost",
        "responseName": [
            "OTouristRegisterPost"
        ],
        "responseValueName": [
            "OTouristRegisterPostValue"
        ],
        "request": {
            "contentType": "application/json",
            "params": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "验证码",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "email",
                    "pattern": "[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?",
                    "type": "string",
                    "description": "邮箱",
                    "required": true,
                    "oldType": "string"
                },
                {
                    "name": "invitationNo",
                    "type": "string",
                    "description": "邀请链接no",
                    "oldType": "string"
                },
                {
                    "name": "password",
                    "type": "string",
                    "description": "登录密码",
                    "required": true,
                    "oldType": "string"
                }
            ],
            "query": [],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any",
            "description": "返回数据",
            "properties": {},
            "oldType": "object"
        },
        "fnCode": "/**\n * @description 注册 buildFnGetOrPostCode\n * \n * @param {string} params.code 必填: 验证码\n * @param {string} params.email 必填: 邮箱\n * @param {string} params.invitationNo 可选: 邀请链接no\n * @param {string} params.password 必填: 登录密码\n * @return Promise<OTouristRegisterPost>\n */\nexport const touristRegisterPost = async (params?: ITouristRegisterPost) => {\n\treturn post<OTouristRegisterPost>(`/tourist/register`,{\n\t\tparams,\n\t\theaders: { 'Content-Type': 'application/json'}\n\t})\n}",
        "reqCode": "/**\n * @description 注册 buildReqGetOrPostTyped\n * @url /tourist/register\n */\nexport interface ITouristRegisterPost{\n\tcode: string; // 验证码\n\temail: string; // 邮箱\n\tinvitationNo?: string; // 邀请链接no\n\tpassword: string; // 登录密码\n}",
        "resCode": "/**\n * @description 注册 buildResAnyTyped\n * @url /tourist/register\n */\nexport type OTouristRegisterPost = {\n}",
        "resValueCode": "/**\n * @description 注册 buildResAnyTyped\n * @url /tourist/register\n */\nexport const OTouristRegisterPostValue = {\n}"
    },
    {
        "bodyKey": "get_/wechat/agentSignature/config",
        "url": "/wechat/agentSignature/config",
        "pureUrl": "/wechat/agentSignature/config",
        "pathReqUrl": "/wechat/agentSignature/config",
        "method": "get",
        "apiName": "注册企业微信客户端第三方应用鉴权信息",
        "key": "WechatAgentSignatureConfigGet",
        "fnName": "wechatAgentSignatureConfigGet",
        "requestBaseName": "IWechatAgentSignatureConfigGet",
        "requestName": [
            "IWechatAgentSignatureConfigGet"
        ],
        "responseBaseName": "OWechatAgentSignatureConfigGet",
        "responseName": [
            "OWechatAgentSignatureConfigGet"
        ],
        "responseValueName": [
            "OWechatAgentSignatureConfigGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "string",
                    "id": "ICrMfPmsDx",
                    "enable": true,
                    "name": "url",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "任务中心应用 传固定值 todo",
                    "type": "string",
                    "id": "vTuxLnFl6O",
                    "enable": true,
                    "name": "appType"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 注册企业微信客户端第三方应用鉴权信息 buildFnGetOrPostCode\n * \n * @param {string} params.url 必填: \n * @param {string} params.appType 可选: 任务中心应用 传固定值 todo\n * @return Promise<OWechatAgentSignatureConfigGet>\n */\nexport const wechatAgentSignatureConfigGet = async (params?: IWechatAgentSignatureConfigGet) => {\n\treturn get<OWechatAgentSignatureConfigGet>(`/wechat/agentSignature/config`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 注册企业微信客户端第三方应用鉴权信息 buildReqGetOrPostTyped\n * @url /wechat/agentSignature/config\n */\nexport interface IWechatAgentSignatureConfigGet{\n\turl: string;\n\tappType?: string; // 任务中心应用 传固定值 todo\n}",
        "resCode": "/**\n * @description 注册企业微信客户端第三方应用鉴权信息 buildResAnyTyped\n * @url /wechat/agentSignature/config\n */\nexport type OWechatAgentSignatureConfigGet = {\n}",
        "resValueCode": "/**\n * @description 注册企业微信客户端第三方应用鉴权信息 buildResAnyTyped\n * @url /wechat/agentSignature/config\n */\nexport const OWechatAgentSignatureConfigGetValue = {\n}"
    },
    {
        "bodyKey": "get_/wechat/jsSignature/config",
        "url": "/wechat/jsSignature/config",
        "pureUrl": "/wechat/jsSignature/config",
        "pathReqUrl": "/wechat/jsSignature/config",
        "method": "get",
        "apiName": "注册企业微信客户端js接口鉴权信息",
        "key": "WechatJsSignatureConfigGet",
        "fnName": "wechatJsSignatureConfigGet",
        "requestBaseName": "IWechatJsSignatureConfigGet",
        "requestName": [
            "IWechatJsSignatureConfigGet"
        ],
        "responseBaseName": "OWechatJsSignatureConfigGet",
        "responseName": [
            "OWechatJsSignatureConfigGet"
        ],
        "responseValueName": [
            "OWechatJsSignatureConfigGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": true,
                    "description": "",
                    "type": "string",
                    "id": "ICrMfPmsDx",
                    "enable": true,
                    "name": "url",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "任务中心应用 传固定值 todo",
                    "type": "string",
                    "id": "0InG7cratM",
                    "enable": true,
                    "name": "appType"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 注册企业微信客户端js接口鉴权信息 buildFnGetOrPostCode\n * \n * @param {string} params.url 必填: \n * @param {string} params.appType 可选: 任务中心应用 传固定值 todo\n * @return Promise<OWechatJsSignatureConfigGet>\n */\nexport const wechatJsSignatureConfigGet = async (params?: IWechatJsSignatureConfigGet) => {\n\treturn get<OWechatJsSignatureConfigGet>(`/wechat/jsSignature/config`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 注册企业微信客户端js接口鉴权信息 buildReqGetOrPostTyped\n * @url /wechat/jsSignature/config\n */\nexport interface IWechatJsSignatureConfigGet{\n\turl: string;\n\tappType?: string; // 任务中心应用 传固定值 todo\n}",
        "resCode": "/**\n * @description 注册企业微信客户端js接口鉴权信息 buildResAnyTyped\n * @url /wechat/jsSignature/config\n */\nexport type OWechatJsSignatureConfigGet = {\n}",
        "resValueCode": "/**\n * @description 注册企业微信客户端js接口鉴权信息 buildResAnyTyped\n * @url /wechat/jsSignature/config\n */\nexport const OWechatJsSignatureConfigGetValue = {\n}"
    },
    {
        "bodyKey": "get_/wechat/oauth2/authorize",
        "url": "/wechat/oauth2/authorize",
        "pureUrl": "/wechat/oauth2/authorize",
        "pathReqUrl": "/wechat/oauth2/authorize",
        "method": "get",
        "apiName": "企业微信构造网页授权链接回调地址 获取用户敏感信息 需要客户端授权操作（可静默）",
        "key": "WechatOauth2AuthorizeGet",
        "fnName": "wechatOauth2AuthorizeGet",
        "requestBaseName": "IWechatOauth2AuthorizeGet",
        "requestName": [
            "IWechatOauth2AuthorizeGet"
        ],
        "responseBaseName": "OWechatOauth2AuthorizeGet",
        "responseName": [
            "OWechatOauth2AuthorizeGet"
        ],
        "responseValueName": [
            "OWechatOauth2AuthorizeGetValue"
        ],
        "request": {
            "contentType": "none",
            "params": [],
            "query": [
                {
                    "required": false,
                    "description": "跳转页面路径 如 user.html",
                    "type": "string",
                    "id": "5ccnnuppui",
                    "enable": true,
                    "name": "page",
                    "sampleValue": ""
                },
                {
                    "required": false,
                    "description": "任务中心应用 传固定值 todo",
                    "type": "string",
                    "id": "u5x6HK8T6J",
                    "enable": true,
                    "name": "appType"
                }
            ],
            "path": [],
            "cookie": [],
            "header": []
        },
        "response": {
            "type": "any"
        },
        "fnCode": "/**\n * @description 企业微信构造网页授权链接回调地址 获取用户敏感信息 需要客户端授权操作（可静默） buildFnGetOrPostCode\n * \n * @param {string} params.page 可选: 跳转页面路径 如 user.html\n * @param {string} params.appType 可选: 任务中心应用 传固定值 todo\n * @return Promise<OWechatOauth2AuthorizeGet>\n */\nexport const wechatOauth2AuthorizeGet = async (params?: IWechatOauth2AuthorizeGet) => {\n\treturn get<OWechatOauth2AuthorizeGet>(`/wechat/oauth2/authorize`,{\n\t\tparams\n\t})\n}",
        "reqCode": "/**\n * @description 企业微信构造网页授权链接回调地址 获取用户敏感信息 需要客户端授权操作（可静默） buildReqGetOrPostTyped\n * @url /wechat/oauth2/authorize\n */\nexport interface IWechatOauth2AuthorizeGet{\n\tpage?: string; // 跳转页面路径 如 user.html\n\tappType?: string; // 任务中心应用 传固定值 todo\n}",
        "resCode": "/**\n * @description 企业微信构造网页授权链接回调地址 获取用户敏感信息 需要客户端授权操作（可静默） buildResAnyTyped\n * @url /wechat/oauth2/authorize\n */\nexport type OWechatOauth2AuthorizeGet = {\n}",
        "resValueCode": "/**\n * @description 企业微信构造网页授权链接回调地址 获取用户敏感信息 需要客户端授权操作（可静默） buildResAnyTyped\n * @url /wechat/oauth2/authorize\n */\nexport const OWechatOauth2AuthorizeGetValue = {\n}"
    }
]